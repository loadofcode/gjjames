@charset "UTF-8";
html, body {
  margin: 0;
  padding: 0;
  height: 100%; }

html {
  font-size: 10px; }

body {
  background: #53279F; }

#container {
  min-height: 100%;
  position: relative; }
  #container .content {
    padding-bottom: 260px; }
    #container .content .admin__area {
      margin-bottom: -30px; }

.admin__area {
  display: -ms-flexbox;
  display: flex; }
  @media all and (max-width: 900px) {
    .admin__area {
      -ms-flex-direction: column;
          flex-direction: column; } }

.inner {
  max-width: 1350px;
  margin: 0 auto; }
  @media all and (max-width: 1400px) {
    .inner {
      padding: 2rem; } }

footer {
  height: 230px;
  background-image: linear-gradient(90deg, #1F085F 0%, #53279F 100%);
  position: absolute;
  bottom: 0;
  width: 100%; }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

img {
  max-width: 100%; }

/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
/* Document
   ========================================================================== */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: 'panama';
  src: url("/fonts/panama-bold-webfont.woff2") format("woff2"), url("/fonts/panama-bold-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

html {
  font-size: 10px; }

body {
  font-size: 1.5rem;
  color: #303030; }

h1, h2, h3, h4, h5, h6 {
  font-family: 'Panama';
  font-weight: 600; }

a {
  text-decoration: none;
  color: #303030; }

p a {
  border-bottom: 2px solid #FFC40E; }

p {
  line-height: 2;
  font-size: 1.6rem; }

.title, .title--product {
  word-wrap: break-word;
  position: relative;
  z-index: 2;
  margin: 0;
  font-size: 40px;
  z-index: 2;
  line-height: 1.1;
  line-height: 1.1; }
  .title--long, .title--product--long {
    font-size: 30px; }
  .title:before, .title--product:before {
    content: '';
    width: 50px;
    left: 0;
    top: 0;
    height: 100%;
    display: block;
    position: absolute;
    z-index: -1;
    -ms-transform: skew(-5deg);
        transform: skew(-5deg); }
  .title a, .title--product a {
    border-bottom: 0;
    background-image: linear-gradient(to right, rgba(255, 196, 14, 0.8) 100%, rgba(255, 196, 14, 0.8) 50%); }

.title--product {
  font-size: 14px; }

.title--single {
  max-width: 600px;
  margin-top: -9rem;
  font-size: 10rem;
  text-align: center; }

input,
textarea {
  width: 100%;
  padding: 10px;
  border: 1px solid #e6e6e6; }
  input.input--error,
  textarea.input--error {
    border-color: red; }

label {
  padding: 10px 0;
  display: block; }

.form {
  background: white;
  padding: 2rem;
  box-shadow: linear-gradient(90deg, #48ded4 0%, #a026bf 20%, #e82c75 60%, #FFC40E 85%, #48ded4 95%); }
  .form + .form {
    margin-top: 4rem; }
  .form h2 {
    margin: 0;
    font-size: 2rem;
    padding-bottom: 2rem;
    margin-bottom: 2rem;
    border-bottom: 1px solid #e6e6e6; }

.form--flex {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column; }

.login__form {
  width: 500px;
  margin: 50px auto; }
  .login__form .button {
    margin-top: 20px; }

.search {
  position: relative;
  width: 100%;
  display: -ms-flexbox;
  display: flex; }
  .search__results {
    background: white;
    position: absolute;
    width: 100%;
    top: 47px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    z-index: 5;
    left: 0; }
    @media all and (max-width: 900px) {
      .search__results {
        top: 43px; } }
  .search__input {
    font-size: 20px;
    background: none;
    color: #fff;
    outline: 0;
    border: 0; }
  .search__result {
    padding: 10px;
    display: block;
    border-bottom: 1px solid #ececec; }
    .search__result--active {
      background: #f1f1f1; }

@keyframes slideIn {
  0% {
    transform: translateX(-10px); }
  50% {
    transform: translateX(10px); }
  100% {
    transform: translateX(0px); } }

.flash {
  background: white;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);
  margin-bottom: 2rem;
  padding: 2rem;
  position: relative;
  z-index: 1;
  border-radius: 3px;
  display: -ms-flexbox;
  display: flex;
  animation: slideIn forwards .1s ease-in-out 2;
  animation-timing-function: cubic-bezier(0.01, 1.68, 0.58, 1); }
  .flash + .flash {
    animation-delay: 0.55s; }
    .flash + .flash + .flash {
      animation-delay: 0.6s; }
  .flash__text {
    -ms-flex: 1;
        flex: 1; }
  .flash__remove {
    background: none;
    border: 0; }
    .flash__remove:hover {
      color: #FFC40E; }
  .flash:after {
    content: '';
    display: block;
    background: white;
    position: absolute;
    width: calc(100% - 16px);
    height: calc(100% - 16px);
    top: 8px;
    left: 8px;
    z-index: -1;
    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.1);
    border-radius: 3px; }
  .flash--success {
    background: linear-gradient(135deg, #d2ff52 0%, #91e842 100%); }
  .flash--error {
    background: linear-gradient(20deg, red 0%, #c80000 100%); }
  .flash--info {
    background: linear-gradient(35deg, #f1e767 0%, #feb645 100%); }
  .flash p {
    margin: 0; }

.nav {
  display: -ms-flexbox;
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0 170px;
  -ms-flex-pack: justify;
      justify-content: space-between;
  /* Indigo Nav Background: */
  background-image: linear-gradient(90deg, #1F085F 0%, #53279F 100%); }
  .nav__section {
    display: -ms-flexbox;
    display: flex; }
    .nav__section--search {
      -ms-flex: 0 1 auto;
          flex: 0 1 auto; }
  .nav__item {
    width: 100%;
    display: -ms-flexbox;
    display: flex; }
  .nav__link {
    color: white;
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    text-transform: uppercase;
    padding: 1.2rem 2rem 1rem 2rem;
    display: block;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex-pack: center;
        justify-content: center;
    transition: transform 0.2s;
    border-bottom: 5px solid transparent; }
    .nav__link svg {
      width: 40px;
      transition: all 0.2s;
      fill: white;
      margin-bottom: 1rem; }
    .nav__link:hover, .nav__link--active {
      border-bottom-color: white; }
      .nav__link:hover svg, .nav__link--active svg {
        -ms-transform: scale(1.2);
            transform: scale(1.2); }
    .nav__link--logo:hover svg {
      -ms-transform: none;
          transform: none; }
    .nav__link--logo svg {
      width: 150px;
      margin: 0; }
  .nav.footer {
    -ms-flex-pack: center;
        justify-content: center;
    color: white; }
    .nav.footer li {
      padding: 2rem; }
    .nav.footer li:nth-child(2) {
      border-left: 1px solid white; }
    .nav.footer span {
      color: white; }

@media all and (max-width: 1740px) {
  .nav {
    padding: 0 50px; } }

@media all and (max-width: 1200px) {
  .nav {
    padding: 0; }
    .nav__link {
      padding-left: 1rem;
      padding-right: 1rem; }
      .nav__link svg {
        width: 30px; }
      .nav__link--logo svg {
        width: 100px; } }

@media all and (min-width: 901px) {
  .nav__section--search {
    width: 40%;
    padding: 0 15px; }
    .nav__section--search .search {
      border: 2px white solid;
      height: 50px;
      border-radius: 4px;
      top: 45px; } }

@media all and (max-width: 900px) {
  .nav {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
    .nav__section {
      -ms-flex-order: 1;
          order: 1; }
      .nav__section--search {
        border-top: 1px solid rgba(255, 255, 255, 0.1);
        -ms-flex-order: 2;
            order: 2;
        width: 100%; } }

@media all and (max-width: 650px) {
  .nav__section {
    width: 100%; }
    .nav__section--user {
      -ms-flex-order: -1;
          order: -1;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1); }
      .nav__section--user .avatar {
        min-width: 20px;
        height: 20px; }
      .nav__section--user svg {
        display: none; }
  .nav__item {
    width: 33.333333%; }
  .nav__link {
    width: 100%; }
    .nav__link svg {
      max-width: 100%; }
    .nav__link--logo svg {
      width: 100%; }
  .heart-count:before {
    content: '\2665\FE0F';
    margin-right: 1rem; } }

a.admin__link {
  border-right: none; }

.table {
  width: 100%; }
  .table td {
    padding: 5px; }
  .table tr:nth-child(even) {
    background: white; }
  .table tr:nth-child(odd):not(:first-child) {
    background: #f7f7f7; }
  .table thead tr {
    background: #303030;
    color: white; }

.stores {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: -1.25em 0 0 -1.25em; }
  @media all and (max-width: 1024px) {
    .stores {
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; } }

.store {
  background: white;
  margin: 1.25em 0 0 1.25em;
  width: calc(33.3333% - 14.25em);
  margin-bottom: 1.5em;
  width: 18.5%;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1), 0 5px 10px rgba(0, 0, 0, 0.05);
  min-height: 246px;
  overflow: hidden; }
  .store--wide {
    width: 100%; }
  .store__details {
    padding: 1rem; }
    .store__details p {
      line-height: 1.2;
      margin-bottom: 0; }
  .store:hover img {
    -ms-transform: scale(1.1);
        transform: scale(1.1); }
  @media all and (max-width: 1240px) {
    .store {
      width: 18%; } }
  @media all and (max-width: 1100px) {
    .store {
      width: 23%; } }
  @media all and (max-width: 960px) {
    .store {
      width: calc(50% - 1.25em); } }
  @media all and (max-width: 550px) {
    .store {
      width: 100%; } }

.store__actions {
  position: relative;
  z-index: 2;
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), 0 1px 0 rgba(255, 255, 255, 0.2);
  margin-bottom: 50px;
  padding-top: 10px;
  padding-bottom: 20px;
  display: -ms-flexbox;
  display: flex;
  color: white;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: distribute;
      justify-content: space-around; }

.store__action {
  font-size: 10px; }
  .store__action svg {
    width: 25px;
    fill: white; }
  .store__action--edit a {
    border-bottom: 0; }

.store__hero {
  position: relative;
  padding: 0 10px 0 10px;
  text-align: right;
  min-height: 185px; }
  .store__hero img {
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    position: absolute;
    left: 0;
    object-fit: cover;
    transition: all .2s ease-in-out; }

a.store--hover:hover .store__hero:before {
  transition: opacity ease 0.5s;
  opacity: 0; }

.tags {
  margin: 0;
  padding: 0;
  list-style: none;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 2rem;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }

.tag {
  display: block;
  margin-right: 1rem;
  margin-bottom: 0.5rem; }
  .tag__choice {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center; }
    .tag__choice input {
      width: auto;
      right: -1.5rem;
      margin-right: -1rem;
      position: relative;
      z-index: 2; }
      .tag__choice input + label {
        background: #e6e6e6;
        padding: 1rem 1rem 1rem 4rem; }
      .tag__choice input:checked + label {
        background: #371178;
        color: #fff; }
  .tag__link {
    background: #53279F;
    color: #fff;
    display: -ms-flexbox;
    display: flex;
    border-radius: 4px; }
    .tag__link--active {
      background: #9a6bea; }
      .tag__link--active .tag__text {
        color: white; }
  .tag__text {
    padding: 1rem 1rem;
    display: block;
    text-transform: capitalize; }
  .tag__count {
    padding: 1rem 1rem;
    background: white;
    border-left: 3px solid rgba(0, 0, 0, 0.1);
    margin-right: -1px;
    /* ugh */
    background-clip: padding-box; }

.tag__choice label {
  text-transform: capitalize; }

.tags--flex {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center; }
  .tags--flex li {
    margin-right: 20px;
    width: 100px; }

.single__hero {
  height: 500px;
  position: relative;
  overflow: hidden;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 2vw), 0% 100%);
          clip-path: polygon(0 0, 100% 0, 100% calc(100% - 2vw), 0% 100%); }
  .single__hero:before {
    display: block;
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    background: linear-gradient(45deg, #05b3d6 0%, rgba(5, 179, 214, 0) 70%), linear-gradient(135deg, #0958ec 10%, rgba(9, 88, 236, 0) 80%), linear-gradient(225deg, #d209ec 10%, rgba(210, 9, 236, 0) 80%), linear-gradient(315deg, #05e129 100%, rgba(5, 225, 41, 0) 70%);
    opacity: 0.6;
    z-index: 1;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 2vw), 0% 100%);
            clip-path: polygon(0 0, 100% 0, 100% calc(100% - 2vw), 0% 100%); }

.single__image {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  object-fit: cover;
  position: absolute; }

.single__details {
  background: white;
  position: relative;
  padding: 3rem;
  margin-top: -10rem;
  box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.15); }

.single__map {
  width: calc(100% + 6rem);
  max-width: none;
  margin-top: -3rem;
  margin-left: -3rem; }

.single__location {
  margin: 0;
  margin-top: -3rem;
  margin-right: -5rem;
  background: #303030;
  color: white;
  display: inline-block;
  float: right;
  position: relative;
  padding: 1rem; }
  @media all and (max-width: 850px) {
    .single__location {
      margin-right: 0; } }

.heart__button {
  background: none;
  border: 0;
  outline: 0;
  position: relative; }
  .heart__button:after {
    content: '\2665\FE0F';
    font-size: 20px;
    position: absolute;
    opacity: 0;
    top: 0; }
  .heart__button svg {
    width: 25px;
    fill: white; }
  .heart__button--hearted svg {
    fill: red; }
  .heart__button--float:after {
    animation: fly 2.5s 1 ease-out; }

@keyframes fly {
  0% {
    transform: translateY(0);
    left: 0;
    opacity: 1; }
  20% {
    left: 20px; }
  40% {
    left: -20px; }
  60% {
    left: 20px; }
  80% {
    left: -20px; }
  100% {
    transform: translateY(-400px);
    opacity: 0;
    left: 20px; } }

.review {
  background: white;
  border: 1px solid #e6e6e6;
  border-bottom: 0;
  border-bottom: 1px solid #e6e6e6;
  margin-bottom: 2rem;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  position: relative;
  padding-left: 5px; }
  .review:before {
    width: 5px;
    left: 0;
    content: '';
    display: block;
    background: linear-gradient(0, #48ded4 0%, #a026bf 20%, #e82c75 60%, #FFC40E 85%, #48ded4 95%);
    position: absolute;
    height: 100%;
    background-attachment: fixed; }
  .review__header {
    border-bottom: 1px solid #e6e6e6;
    display: -ms-flexbox;
    display: flex; }
    .review__header > * {
      border-right: 1px solid #e6e6e6;
      padding: 0.2rem;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-align: center;
          align-items: center;
      -ms-flex: 1;
          flex: 1;
      -ms-flex-pack: center;
          justify-content: center; }
      .review__header > *:last-child {
        border-right: 0; }
  .review__author {
    -ms-flex-pack: start;
        justify-content: flex-start;
    padding-left: 2rem;
    display: -ms-flexbox;
    display: flex; }
    .review__author .avatar {
      margin-right: 2rem; }
  .review__time {
    font-size: 1.2rem;
    color: #999999; }
  .review__stars {
    color: #FFC40E; }
  .review__body {
    padding: 2rem; }
  .review p {
    white-space: pre-wrap; }

/*
  Reviewer Form
 */
.reviewer {
  position: relative;
  box-shadow: 0 0px 10px rgba(0, 0, 0, 0.2);
  margin-bottom: 2rem; }
  .reviewer__stars {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center; }
    .reviewer__stars input {
      display: none; }
      .reviewer__stars input:checked ~ label {
        color: #FFC40E; }
      .reviewer__stars input + label {
        font-size: 0;
        /* These are in the opposite DOM order
           re-order them to be visually in normal order
           This is fine for accessibility because our labels have for()
         */ }
        .reviewer__stars input + label:before {
          content: '\2605';
          font-size: 2rem; }
        .reviewer__stars input + label[for="star5"] {
          -ms-flex-order: 5;
              order: 5; }
        .reviewer__stars input + label[for="star4"] {
          -ms-flex-order: 4;
              order: 4; }
        .reviewer__stars input + label[for="star3"] {
          -ms-flex-order: 3;
              order: 3; }
        .reviewer__stars input + label[for="star2"] {
          -ms-flex-order: 2;
              order: 2; }
        .reviewer__stars input + label[for="star1"] {
          -ms-flex-order: 1;
              order: 1; }
        .reviewer__stars input + label:hover, .reviewer__stars input + label:hover ~ label {
          color: #ffdd74; }
  .reviewer textarea {
    border: 0;
    outline: 0;
    font-size: 2rem;
    padding: 2rem;
    height: 200px; }
  .reviewer__meta {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center;
    border-top: 1px solid #e6e6e6; }
    .reviewer__meta > * {
      -ms-flex: 1;
          flex: 1; }

.pagination {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  background: white;
  margin-top: 2rem;
  margin-bottom: 2rem;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1), 0 5px 10px rgba(0, 0, 0, 0.05); }
  .pagination__next {
    -ms-flex: 0 0 auto;
        flex: 0 0 auto;
    padding: 1rem 3rem 1rem 1rem; }
    .pagination__next a:after {
      margin-left: 1rem;
      content: '\2192'; }
  .pagination__prev {
    -ms-flex: 0 0 auto;
        flex: 0 0 auto;
    padding: 1rem 1rem 1rem 3rem; }
    .pagination__prev a:before {
      margin-right: 1rem;
      content: '\2190'; }
  .pagination__text {
    -ms-flex: 3 0 auto;
        flex: 3 0 auto;
    padding: 1rem;
    text-align: center; }

.back__button {
  margin: 30px 0 -30px 5px;
  text-decoration: none; }

.map {
  padding: 20px;
  background: white;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1), 0 5px 10px rgba(0, 0, 0, 0.05); }

#map {
  height: 500px; }

.popup {
  width: 300px; }
  .popup img {
    width: 100%; }

.hide {
  text-indent: -999999px;
  font-size: 0; }

.button {
  border: 0;
  background: #371178;
  color: #fff;
  font-family: 'Panama';
  font-weight: 600; }

.btn-save {
  width: 50%;
  margin: 2rem auto; }

.btn-edit {
  padding: 0.5em;
  letter-spacing: 2px; }
  .btn-edit:hover {
    background: white;
    color: purple; }

.avatar {
  min-width: 50px;
  height: 50px;
  border-radius: 50%;
  -ms-flex-item-align: center;
      -ms-grid-row-align: center;
      align-self: center; }

.card {
  background: white;
  padding: 5rem;
  box-shadow: 0 1px 10px rgba(0, 0, 0, 0.15); }

.category__card {
  min-width: 500px; }

pre.error {
  padding: 5rem;
  background: white;
  line-height: 3;
  white-space: pre-line; }

.inner__product {
  max-width: 1200px; }

.product__card {
  margin-top: 50px; }
  @media all and (max-width: 1399px) {
    .product__card {
      margin-top: 0; } }

.product__inner {
  display: -ms-flexbox;
  display: flex; }
  .product__inner .product__img {
    max-width: 550px; }
  .product__inner .product__info {
    margin: -1.25em 0 0 2em; }
    .product__inner .product__info p {
      line-height: 1.25; }

.product__contact {
  background-color: #53279F;
  height: 100px;
  display: -ms-flexbox;
  display: flex; }
  .product__contact .btn-more {
    border: 1px solid #fff;
    background: #53279F;
    color: #fff;
    margin: 0 auto;
    margin-top: 1.75em;
    height: 40px;
    width: auto; }
    .product__contact .btn-more:hover {
      background: #fff;
      color: #53279F; }

.title--color {
  color: #303030; }
  .title--color span, .title--color p {
    color: #53279F; }

@media all and (max-width: 1024px) {
  .product__inner {
    -ms-flex-direction: column;
        flex-direction: column; }
    .product__inner .product__img {
      max-width: 100%; }
    .product__inner .product__info {
      margin: 1em 0; } }

@media all and (max-width: 765px) {
  .product__card {
    padding: 2rem; } }

.admin__sidebar {
  width: 225px;
  height: 75vh;
  background-color: #240D65;
  float: left; }
  .admin__sidebar a.nav__link {
    text-transform: none; }
  .admin__sidebar .nav__link--active {
    background-color: white;
    color: black; }
  .admin__sidebar .nav__Section {
    margin-top: 43px; }
    .admin__sidebar .nav__Section a {
      border: none; }
  @media all and (max-width: 1400px) {
    .admin__sidebar {
      margin-top: -2.8em; } }
  @media all and (max-width: 900px) {
    .admin__sidebar {
      width: 100%;
      height: auto; }
      .admin__sidebar .nav__Section {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-pack: space-evenly;
            justify-content: space-evenly;
        margin-bottom: 17px;
        margin-top: 0; } }

.admin__main {
  margin: 0 50px;
  width: 100%; }
  @media all and (max-width: 900px) {
    .admin__main {
      width: auto; } }
  .admin__main select {
    text-transform: capitalize; }

a.admin__link {
  border-right: none !important; }

.admin__editing {
  position: relative;
  top: -205px;
  left: 10px; }

/*# sourceMappingURL=data:application/json;base64, */
/*# sourceMappingURL=style.css.map*/