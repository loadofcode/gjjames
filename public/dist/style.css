@charset "UTF-8";
html, body {
  margin: 0;
  padding: 0;
  height: 100%; }

html {
  font-size: 10px; }

body {
  background: #efefef; }

#container {
  min-height: 100%;
  position: relative; }
  #container .content {
    padding-bottom: 260px; }
    #container .content .admin__area {
      margin-bottom: -30px; }

.hero__image {
  background: url("/images/gjjames-hero2.png") no-repeat center;
  background-size: cover;
  height: 800px; }

.admin__area {
  display: -ms-flexbox;
  display: flex; }
  @media all and (max-width: 900px) {
    .admin__area {
      -ms-flex-direction: column;
          flex-direction: column; } }

.inner {
  max-width: 1350px;
  margin: 0 auto; }
  @media all and (max-width: 1400px) {
    .inner {
      padding: 2rem; } }

footer {
  height: 230px;
  background-image: linear-gradient(90deg, #1F085F 0%, #53279F 100%);
  position: absolute;
  bottom: 0;
  width: 100%; }

html {
  box-sizing: border-box; }

*, *:before, *:after {
  box-sizing: inherit; }

img {
  max-width: 100%; }

/*! normalize.css v5.0.0 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Change the default font family in all browsers (opinionated).
 * 2. Correct the line height in all browsers.
 * 3. Prevent adjustments of font size after orientation changes in
 *    IE on Windows Phone and in iOS.
 */
/* Document
   ========================================================================== */
html {
  font-family: sans-serif;
  /* 1 */
  line-height: 1.15;
  /* 2 */
  -ms-text-size-adjust: 100%;
  /* 3 */
  -webkit-text-size-adjust: 100%;
  /* 3 */ }

/* Sections
   ========================================================================== */
/**
 * Remove the margin in all browsers (opinionated).
 */
body {
  margin: 0; }

/**
 * Add the correct display in IE 9-.
 */
article,
aside,
footer,
header,
nav,
section {
  display: block; }

/**
 * Correct the font size and margin on `h1` elements within `section` and
 * `article` contexts in Chrome, Firefox, and Safari.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/* Grouping content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 * 1. Add the correct display in IE.
 */
figcaption,
figure,
main {
  /* 1 */
  display: block; }

/**
 * Add the correct margin in IE 8.
 */
figure {
  margin: 1em 40px; }

/**
 * 1. Add the correct box sizing in Firefox.
 * 2. Show the overflow in Edge and IE.
 */
hr {
  box-sizing: content-box;
  /* 1 */
  height: 0;
  /* 1 */
  overflow: visible;
  /* 2 */ }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
pre {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/* Text-level semantics
   ========================================================================== */
/**
 * 1. Remove the gray background on active links in IE 10.
 * 2. Remove gaps in links underline in iOS 8+ and Safari 8+.
 */
a {
  background-color: transparent;
  /* 1 */
  -webkit-text-decoration-skip: objects;
  /* 2 */ }

/**
 * Remove the outline on focused links when they are also active or hovered
 * in all browsers (opinionated).
 */
a:active,
a:hover {
  outline-width: 0; }

/**
 * 1. Remove the bottom border in Firefox 39-.
 * 2. Add the correct text decoration in Chrome, Edge, IE, Opera, and Safari.
 */
abbr[title] {
  border-bottom: none;
  /* 1 */
  text-decoration: underline;
  /* 2 */
  text-decoration: underline dotted;
  /* 2 */ }

/**
 * Prevent the duplicate application of `bolder` by the next rule in Safari 6.
 */
b,
strong {
  font-weight: inherit; }

/**
 * Add the correct font weight in Chrome, Edge, and Safari.
 */
b,
strong {
  font-weight: bolder; }

/**
 * 1. Correct the inheritance and scaling of font size in all browsers.
 * 2. Correct the odd `em` font sizing in all browsers.
 */
code,
kbd,
samp {
  font-family: monospace, monospace;
  /* 1 */
  font-size: 1em;
  /* 2 */ }

/**
 * Add the correct font style in Android 4.3-.
 */
dfn {
  font-style: italic; }

/**
 * Add the correct background and color in IE 9-.
 */
mark {
  background-color: #ff0;
  color: #000; }

/**
 * Add the correct font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` elements from affecting the line height in
 * all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sub {
  bottom: -0.25em; }

sup {
  top: -0.5em; }

/* Embedded content
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
audio,
video {
  display: inline-block; }

/**
 * Add the correct display in iOS 4-7.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Remove the border on images inside links in IE 10-.
 */
img {
  border-style: none; }

/**
 * Hide the overflow in IE.
 */
svg:not(:root) {
  overflow: hidden; }

/* Forms
   ========================================================================== */
/**
 * 1. Change the font styles in all browsers (opinionated).
 * 2. Remove the margin in Firefox and Safari.
 */
button,
input,
optgroup,
select,
textarea {
  font-family: sans-serif;
  /* 1 */
  font-size: 100%;
  /* 1 */
  line-height: 1.15;
  /* 1 */
  margin: 0;
  /* 2 */ }

/**
 * Show the overflow in IE.
 * 1. Show the overflow in Edge.
 */
button,
input {
  /* 1 */
  overflow: visible; }

/**
 * Remove the inheritance of text transform in Edge, Firefox, and IE.
 * 1. Remove the inheritance of text transform in Firefox.
 */
button,
select {
  /* 1 */
  text-transform: none; }

/**
 * 1. Prevent a WebKit bug where (2) destroys native `audio` and `video`
 *    controls in Android 4.
 * 2. Correct the inability to style clickable types in iOS and Safari.
 */
button,
html [type="button"],
[type="reset"],
[type="submit"] {
  -webkit-appearance: button;
  /* 2 */ }

/**
 * Remove the inner border and padding in Firefox.
 */
button::-moz-focus-inner,
[type="button"]::-moz-focus-inner,
[type="reset"]::-moz-focus-inner,
[type="submit"]::-moz-focus-inner {
  border-style: none;
  padding: 0; }

/**
 * Restore the focus styles unset by the previous rule.
 */
button:-moz-focusring,
[type="button"]:-moz-focusring,
[type="reset"]:-moz-focusring,
[type="submit"]:-moz-focusring {
  outline: 1px dotted ButtonText; }

/**
 * Change the border, margin, and padding in all browsers (opinionated).
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct the text wrapping in Edge and IE.
 * 2. Correct the color inheritance from `fieldset` elements in IE.
 * 3. Remove the padding so developers are not caught out when they zero out
 *    `fieldset` elements in all browsers.
 */
legend {
  box-sizing: border-box;
  /* 1 */
  color: inherit;
  /* 2 */
  display: table;
  /* 1 */
  max-width: 100%;
  /* 1 */
  padding: 0;
  /* 3 */
  white-space: normal;
  /* 1 */ }

/**
 * 1. Add the correct display in IE 9-.
 * 2. Add the correct vertical alignment in Chrome, Firefox, and Opera.
 */
progress {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Remove the default vertical scrollbar in IE.
 */
textarea {
  overflow: auto; }

/**
 * 1. Add the correct box sizing in IE 10-.
 * 2. Remove the padding in IE 10-.
 */
[type="checkbox"],
[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Correct the cursor style of increment and decrement buttons in Chrome.
 */
[type="number"]::-webkit-inner-spin-button,
[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Correct the odd appearance in Chrome and Safari.
 * 2. Correct the outline style in Safari.
 */
[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  outline-offset: -2px;
  /* 2 */ }

/**
 * Remove the inner padding and cancel buttons in Chrome and Safari on macOS.
 */
[type="search"]::-webkit-search-cancel-button,
[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * 1. Correct the inability to style clickable types in iOS and Safari.
 * 2. Change font properties to `inherit` in Safari.
 */
::-webkit-file-upload-button {
  -webkit-appearance: button;
  /* 1 */
  font: inherit;
  /* 2 */ }

/* Interactive
   ========================================================================== */
/*
 * Add the correct display in IE 9-.
 * 1. Add the correct display in Edge, IE, and Firefox.
 */
details,
menu {
  display: block; }

/*
 * Add the correct display in all browsers.
 */
summary {
  display: list-item; }

/* Scripting
   ========================================================================== */
/**
 * Add the correct display in IE 9-.
 */
canvas {
  display: inline-block; }

/**
 * Add the correct display in IE.
 */
template {
  display: none; }

/* Hidden
   ========================================================================== */
/**
 * Add the correct display in IE 10-.
 */
[hidden] {
  display: none; }

@font-face {
  font-family: 'panama';
  src: url("/fonts/panama-bold-webfont.woff2") format("woff2"), url("/fonts/panama-bold-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal; }

html {
  font-size: 10px; }

body {
  font-size: 1.5rem;
  color: #303030; }

h1, h2, h3, h4, h5, h6 {
  font-family: 'Panama';
  font-weight: 600; }

a {
  text-decoration: none;
  color: #303030; }

p a {
  border-bottom: 2px solid #FFC40E; }

p {
  line-height: 2;
  font-size: 1.6rem; }

.title, .title--product {
  word-wrap: break-word;
  position: relative;
  z-index: 2;
  margin: 0;
  font-size: 40px;
  z-index: 2;
  line-height: 1.1;
  line-height: 1.1; }
  .title--long, .title--product--long {
    font-size: 30px; }
  .title:before, .title--product:before {
    content: '';
    width: 50px;
    left: 0;
    top: 0;
    height: 100%;
    display: block;
    position: absolute;
    z-index: -1;
    -ms-transform: skew(-5deg);
        transform: skew(-5deg); }
  .title a, .title--product a {
    border-bottom: 0;
    background-image: linear-gradient(to right, rgba(255, 196, 14, 0.8) 100%, rgba(255, 196, 14, 0.8) 50%); }

.title--product {
  font-size: 14px; }

.title--single {
  max-width: 600px;
  margin-top: -9rem;
  font-size: 10rem;
  text-align: center; }

input,
textarea {
  width: 100%;
  padding: 10px;
  border: 1px solid #e6e6e6; }
  input.input--error,
  textarea.input--error {
    border-color: red; }

label {
  padding: 10px 0;
  display: block; }

.form {
  background: white;
  padding: 2rem;
  box-shadow: linear-gradient(90deg, #48ded4 0%, #a026bf 20%, #e82c75 60%, #FFC40E 85%, #48ded4 95%); }
  .form + .form {
    margin-top: 4rem; }
  .form h2 {
    margin: 0;
    font-size: 2rem;
    padding-bottom: 2rem;
    margin-bottom: 2rem;
    border-bottom: 1px solid #e6e6e6; }

.form--flex {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-direction: column;
      flex-direction: column; }

.login__form {
  width: 500px;
  margin: 50px auto; }
  .login__form .button {
    margin-top: 20px; }

.search {
  position: relative;
  width: 100%;
  display: -ms-flexbox;
  display: flex; }
  .search__results {
    background: white;
    position: absolute;
    width: 100%;
    top: 47px;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.2);
    z-index: 5;
    left: 0; }
    @media all and (max-width: 900px) {
      .search__results {
        top: 43px; } }
  .search__input {
    font-size: 20px;
    background: none;
    color: #fff;
    outline: 0;
    border: 0; }
  .search__result {
    padding: 10px;
    display: block;
    border-bottom: 1px solid #ececec; }
    .search__result--active {
      background: #f1f1f1; }
    .search__result img {
      width: 6%;
      height: 6%; }
    .search__result--margin {
      display: -ms-flexbox;
      display: flex; }
      .search__result--margin strong, .search__result--margin span {
        margin: 4px 0 4px 8px; }
      .search__result--margin span {
        margin-left: 0; }

.hero__container {
  text-align: center;
  top: 260px;
  position: relative;
  margin-top: -40px; }
  .hero__container .hero__logo {
    margin: 0 auto; }
  .hero__container .search {
    border: 1px solid white;
    border-radius: 4px;
    background: white;
    width: 40%;
    margin: 10px auto; }
    .hero__container .search .search__input {
      color: black; }

@media (min-width: 1401px) {
  .hero__container {
    margin-top: 0; } }

@media (max-width: 900px) {
  .hero__container .search {
    width: 80%; } }

@media (max-width: 414px) {
  .hero__image {
    background-size: cover;
    height: 516px;
    background-position-x: -178px; }
  .hero__container {
    top: 130px; }
    .hero__container .search {
      width: 90%; } }

@keyframes slideIn {
  0% {
    transform: translateX(-10px); }
  50% {
    transform: translateX(10px); }
  100% {
    transform: translateX(0px); } }

.flash {
  background: white;
  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);
  margin-bottom: 2rem;
  padding: 2rem;
  position: relative;
  z-index: 1;
  border-radius: 3px;
  display: -ms-flexbox;
  display: flex;
  animation: slideIn forwards .1s ease-in-out 2;
  animation-timing-function: cubic-bezier(0.01, 1.68, 0.58, 1); }
  .flash + .flash {
    animation-delay: 0.55s; }
    .flash + .flash + .flash {
      animation-delay: 0.6s; }
  .flash__text {
    -ms-flex: 1;
        flex: 1; }
  .flash__remove {
    background: none;
    border: 0; }
    .flash__remove:hover {
      color: #FFC40E; }
  .flash:after {
    content: '';
    display: block;
    background: white;
    position: absolute;
    width: calc(100% - 16px);
    height: calc(100% - 16px);
    top: 8px;
    left: 8px;
    z-index: -1;
    box-shadow: 0 0 2px 2px rgba(0, 0, 0, 0.1);
    border-radius: 3px; }
  .flash--success {
    background: linear-gradient(135deg, #d2ff52 0%, #91e842 100%); }
  .flash--error {
    background: linear-gradient(20deg, red 0%, #c80000 100%); }
  .flash--info {
    background: linear-gradient(35deg, #f1e767 0%, #feb645 100%); }
  .flash p {
    margin: 0; }

.nav {
  display: -ms-flexbox;
  display: flex;
  list-style: none;
  margin: 0;
  padding: 0 170px;
  -ms-flex-pack: justify;
      justify-content: space-between;
  /* Indigo Nav Background: */
  background-image: linear-gradient(90deg, #1F085F 0%, #53279F 100%); }
  .nav__section {
    display: -ms-flexbox;
    display: flex; }
    .nav__section--search {
      -ms-flex: 0 1 auto;
          flex: 0 1 auto; }
  .nav__item {
    width: 100%;
    display: -ms-flexbox;
    display: flex; }
  .nav__link {
    color: white;
    border-right: 1px solid rgba(255, 255, 255, 0.1);
    text-transform: uppercase;
    padding: 1.2rem 2rem 1rem 2rem;
    display: block;
    display: -ms-flexbox;
    display: flex;
    -ms-flex-direction: column;
        flex-direction: column;
    -ms-flex-align: center;
        align-items: center;
    -ms-flex-pack: center;
        justify-content: center;
    transition: transform 0.2s;
    border-bottom: 5px solid transparent; }
    .nav__link svg {
      width: 40px;
      transition: all 0.2s;
      fill: white;
      margin-bottom: 1rem; }
    .nav__link:hover, .nav__link--active {
      border-bottom-color: white; }
      .nav__link:hover svg, .nav__link--active svg {
        -ms-transform: scale(1.2);
            transform: scale(1.2); }
    .nav__link--logo:hover svg {
      -ms-transform: none;
          transform: none; }
    .nav__link--logo svg {
      width: 150px;
      margin: 0; }
  .nav.footer {
    -ms-flex-pack: center;
        justify-content: center;
    color: white; }
    .nav.footer li {
      padding: 2rem; }
    .nav.footer li:nth-child(2) {
      border-left: 1px solid white; }
    .nav.footer span {
      color: white; }

@media all and (max-width: 1740px) {
  .nav {
    padding: 0 50px; } }

@media all and (max-width: 1200px) {
  .nav {
    padding: 0; }
    .nav__link {
      padding-left: 1rem;
      padding-right: 1rem; }
      .nav__link svg {
        width: 30px; }
      .nav__link--logo svg {
        width: 100px; } }

@media all and (min-width: 901px) {
  .nav__section--search {
    width: 40%;
    padding: 0 15px; }
    .nav__section--search .search {
      border: 2px white solid;
      height: 50px;
      border-radius: 4px;
      top: 45px; } }

@media all and (max-width: 900px) {
  .nav {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
    .nav__section {
      -ms-flex-order: 1;
          order: 1; }
      .nav__section--search {
        border-top: 1px solid rgba(255, 255, 255, 0.1);
        -ms-flex-order: 2;
            order: 2;
        width: 100%; } }

@media all and (max-width: 650px) {
  .nav__section {
    width: 100%; }
    .nav__section--user {
      -ms-flex-order: -1;
          order: -1;
      border-bottom: 1px solid rgba(255, 255, 255, 0.1); }
      .nav__section--user .avatar {
        min-width: 20px;
        height: 20px; }
      .nav__section--user svg {
        display: none; }
  .nav__item {
    width: 33.333333%; }
  .nav__link {
    width: 100%; }
    .nav__link svg {
      max-width: 100%; }
    .nav__link--logo svg {
      width: 100%; }
  .heart-count:before {
    content: '\2665\FE0F';
    margin-right: 1rem; } }

a.admin__link {
  border-right: none; }

.table {
  width: 100%; }
  .table td {
    padding: 5px; }
  .table tr:nth-child(even) {
    background: white; }
  .table tr:nth-child(odd):not(:first-child) {
    background: #f7f7f7; }
  .table thead tr {
    background: #303030;
    color: white; }

.stores {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  margin: -1.25em 0 0 -1.25em; }
  @media all and (max-width: 1024px) {
    .stores {
      -ms-flex-wrap: wrap;
          flex-wrap: wrap; } }

.store {
  background: white;
  margin: 1.25em 0 0 1.25em;
  width: calc(33.3333% - 14.25em);
  margin-bottom: 1.5em;
  width: 18.5%;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1), 0 5px 10px rgba(0, 0, 0, 0.05);
  min-height: 246px;
  overflow: hidden;
  border: 2px solid #371178; }
  .store--wide {
    width: 100%; }
  .store__details {
    padding: 1rem; }
    .store__details p {
      line-height: 1.2;
      margin-bottom: 0; }
  .store:hover img {
    -ms-transform: scale(1.1);
        transform: scale(1.1); }
  @media all and (max-width: 1240px) {
    .store {
      width: 18%; } }
  @media all and (max-width: 1100px) {
    .store {
      width: 23%; } }
  @media all and (max-width: 960px) {
    .store {
      width: calc(50% - 1.25em); } }
  @media all and (max-width: 550px) {
    .store {
      width: 100%; } }

.store__actions {
  position: relative;
  z-index: 2;
  border-bottom: 1px solid rgba(0, 0, 0, 0.2);
  box-shadow: 0 1px 0 rgba(0, 0, 0, 0.2), 0 1px 0 rgba(255, 255, 255, 0.2);
  margin-bottom: 50px;
  padding-top: 10px;
  padding-bottom: 20px;
  display: -ms-flexbox;
  display: flex;
  color: white;
  -ms-flex-align: center;
      align-items: center;
  -ms-flex-pack: distribute;
      justify-content: space-around; }

.store__action {
  font-size: 10px; }
  .store__action svg {
    width: 25px;
    fill: white; }
  .store__action--edit a {
    border-bottom: 0; }

.store__hero {
  position: relative;
  padding: 0 10px 0 10px;
  text-align: right;
  min-height: 185px; }
  .store__hero img {
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    position: absolute;
    left: 0;
    object-fit: cover;
    transition: all .2s ease-in-out; }

a.store--hover:hover .store__hero:before {
  transition: opacity ease 0.5s;
  opacity: 0; }

.tags {
  margin: 0;
  padding: 0;
  list-style: none;
  display: -ms-flexbox;
  display: flex;
  margin-bottom: 2rem;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap; }

.tag {
  display: block;
  margin-right: 1rem;
  margin-bottom: 0.5rem; }
  .tag__choice {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center; }
    .tag__choice input {
      width: auto;
      right: -1.5rem;
      margin-right: -1rem;
      position: relative;
      z-index: 2; }
      .tag__choice input + label {
        background: #e6e6e6;
        padding: 1rem 1rem 1rem 4rem; }
      .tag__choice input:checked + label {
        background: #371178;
        color: #fff; }
  .tag__link {
    background: #53279F;
    color: #fff;
    display: -ms-flexbox;
    display: flex;
    border-radius: 4px; }
    .tag__link--active {
      background: #9a6bea; }
      .tag__link--active .tag__text {
        color: white; }
  .tag__text {
    padding: 1rem 1rem;
    display: block;
    text-transform: capitalize;
    margin: auto; }
  .tag__count {
    padding: 1rem 1rem;
    background: white;
    border-left: 3px solid rgba(0, 0, 0, 0.1);
    margin-right: -1px;
    /* ugh */
    background-clip: padding-box; }

.tag__choice label {
  text-transform: capitalize; }

.tags--flex {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center; }
  .tags--flex li {
    margin-right: 10px;
    width: 100px; }

.category_list, .tags_list {
  padding-left: 0;
  width: 481px; }
  .category_list .tag, .tags_list .tag {
    padding: 1rem; }
    .category_list .tag:nth-child(odd), .tags_list .tag:nth-child(odd) {
      background: white; }
  .category_list .tag__text, .tags_list .tag__text {
    display: inline; }
  .category_list .edit__wrapper, .tags_list .edit__wrapper {
    float: right; }
  .category_list .tag__delete, .tags_list .tag__delete {
    margin-left: 10px; }
    .category_list .tag__delete .btn-edit, .tags_list .tag__delete .btn-edit {
      background: red; }

.tags_list {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-wrap: wrap;
      flex-wrap: wrap;
  -ms-flex-direction: column;
      flex-direction: column;
  width: 100%;
  height: 713px; }
  .tags_list .tag {
    width: 32%; }

@media all and (max-width: 442px) {
  .category_list, .tags_list {
    width: 100%; }
  .tags_list {
    height: auto; }
  .tags_list .tag {
    width: auto; } }

.single__hero {
  height: 500px;
  position: relative;
  overflow: hidden;
  display: -ms-flexbox;
  display: flex;
  -ms-flex-pack: center;
      justify-content: center;
  -ms-flex-align: center;
      align-items: center;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 2vw), 0% 100%);
          clip-path: polygon(0 0, 100% 0, 100% calc(100% - 2vw), 0% 100%); }
  .single__hero:before {
    display: block;
    content: '';
    position: absolute;
    height: 100%;
    width: 100%;
    top: 0;
    right: 0;
    background: linear-gradient(45deg, #05b3d6 0%, rgba(5, 179, 214, 0) 70%), linear-gradient(135deg, #0958ec 10%, rgba(9, 88, 236, 0) 80%), linear-gradient(225deg, #d209ec 10%, rgba(210, 9, 236, 0) 80%), linear-gradient(315deg, #05e129 100%, rgba(5, 225, 41, 0) 70%);
    opacity: 0.6;
    z-index: 1;
    -webkit-clip-path: polygon(0 0, 100% 0, 100% calc(100% - 2vw), 0% 100%);
            clip-path: polygon(0 0, 100% 0, 100% calc(100% - 2vw), 0% 100%); }

.single__image {
  width: 100%;
  height: 100%;
  top: 0;
  left: 0;
  object-fit: cover;
  position: absolute; }

.single__details {
  background: white;
  position: relative;
  padding: 3rem;
  margin-top: -10rem;
  box-shadow: 0 0 10px 2px rgba(0, 0, 0, 0.15); }

.single__map {
  width: calc(100% + 6rem);
  max-width: none;
  margin-top: -3rem;
  margin-left: -3rem; }

.single__location {
  margin: 0;
  margin-top: -3rem;
  margin-right: -5rem;
  background: #303030;
  color: white;
  display: inline-block;
  float: right;
  position: relative;
  padding: 1rem; }
  @media all and (max-width: 850px) {
    .single__location {
      margin-right: 0; } }

.heart__button {
  background: none;
  border: 0;
  outline: 0;
  position: relative; }
  .heart__button:after {
    content: '\2665\FE0F';
    font-size: 20px;
    position: absolute;
    opacity: 0;
    top: 0; }
  .heart__button svg {
    width: 25px;
    fill: white; }
  .heart__button--hearted svg {
    fill: red; }
  .heart__button--float:after {
    animation: fly 2.5s 1 ease-out; }

@keyframes fly {
  0% {
    transform: translateY(0);
    left: 0;
    opacity: 1; }
  20% {
    left: 20px; }
  40% {
    left: -20px; }
  60% {
    left: 20px; }
  80% {
    left: -20px; }
  100% {
    transform: translateY(-400px);
    opacity: 0;
    left: 20px; } }

.review {
  background: white;
  border: 1px solid #e6e6e6;
  border-bottom: 0;
  border-bottom: 1px solid #e6e6e6;
  margin-bottom: 2rem;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
  position: relative;
  padding-left: 5px; }
  .review:before {
    width: 5px;
    left: 0;
    content: '';
    display: block;
    background: linear-gradient(0, #48ded4 0%, #a026bf 20%, #e82c75 60%, #FFC40E 85%, #48ded4 95%);
    position: absolute;
    height: 100%;
    background-attachment: fixed; }
  .review__header {
    border-bottom: 1px solid #e6e6e6;
    display: -ms-flexbox;
    display: flex; }
    .review__header > * {
      border-right: 1px solid #e6e6e6;
      padding: 0.2rem;
      display: -ms-flexbox;
      display: flex;
      -ms-flex-align: center;
          align-items: center;
      -ms-flex: 1;
          flex: 1;
      -ms-flex-pack: center;
          justify-content: center; }
      .review__header > *:last-child {
        border-right: 0; }
  .review__author {
    -ms-flex-pack: start;
        justify-content: flex-start;
    padding-left: 2rem;
    display: -ms-flexbox;
    display: flex; }
    .review__author .avatar {
      margin-right: 2rem; }
  .review__time {
    font-size: 1.2rem;
    color: #999999; }
  .review__stars {
    color: #FFC40E; }
  .review__body {
    padding: 2rem; }
  .review p {
    white-space: pre-wrap; }

/*
  Reviewer Form
 */
.reviewer {
  position: relative;
  box-shadow: 0 0px 10px rgba(0, 0, 0, 0.2);
  margin-bottom: 2rem; }
  .reviewer__stars {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center; }
    .reviewer__stars input {
      display: none; }
      .reviewer__stars input:checked ~ label {
        color: #FFC40E; }
      .reviewer__stars input + label {
        font-size: 0;
        /* These are in the opposite DOM order
           re-order them to be visually in normal order
           This is fine for accessibility because our labels have for()
         */ }
        .reviewer__stars input + label:before {
          content: '\2605';
          font-size: 2rem; }
        .reviewer__stars input + label[for="star5"] {
          -ms-flex-order: 5;
              order: 5; }
        .reviewer__stars input + label[for="star4"] {
          -ms-flex-order: 4;
              order: 4; }
        .reviewer__stars input + label[for="star3"] {
          -ms-flex-order: 3;
              order: 3; }
        .reviewer__stars input + label[for="star2"] {
          -ms-flex-order: 2;
              order: 2; }
        .reviewer__stars input + label[for="star1"] {
          -ms-flex-order: 1;
              order: 1; }
        .reviewer__stars input + label:hover, .reviewer__stars input + label:hover ~ label {
          color: #ffdd74; }
  .reviewer textarea {
    border: 0;
    outline: 0;
    font-size: 2rem;
    padding: 2rem;
    height: 200px; }
  .reviewer__meta {
    display: -ms-flexbox;
    display: flex;
    -ms-flex-pack: center;
        justify-content: center;
    -ms-flex-align: center;
        align-items: center;
    border-top: 1px solid #e6e6e6; }
    .reviewer__meta > * {
      -ms-flex: 1;
          flex: 1; }

.pagination {
  display: -ms-flexbox;
  display: flex;
  -ms-flex-align: center;
      align-items: center;
  background: white;
  margin-top: 2rem;
  margin-bottom: 2rem;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1), 0 5px 10px rgba(0, 0, 0, 0.05); }
  .pagination__next {
    -ms-flex: 0 0 auto;
        flex: 0 0 auto;
    padding: 1rem 3rem 1rem 1rem; }
    .pagination__next a:after {
      margin-left: 1rem;
      content: '\2192'; }
  .pagination__prev {
    -ms-flex: 0 0 auto;
        flex: 0 0 auto;
    padding: 1rem 1rem 1rem 3rem; }
    .pagination__prev a:before {
      margin-right: 1rem;
      content: '\2190'; }
  .pagination__text {
    -ms-flex: 3 0 auto;
        flex: 3 0 auto;
    padding: 1rem;
    text-align: center; }

.back__button {
  margin: 30px 0 -30px 5px;
  text-decoration: none; }

.map {
  padding: 20px;
  background: white;
  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1), 0 5px 10px rgba(0, 0, 0, 0.05); }

#map {
  height: 500px; }

.popup {
  width: 300px; }
  .popup img {
    width: 100%; }

.hide {
  text-indent: -999999px;
  font-size: 0; }

.button {
  border: 0;
  background: #371178;
  color: #fff;
  font-family: 'Panama';
  font-weight: 600; }

.btn-save {
  width: 50%;
  margin: 2rem auto; }

.btn-edit {
  padding: 0.5em;
  letter-spacing: 2px; }
  .btn-edit:hover {
    background: white;
    color: purple; }

.avatar {
  min-width: 50px;
  height: 50px;
  border-radius: 50%;
  -ms-flex-item-align: center;
      -ms-grid-row-align: center;
      align-self: center; }

.card {
  background: white;
  padding: 5rem;
  box-shadow: 0 1px 10px rgba(0, 0, 0, 0.15); }

.category__card {
  min-width: 500px; }

pre.error {
  padding: 5rem;
  background: white;
  line-height: 3;
  white-space: pre-line; }

.inner__product {
  max-width: 1200px; }

.product__card {
  margin-top: 50px; }
  @media all and (max-width: 1399px) {
    .product__card {
      margin-top: 0; } }

.product__inner {
  display: -ms-flexbox;
  display: flex; }
  .product__inner .product__img {
    max-width: 550px; }
  .product__inner .product__info {
    margin: -1.25em 0 0 2em; }
    .product__inner .product__info p {
      line-height: 1.25; }

.product__contact {
  background-color: #53279F;
  height: 100px;
  display: -ms-flexbox;
  display: flex; }
  .product__contact .btn-more {
    border: 1px solid #fff;
    background: #53279F;
    color: #fff;
    margin: 0 auto;
    margin-top: 1.75em;
    height: 40px;
    width: auto; }
    .product__contact .btn-more:hover {
      background: #fff;
      color: #53279F; }

.title--color {
  color: #303030; }
  .title--color span, .title--color p {
    color: #53279F; }

.back__button {
  position: relative; }
  .back__button span:hover {
    cursor: pointer; }

@media all and (max-width: 1024px) {
  .product__inner {
    -ms-flex-direction: column;
        flex-direction: column; }
    .product__inner .product__img {
      max-width: 100%; }
    .product__inner .product__info {
      margin: 1em 0; } }

@media all and (max-width: 765px) {
  .product__card {
    padding: 2rem; } }

.admin__sidebar {
  width: 225px;
  height: 75vh;
  float: left; }
  .admin__sidebar a.nav__link {
    text-transform: none;
    color: #371178;
    -ms-flex-align: left;
        align-items: left; }
    .admin__sidebar a.nav__link:hover {
      background: #53279F;
      color: #fff; }
  .admin__sidebar .nav__link--active {
    background-color: #371178;
    color: white !important; }
  .admin__sidebar .nav__Section {
    margin-top: 43px;
    list-style: none; }
    .admin__sidebar .nav__Section a {
      border: none; }
  @media all and (max-width: 1400px) {
    .admin__sidebar {
      margin-top: -2.8em; } }
  @media all and (max-width: 900px) {
    .admin__sidebar {
      width: 100%;
      height: auto; }
      .admin__sidebar .nav__Section {
        display: -ms-flexbox;
        display: flex;
        -ms-flex-pack: space-evenly;
            justify-content: space-evenly;
        margin-bottom: 17px;
        margin-top: 0; } }

.admin__main {
  margin: 0 50px;
  width: 100%; }
  @media all and (max-width: 900px) {
    .admin__main {
      width: auto; } }
  @media all and (max-width: 442px) {
    .admin__main {
      margin: 0 20px; }
      .admin__main .category__card {
        min-width: 300px;
        width: 100%;
        padding: 2rem; }
        .admin__main .category__card .btn-save {
          width: 100%; } }
  .admin__main select {
    text-transform: capitalize; }

a.admin__link {
  border-right: none !important; }

.admin__editing {
  position: relative;
  top: -205px;
  left: 10px; }

/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInN0eWxlLnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9fbGF5b3V0LnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9fZm9vdGVyLnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9fbm9ybWFsaXplLnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9fdHlwb2dyYXBoeS5zY3NzIiwiL1VzZXJzL2dhcmV0aC9kZXZlbG9wbWVudC9namphbWVzLW5vZGUvcHVibGljL3Nhc3MvcGFydGlhbHMvX3ZhcmlhYmxlcy5zY3NzIiwiL1VzZXJzL2dhcmV0aC9kZXZlbG9wbWVudC9namphbWVzLW5vZGUvcHVibGljL3Nhc3MvcGFydGlhbHMvX2Zvcm1zLnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9fc2VhcmNoLnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9faW5kZXguc2NzcyIsIi9Vc2Vycy9nYXJldGgvZGV2ZWxvcG1lbnQvZ2pqYW1lcy1ub2RlL3B1YmxpYy9zYXNzL3BhcnRpYWxzL19mbGFzaGVzLnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9fbmF2LnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9fdGFibGUuc2NzcyIsIi9Vc2Vycy9nYXJldGgvZGV2ZWxvcG1lbnQvZ2pqYW1lcy1ub2RlL3B1YmxpYy9zYXNzL3BhcnRpYWxzL19zdG9yZS5zY3NzIiwiL1VzZXJzL2dhcmV0aC9kZXZlbG9wbWVudC9namphbWVzLW5vZGUvcHVibGljL3Nhc3MvcGFydGlhbHMvX3RhZy5zY3NzIiwiL1VzZXJzL2dhcmV0aC9kZXZlbG9wbWVudC9namphbWVzLW5vZGUvcHVibGljL3Nhc3MvcGFydGlhbHMvX2NhdGVnb3J5LnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9fc2luZ2xlLnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9faGVhcnQuc2NzcyIsIi9Vc2Vycy9nYXJldGgvZGV2ZWxvcG1lbnQvZ2pqYW1lcy1ub2RlL3B1YmxpYy9zYXNzL3BhcnRpYWxzL19yZXZpZXdzLnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9fcmV2aWV3ZXIuc2NzcyIsIi9Vc2Vycy9nYXJldGgvZGV2ZWxvcG1lbnQvZ2pqYW1lcy1ub2RlL3B1YmxpYy9zYXNzL3BhcnRpYWxzL19wYWdpbmF0aW9uLnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9fbWFwLnNjc3MiLCIvVXNlcnMvZ2FyZXRoL2RldmVsb3BtZW50L2dqamFtZXMtbm9kZS9wdWJsaWMvc2Fzcy9wYXJ0aWFscy9faGVscGVycy5zY3NzIiwiL1VzZXJzL2dhcmV0aC9kZXZlbG9wbWVudC9namphbWVzLW5vZGUvcHVibGljL3Nhc3MvcGFydGlhbHMvX3Byb2R1Y3Quc2NzcyIsIi9Vc2Vycy9nYXJldGgvZGV2ZWxvcG1lbnQvZ2pqYW1lcy1ub2RlL3B1YmxpYy9zYXNzL3BhcnRpYWxzL19hZG1pbi5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLGlCQUFpQjtBQ0FqQjtFQUNFLFVBQVE7RUFDUixXQUFTO0VBQ1QsYUFBVyxFQUNaOztBQUNEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFFRSxvQkFBa0IsRUFDbkI7O0FBRUQ7RUFDRSxpQkFBZTtFQUNmLG1CQUFpQixFQU9sQjtFQVREO0lBSUksc0JBQW9CLEVBSXJCO0lBUkg7TUFNTSxxQkFBb0IsRUFDckI7O0FBSUw7RUFDRSw4REFBNkQ7RUFJN0QsdUJBQXNCO0VBQ3RCLGNBQWEsRUFDZDs7QUFFRDtFQUNFLHFCQUFhO0VBQWIsY0FBYSxFQUtkO0VBSEM7SUFIRjtNQUlJLDJCQUFzQjtVQUF0Qix1QkFBc0IsRUFFekIsRUFBQTs7QUFFRDtFQUNFLGtCQUFnQjtFQUNoQixlQUFjLEVBSWY7RUFIQztJQUhGO01BSUksY0FBYSxFQUVoQixFQUFBOztBQ2hERDtFQUNFLGNBQWE7RUFDYixtRUFBa0U7RUFLbEUsbUJBQWlCO0VBQ2pCLFVBQVE7RUFDUixZQUFVLEVBRVg7O0FDWEQ7RUFDRSx1QkFBc0IsRUFDdkI7O0FBRUQ7RUFDRSxvQkFBbUIsRUFDcEI7O0FBRUQ7RUFDRSxnQkFBZSxFQUNoQjs7QUFFRCw0RUFBNEU7QUFFNUU7Ozs7O0dBS0c7QUFFSDtnRkFDZ0Y7QUFFaEY7RUFDRSx3QkFBdUI7RUFBRyxPQUFPO0VBQ2pDLGtCQUFpQjtFQUFHLE9BQU87RUFDM0IsMkJBQTBCO0VBQUcsT0FBTztFQUNwQywrQkFBOEI7RUFBRyxPQUFPLEVBQ3pDOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBQUVIO0VBQ0UsVUFBUyxFQUNWOztBQUVEOztHQUVHO0FBRUg7Ozs7OztFQU1FLGVBQWMsRUFDZjs7QUFFRDs7O0dBR0c7QUFFSDtFQUNFLGVBQWM7RUFDZCxpQkFBZ0IsRUFDakI7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOzs7R0FHRztBQUVIOzs7RUFFTyxPQUFPO0VBQ1osZUFBYyxFQUNmOztBQUVEOztHQUVHO0FBRUg7RUFDRSxpQkFBZ0IsRUFDakI7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSx3QkFBdUI7RUFBRyxPQUFPO0VBQ2pDLFVBQVM7RUFBRyxPQUFPO0VBQ25CLGtCQUFpQjtFQUFHLE9BQU8sRUFDNUI7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxrQ0FBaUM7RUFBRyxPQUFPO0VBQzNDLGVBQWM7RUFBRyxPQUFPLEVBQ3pCOztBQUVEO2dGQUNnRjtBQUVoRjs7O0dBR0c7QUFFSDtFQUNFLDhCQUE2QjtFQUFHLE9BQU87RUFDdkMsc0NBQXFDO0VBQUcsT0FBTyxFQUNoRDs7QUFFRDs7O0dBR0c7QUFFSDs7RUFFRSxpQkFBZ0IsRUFDakI7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSxvQkFBbUI7RUFBRyxPQUFPO0VBQzdCLDJCQUEwQjtFQUFHLE9BQU87RUFDcEMsa0NBQWlDO0VBQUcsT0FBTyxFQUM1Qzs7QUFFRDs7R0FFRztBQUVIOztFQUVFLHFCQUFvQixFQUNyQjs7QUFFRDs7R0FFRztBQUVIOztFQUVFLG9CQUFtQixFQUNwQjs7QUFFRDs7O0dBR0c7QUFFSDs7O0VBR0Usa0NBQWlDO0VBQUcsT0FBTztFQUMzQyxlQUFjO0VBQUcsT0FBTyxFQUN6Qjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsbUJBQWtCLEVBQ25COztBQUVEOztHQUVHO0FBRUg7RUFDRSx1QkFBc0I7RUFDdEIsWUFBVyxFQUNaOztBQUVEOztHQUVHO0FBRUg7RUFDRSxlQUFjLEVBQ2Y7O0FBRUQ7OztHQUdHO0FBRUg7O0VBRUUsZUFBYztFQUNkLGVBQWM7RUFDZCxtQkFBa0I7RUFDbEIseUJBQXdCLEVBQ3pCOztBQUVEO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSxZQUFXLEVBQ1o7O0FBRUQ7Z0ZBQ2dGO0FBRWhGOztHQUVHO0FBRUg7O0VBRUUsc0JBQXFCLEVBQ3RCOztBQUVEOztHQUVHO0FBRUg7RUFDRSxjQUFhO0VBQ2IsVUFBUyxFQUNWOztBQUVEOztHQUVHO0FBRUg7RUFDRSxtQkFBa0IsRUFDbkI7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLGlCQUFnQixFQUNqQjs7QUFFRDtnRkFDZ0Y7QUFFaEY7OztHQUdHO0FBRUg7Ozs7O0VBS0Usd0JBQXVCO0VBQUcsT0FBTztFQUNqQyxnQkFBZTtFQUFHLE9BQU87RUFDekIsa0JBQWlCO0VBQUcsT0FBTztFQUMzQixVQUFTO0VBQUcsT0FBTyxFQUNwQjs7QUFFRDs7O0dBR0c7QUFFSDs7RUFDUSxPQUFPO0VBQ2Isa0JBQWlCLEVBQ2xCOztBQUVEOzs7R0FHRztBQUVIOztFQUNTLE9BQU87RUFDZCxxQkFBb0IsRUFDckI7O0FBRUQ7Ozs7R0FJRztBQUVIOzs7O0VBSUUsMkJBQTBCO0VBQUcsT0FBTyxFQUNyQzs7QUFFRDs7R0FFRztBQUVIOzs7O0VBSUUsbUJBQWtCO0VBQ2xCLFdBQVUsRUFDWDs7QUFFRDs7R0FFRztBQUVIOzs7O0VBSUUsK0JBQThCLEVBQy9COztBQUVEOztHQUVHO0FBRUg7RUFDRSwwQkFBeUI7RUFDekIsY0FBYTtFQUNiLCtCQUE4QixFQUMvQjs7QUFFRDs7Ozs7R0FLRztBQUVIO0VBQ0UsdUJBQXNCO0VBQUcsT0FBTztFQUNoQyxlQUFjO0VBQUcsT0FBTztFQUN4QixlQUFjO0VBQUcsT0FBTztFQUN4QixnQkFBZTtFQUFHLE9BQU87RUFDekIsV0FBVTtFQUFHLE9BQU87RUFDcEIsb0JBQW1CO0VBQUcsT0FBTyxFQUM5Qjs7QUFFRDs7O0dBR0c7QUFFSDtFQUNFLHNCQUFxQjtFQUFHLE9BQU87RUFDL0IseUJBQXdCO0VBQUcsT0FBTyxFQUNuQzs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsZUFBYyxFQUNmOztBQUVEOzs7R0FHRztBSEtIOztFR0RFLHVCQUFzQjtFQUFHLE9BQU87RUFDaEMsV0FBVTtFQUFHLE9BQU8sRUFDckI7O0FBRUQ7O0dBRUc7QUhLSDs7RUdERSxhQUFZLEVBQ2I7O0FBRUQ7OztHQUdHO0FIR0g7RUdBRSw4QkFBNkI7RUFBRyxPQUFPO0VBQ3ZDLHFCQUFvQjtFQUFHLE9BQU8sRUFDL0I7O0FBRUQ7O0dBRUc7QUhHSDs7RUdDRSx5QkFBd0IsRUFDekI7O0FBRUQ7OztHQUdHO0FBRUg7RUFDRSwyQkFBMEI7RUFBRyxPQUFPO0VBQ3BDLGNBQWE7RUFBRyxPQUFPLEVBQ3hCOztBQUVEO2dGQUNnRjtBQUVoRjs7O0dBR0c7QUFFSDs7RUFFRSxlQUFjLEVBQ2Y7O0FBRUQ7O0dBRUc7QUFFSDtFQUNFLG1CQUFrQixFQUNuQjs7QUFFRDtnRkFDZ0Y7QUFFaEY7O0dBRUc7QUFFSDtFQUNFLHNCQUFxQixFQUN0Qjs7QUFFRDs7R0FFRztBQUVIO0VBQ0UsY0FBYSxFQUNkOztBQUVEO2dGQUNnRjtBQUVoRjs7R0FFRztBSFZIO0VHYUUsY0FBYSxFQUNkOztBQ3hkRDtFQUNJLHNCQUFxQjtFQUNyQixvSEFDMEQ7RUFDMUQsb0JBQW1CO0VBQ25CLG1CQUFrQixFQUFBOztBQUl0QjtFQUNFLGdCQUFjLEVBQ2Y7O0FBRUQ7RUFDRSxrQkFBZ0I7RUFDaEIsZUNmYSxFRGdCZDs7QUFFRDtFQUVFLHNCQUFxQjtFQUNyQixpQkFBZ0IsRUFFakI7O0FBRUQ7RUFDRSxzQkFBcUI7RUFDckIsZUMzQmEsRUQ0QmQ7O0FBRUQ7RUFDRSxpQ0MzQmMsRUQ0QmY7O0FBRUQ7RUFDRSxlQUFjO0VBQ2Qsa0JBQWlCLEVBQ2xCOztBQUVEO0VBQ0Usc0JBQXFCO0VBQ3JCLG1CQUFrQjtFQUNsQixXQUFVO0VBQ1YsVUFBUTtFQUNSLGdCQUFlO0VBQ2YsV0FBVTtFQUNWLGlCQUFlO0VBaUJmLGlCQUFlLEVBT2hCO0VBdEJDO0lBQ0UsZ0JBQWUsRUFDaEI7RUFYSDtJQWFJLFlBQVc7SUFDWCxZQUFVO0lBQ1YsUUFBTTtJQUNOLE9BQUs7SUFDTCxhQUFXO0lBRVgsZUFBYztJQUNkLG1CQUFrQjtJQUNsQixZQUFXO0lBQ1gsMkJBQXFCO1FBQXJCLHVCQUFxQixFQUN0QjtFQXZCSDtJQTJCSSxpQkFBZ0I7SUFFaEIsdUdBQXdFLEVBQ3pFOztBQUdIO0VBQ0UsZ0JBQWUsRUFDaEI7O0FBRUQ7RUFDRSxpQkFBZ0I7RUFDaEIsa0JBQWlCO0VBQ2pCLGlCQUFnQjtFQUNoQixtQkFBa0IsRUFDbkI7O0FFakZEOztFQUVJLFlBQVc7RUFDWCxjQUFhO0VBQ2IsMEJETXFCLEVDQXhCO0VBVkQ7O0lBT1ksa0JBQWlCLEVBQ3BCOztBQUlUO0VBQ0ksZ0JBQWU7RUFDZixlQUFjLEVBQ2pCOztBQUVEO0VBQ0ksa0JBQWlCO0VBQ2pCLGNBQWE7RUFDYixtR0RSeUYsRUNvQjVGO0VBZkQ7SUFLUSxpQkFBZ0IsRUFDbkI7RUFOTDtJQVNRLFVBQVM7SUFDVCxnQkFBZTtJQUNmLHFCQUFvQjtJQUNwQixvQkFBbUI7SUFDbkIsaUNEcEJpQixFQ3FCcEI7O0FBR0w7RUFDSSxxQkFBYTtFQUFiLGNBQWE7RUFDYiwyQkFBc0I7TUFBdEIsdUJBQXNCLEVBQ3pCOztBQUVEO0VBQ0ksYUFBWTtFQUNaLGtCQUFpQixFQUlwQjtFQU5EO0lBSVEsaUJBQWdCLEVBQ25COztBQzVDTDtFQUNFLG1CQUFrQjtFQUNsQixZQUFXO0VBQ1gscUJBQWE7RUFBYixjQUFhLEVBeUNkO0VBeENDO0lBQ0Usa0JBQWlCO0lBQ2pCLG1CQUFrQjtJQUNsQixZQUFXO0lBQ1gsVUFBUTtJQUNSLHdDQUFvQztJQUNwQyxXQUFVO0lBQ1YsUUFBTyxFQUlSO0lBSEM7TUFSRjtRQVNJLFVBQVMsRUFFWixFQUFBO0VBQ0Q7SUFDRSxnQkFBZTtJQUNmLGlCQUFnQjtJQUNoQixZRlZRO0lFV1IsV0FBVTtJQUNWLFVBQVMsRUFDVjtFQUNEO0lBQ0UsY0FBYTtJQUNiLGVBQWM7SUFDZCxpQ0FBZ0MsRUFpQmpDO0lBaEJDO01BQ0Usb0JBQW1CLEVBQ3BCO0lBTkg7TUFRSSxVQUFTO01BQ1QsV0FBVSxFQUNYO0lBQ0Q7TUFDRSxxQkFBYTtNQUFiLGNBQWEsRUFPZDtNQVJEO1FBR0ksc0JBQXFCLEVBQ3RCO01BSkg7UUFNSSxlQUFjLEVBQ2Y7O0FDekNQO0VBQ0UsbUJBQWtCO0VBQ2xCLFdBQVU7RUFDVixtQkFBa0I7RUFDbEIsa0JBQWlCLEVBZWxCO0VBbkJEO0lBTUksZUFBYyxFQUNmO0VBUEg7SUFTSSx3QkFBdUI7SUFDdkIsbUJBQWtCO0lBQ2xCLGtCQUFpQjtJQUNqQixXQUFVO0lBQ1Ysa0JBQWlCLEVBS2xCO0lBbEJIO01BZU0sYUFBWSxFQUNiOztBQUlMO0VBQ0U7SUFDRSxjQUFhLEVBQ2QsRUFBQTs7QUFHSDtFQUNFO0lBRUksV0FBVSxFQUNYLEVBQUE7O0FBSUw7RUFDRTtJQUNFLHVCQUFzQjtJQUN0QixjQUFhO0lBQ2IsOEJBQTZCLEVBQzVCO0VBQ0g7SUFDRSxXQUFVLEVBS1g7SUFORDtNQUlJLFdBQVUsRUFDWCxFQUFBOztBQzdDTDtFQUNFO0lBQ0UsNkJBQTRCLEVBQUE7RUFFOUI7SUFDRSw0QkFBMkIsRUFBQTtFQUU3QjtJQUNFLDJCQUEwQixFQUFBLEVBQUE7O0FBSTlCO0VBQ0Usa0JBQWlCO0VBQ2pCLDJDQUF1QztFQUN2QyxvQkFBbUI7RUFDbkIsY0FBYTtFQUNiLG1CQUFrQjtFQUNsQixXQUFVO0VBQ1YsbUJBQWtCO0VBQ2xCLHFCQUFhO0VBQWIsY0FBYTtFQUNiLDhDQUE2QztFQUM3Qyw2REFBNEQsRUEwQzdEO0VBcEREO0lBWUksdUJBQXNCLEVBSXZCO0lBaEJIO01BY00sc0JBQXFCLEVBQ3RCO0VBRUg7SUFDRSxZQUFPO1FBQVAsUUFBTyxFQUNSO0VBQ0Q7SUFDRSxpQkFBZ0I7SUFDaEIsVUFBUSxFQUlUO0lBTkQ7TUFJSSxlSmhDVSxFSWlDWDtFQXpCTDtJQTRCSSxZQUFXO0lBQ1gsZUFBYztJQUNkLGtCQUFpQjtJQUNqQixtQkFBa0I7SUFDbEIseUJBQXdCO0lBQ3hCLDBCQUF5QjtJQUN6QixTQUFRO0lBQ1IsVUFBUztJQUNULFlBQVc7SUFDWCwyQ0FBdUM7SUFDdkMsbUJBQWtCLEVBQ25CO0VBQ0Q7SUFDRSw4REFBbUYsRUFDcEY7RUFDRDtJQUNFLHlEQUE0RSxFQUM3RTtFQUNEO0lBQ0UsNkRBQW1GLEVBQ3BGO0VBaERIO0lBa0RJLFVBQVMsRUFDVjs7QUMvREg7RUFDSSxxQkFBYTtFQUFiLGNBQWE7RUFDYixpQkFBZ0I7RUFDaEIsVUFBUztFQUNULGlCQUFnQjtFQUNoQix1QkFBOEI7TUFBOUIsK0JBQThCO0VBQzlCLDRCQUE0QjtFQUM1QixtRUxPbUUsRUtzRHRFO0VBNURHO0lBQ0kscUJBQWE7SUFBYixjQUFhLEVBSWhCO0lBSEc7TUFDSSxtQkFBYztVQUFkLGVBQWMsRUFDakI7RUFFTDtJQUNJLFlBQVc7SUFDWCxxQkFBYTtJQUFiLGNBQWEsRUFDaEI7RUFDRDtJQUNJLGFBQVk7SUFDWixpREFBZ0Q7SUFDaEQsMEJBQXlCO0lBQ3pCLCtCQUE4QjtJQUM5QixlQUFjO0lBQ2QscUJBQWE7SUFBYixjQUFhO0lBQ2IsMkJBQXNCO1FBQXRCLHVCQUFzQjtJQUN0Qix1QkFBbUI7UUFBbkIsb0JBQW1CO0lBQ25CLHNCQUF1QjtRQUF2Qix3QkFBdUI7SUFDdkIsMkJBQTBCO0lBQzFCLHFDQUFvQyxFQXlCdkM7SUFwQ0Q7TUFhUSxZQUFXO01BQ1gscUJBQW9CO01BQ3BCLFlBQVc7TUFDWCxvQkFBbUIsRUFDdEI7SUFqQkw7TUFvQlEsMkJBQTBCLEVBSTdCO01BeEJMO1FBc0JZLDBCQUFxQjtZQUFyQixzQkFBcUIsRUFDeEI7SUFFTDtNQUdZLG9CQUFlO1VBQWYsZ0JBQWUsRUFDbEI7SUFKVDtNQU9RLGFBQVk7TUFDWixVQUFTLEVBQ1o7RUFwRGI7SUF3RFEsc0JBQXVCO1FBQXZCLHdCQUF1QjtJQUN2QixhQUFZLEVBVWY7SUFuRUw7TUEyRFksY0FBYSxFQUNoQjtJQTVEVDtNQThEWSw2QkFBNEIsRUFDL0I7SUEvRFQ7TUFpRVksYUFBWSxFQUNmOztBQUlUO0VBQ0k7SUFDSSxnQkFBZSxFQUNsQixFQUFBOztBQUdMO0VBQ0k7SUFDSSxXQUFVLEVBYWI7SUFaRztNQUNJLG1CQUFrQjtNQUNsQixvQkFBbUIsRUFTdEI7TUFYRDtRQUlRLFlBQVcsRUFDZDtNQUNEO1FBRVEsYUFBWSxFQUNmLEVBQUE7O0FBTWpCO0VBQ0k7SUFDSSxXQUFVO0lBQ1YsZ0JBQWUsRUFPbEI7SUFURDtNQUlRLHdCQUF1QjtNQUN2QixhQUFZO01BQ1osbUJBQWtCO01BQ2xCLFVBQVMsRUFDWixFQUFBOztBQUlUO0VBQ0k7SUFDSSxvQkFBZTtRQUFmLGdCQUFlLEVBU2xCO0lBUkc7TUFDSSxrQkFBUTtVQUFSLFNBQVEsRUFNWDtNQUxHO1FBQ0ksK0NBQThDO1FBQzlDLGtCQUFRO1lBQVIsU0FBUTtRQUNSLFlBQVcsRUFDZCxFQUFBOztBQUtiO0VBRVE7SUFDSSxZQUFXLEVBWWQ7SUFYRztNQUNJLG1CQUFTO1VBQVQsVUFBUztNQUNULGtEQUFpRCxFQVFwRDtNQVZEO1FBSVEsZ0JBQWU7UUFDZixhQUFZLEVBQ2Y7TUFOTDtRQVFRLGNBQWEsRUFDaEI7RUFHVDtJQUNJLGtCQUFpQixFQUNwQjtFQUNEO0lBQ0ksWUFBVyxFQVVkO0lBWEQ7TUFJUSxnQkFBZSxFQUNsQjtJQUNEO01BRVEsWUFBVyxFQUNkO0VBSWI7SUFDSSxjQUFTO0lBQ1QsbUJBQWtCLEVBQ3JCLEVBQUE7O0FBR0w7RUFDSSxtQkFBa0IsRUFDbkI7O0FDaktIO0VBQ0UsWUFBVyxFQWNaO0VBZkQ7SUFHSSxhQUFZLEVBQ2I7RUFKSDtJQU1JLGtCQUFpQixFQUNsQjtFQVBIO0lBU0ksb0JBQW1CLEVBQ3BCO0VBVkg7SUFZSSxvQk5aVztJTWFYLGFBQVksRUFDYjs7QUNkSDtFQUNFLHFCQUFZO0VBQVosY0FBWTtFQUNaLG9CQUFlO01BQWYsZ0JBQWU7RUFFZiw0QkFBMkIsRUFJNUI7RUFIQztJQUxGO01BTUksb0JBQWU7VUFBZixnQkFBZSxFQUVsQixFQUFBOztBQUVEO0VBQ0Usa0JBQWdCO0VBQ2hCLDBCQUF5QjtFQUN6QixnQ0FBK0I7RUFDL0IscUJBQW9CO0VBQ3BCLGFBQVk7RUFDWix3RVBMMEQ7RU9NMUQsa0JBQWlCO0VBQ2pCLGlCQUFnQjtFQUNoQiwwQlBqQmMsRU8yQ2Y7RUF6QkM7SUFDRSxZQUFXLEVBQ1o7RUFDRDtJQUNFLGNBQWEsRUFLZDtJQU5EO01BR0ksaUJBQWdCO01BQ2hCLGlCQUFnQixFQUNqQjtFQWxCTDtJQXFCSSwwQkFBcUI7UUFBckIsc0JBQXFCLEVBQ3RCO0VBQ0Q7SUF2QkY7TUF3QkksV0FBVSxFQVdiLEVBQUE7RUFUQztJQTFCRjtNQTJCSSxXQUFVLEVBUWIsRUFBQTtFQU5DO0lBN0JGO01BOEJJLDBCQUF5QixFQUs1QixFQUFBO0VBSEM7SUFoQ0Y7TUFpQ0ksWUFBVyxFQUVkLEVBQUE7O0FBRUQ7RUFDRSxtQkFBa0I7RUFDbEIsV0FBVTtFQUNWLDRDQUF3QztFQUN4Qyx5RUFBa0U7RUFDbEUsb0JBQW1CO0VBQ25CLGtCQUFpQjtFQUNqQixxQkFBb0I7RUFDcEIscUJBQWE7RUFBYixjQUFhO0VBQ2IsYUFBWTtFQUNaLHVCQUFtQjtNQUFuQixvQkFBbUI7RUFDbkIsMEJBQTZCO01BQTdCLDhCQUE2QixFQUM5Qjs7QUFFRDtFQUNFLGdCQUFlLEVBVWhCO0VBWEQ7SUFHSSxZQUFXO0lBQ1gsWUFDRixFQUFFO0VBQ0Y7SUFFSSxpQkFBZ0IsRUFDakI7O0FBS0w7RUFDRSxtQkFBa0I7RUFDbEIsdUJBQXNCO0VBQ3RCLGtCQUFpQjtFQUNqQixrQkFBaUIsRUFZbEI7RUFoQkQ7SUFPSSxhQUFZO0lBQ1osWUFBVztJQUNYLE9BQU07SUFDTixTQUFRO0lBQ1IsbUJBQWtCO0lBQ2xCLFFBQU87SUFDUCxrQkFBaUI7SUFDakIsZ0NBQStCLEVBQ2hDOztBQUdIO0VBRUksOEJBQTZCO0VBQzdCLFdBQVUsRUFDWDs7QUNqR0g7RUFDSSxVQUFTO0VBQ1QsV0FBVTtFQUNWLGlCQUFnQjtFQUNoQixxQkFBYTtFQUFiLGNBQWE7RUFDYixvQkFBbUI7RUFDbkIsb0JBQWU7TUFBZixnQkFBZSxFQUNsQjs7QUFFRDtFQUNJLGVBQWM7RUFDZCxtQkFBa0I7RUFDbEIsc0JBQXFCLEVBK0N4QjtFQTlDRztJQUNJLHFCQUFhO0lBQWIsY0FBYTtJQUNiLHNCQUF1QjtRQUF2Qix3QkFBdUI7SUFDdkIsdUJBQW1CO1FBQW5CLG9CQUFtQixFQWdCdEI7SUFuQkQ7TUFLUSxZQUFXO01BQ1gsZUFBYztNQUNkLG9CQUFtQjtNQUNuQixtQkFBa0I7TUFDbEIsV0FBVSxFQVNiO01BbEJMO1FBV1ksb0JSZFM7UVFlVCw2QkFBNEIsRUFDL0I7TUFiVDtRQWVZLG9CUjFCQTtRUTJCQSxZUnBCSixFUXFCQztFQUdUO0lBQ0ksb0JSL0JhO0lRZ0NiLFlSMUJJO0lRMkJKLHFCQUFhO0lBQWIsY0FBYTtJQUNiLG1CQUFrQixFQU9yQjtJQU5HO01BQ0ksb0JBQWlDLEVBSXBDO01BTEQ7UUFHUSxhQUFZLEVBQ2Y7RUFHVDtJQUNJLG1CQUFrQjtJQUNsQixlQUFjO0lBQ2QsMkJBQTBCO0lBQzFCLGFBQVksRUFDZjtFQUNEO0lBQ0ksbUJBQWtCO0lBQ2xCLGtCQUFpQjtJQUNqQiwwQ0FBeUM7SUFDekMsbUJBQWtCO0lBQ2xCLFNBQVM7SUFDVCw2QkFBNEIsRUFDL0I7O0FBR0w7RUFDSSwyQkFBMEIsRUFDN0I7O0FBRUQ7RUFDSSxxQkFBYTtFQUFiLGNBQWE7RUFDYixzQkFBdUI7TUFBdkIsd0JBQXVCLEVBSzFCO0VBUEQ7SUFJUSxtQkFBa0I7SUFDbEIsYUFBWSxFQUNmOztBQ3ZFTDtFQUNFLGdCQUFlO0VBQ2YsYUFBWSxFQW1CYjtFQXJCRDtJQUlJLGNBQWEsRUFJZDtJQVJIO01BTU0sa0JBQWlCLEVBQ2xCO0VBUEw7SUFVSSxnQkFBZSxFQUNoQjtFQVhIO0lBYUksYUFBWSxFQUNiO0VBZEg7SUFnQkksa0JBQWlCLEVBSWxCO0lBcEJIO01Ba0JNLGdCQUFjLEVBQ2Y7O0FBSUw7RUFDRSxxQkFBYTtFQUFiLGNBQWE7RUFDYixvQkFBZTtNQUFmLGdCQUFlO0VBQ2YsMkJBQXNCO01BQXRCLHVCQUFzQjtFQUN0QixZQUFXO0VBQ1gsY0FBYSxFQUlkO0VBVEQ7SUFPSSxXQUFVLEVBQ1g7O0FBR0g7RUFDRTtJQUNFLFlBQVcsRUFDWjtFQUNEO0lBQ0UsYUFBWSxFQUNiO0VBQ0Q7SUFDRSxZQUFXLEVBQ1osRUFBQTs7QUMxQ0Q7RUFDRSxjQUFhO0VBQ2IsbUJBQWtCO0VBQ2xCLGlCQUFnQjtFQUNoQixxQkFBYTtFQUFiLGNBQWE7RUFDYixzQkFBdUI7TUFBdkIsd0JBQXVCO0VBQ3ZCLHVCQUFtQjtNQUFuQixvQkFBbUI7RUFDbkIsd0VBQStEO1VBQS9ELGdFQUErRCxFQWtCaEU7RUF6QkQ7SUFTSSxlQUFjO0lBQ2QsWUFBVztJQUNYLG1CQUFrQjtJQUNsQixhQUFZO0lBQ1osWUFBVztJQUNYLE9BQU07SUFDTixTQUFRO0lBQ1Isd1FBSWtGO0lBQ2xGLGFBQVk7SUFDWixXQUFVO0lBQ1Ysd0VBQStEO1lBQS9ELGdFQUErRCxFQUNoRTs7QUFFSDtFQUNFLFlBQVc7RUFDWCxhQUFZO0VBQ1osT0FBTTtFQUNOLFFBQU87RUFDUCxrQkFBaUI7RUFDakIsbUJBQWtCLEVBQ25COztBQUNEO0VBQ0Usa0JBQWlCO0VBRWpCLG1CQUFrQjtFQUNsQixjQUFhO0VBQ2IsbUJBQWtCO0VBQ2xCLDZDQUF5QyxFQUMxQzs7QUFDRDtFQUNFLHlCQUF3QjtFQUN4QixnQkFBZTtFQUNmLGtCQUFpQjtFQUNqQixtQkFBa0IsRUFDbkI7O0FBQ0Q7RUFDRSxVQUFTO0VBQ1Qsa0JBQWlCO0VBQ2pCLG9CQUFtQjtFQUNuQixvQlZyRFc7RVVzRFgsYUFBWTtFQUNaLHNCQUFxQjtFQUNyQixhQUFZO0VBQ1osbUJBQWtCO0VBQ2xCLGNBQWEsRUFJZDtFQUhDO0lBVkY7TUFXSSxnQkFBZSxFQUVsQixFQUFBOztBQzdERDtFQUNFLGlCQUFnQjtFQUNoQixVQUFTO0VBQ1QsV0FBVTtFQUNWLG1CQUFrQixFQXNCbkI7RUExQkQ7SUFNSSxjQUFTO0lBQ1QsZ0JBQWU7SUFDZixtQkFBa0I7SUFDbEIsV0FBVTtJQUNWLE9BQU0sRUFDUDtFQVhIO0lBYUksWUFBVztJQUNYLFlBQVcsRUFDWjtFQUNEO0lBRUksVUFBUyxFQUNWO0VBRUg7SUFFSSwrQkFBOEIsRUFDL0I7O0FBS1A7RUFDRTtJQUNFLHlCQUF3QjtJQUN4QixRQUFPO0lBQ1AsV0FBVSxFQUFBO0VBRVo7SUFBTSxXQUFVLEVBQUE7RUFDaEI7SUFBTSxZQUFXLEVBQUE7RUFDakI7SUFBTSxXQUFVLEVBQUE7RUFDaEI7SUFBTSxZQUFXLEVBQUE7RUFDakI7SUFDRSw4QkFBNkI7SUFDN0IsV0FBVTtJQUNWLFdBQVUsRUFBQSxFQUFBOztBQzNDZDtFQUNFLGtCQUFpQjtFQUNqQiwwQlpRdUI7RVlQdkIsaUJBQWdCO0VBQ2hCLGlDWk11QjtFWUx2QixvQkFBbUI7RUFDbkIsd0NBQW9DO0VBQ3BDLG1CQUFrQjtFQUNsQixrQkFBaUIsRUFnRGxCO0VBeEREO0lBVUksV0FBUztJQUNULFFBQU87SUFDUCxZQUFXO0lBQ1gsZUFBYztJQUNkLCtGWkQ2RjtJWUU3RixtQkFBa0I7SUFDbEIsYUFBWTtJQUNaLDZCQUE0QixFQUM3QjtFQUNEO0lBQ0UsaUNaVnFCO0lZV3JCLHFCQUFhO0lBQWIsY0FBYSxFQWFkO0lBZkQ7TUFLSSxnQ1pkbUI7TVllbkIsZ0JBQWU7TUFDZixxQkFBYTtNQUFiLGNBQWE7TUFDYix1QkFBbUI7VUFBbkIsb0JBQW1CO01BQ25CLFlBQU87VUFBUCxRQUFPO01BQ1Asc0JBQXVCO1VBQXZCLHdCQUF1QixFQUl4QjtNQWRIO1FBWU0sZ0JBQWUsRUFDaEI7RUFHTDtJQUNFLHFCQUEyQjtRQUEzQiw0QkFBMkI7SUFDM0IsbUJBQW1CO0lBQ25CLHFCQUFhO0lBQWIsY0FBYSxFQUlkO0lBUEQ7TUFLSSxtQkFBa0IsRUFDbkI7RUFFSDtJQUNFLGtCQUFpQjtJQUNqQixlQUEwQixFQUMzQjtFQUNEO0lBQ0UsZVo1Q1ksRVk2Q2I7RUFDRDtJQUNFLGNBQWEsRUFDZDtFQXBESDtJQXNESSxzQkFBb0IsRUFDckI7O0FDdkRIOztHQUVHO0FBQ0g7RUFDRSxtQkFBa0I7RUFDbEIsMENBQXNDO0VBQ3RDLG9CQUFtQixFQWdEcEI7RUEvQ0M7SUFDRSxxQkFBYTtJQUFiLGNBQWE7SUFDYixzQkFBdUI7UUFBdkIsd0JBQXVCLEVBNEJ4QjtJQTlCRDtNQUlJLGNBQWEsRUF5QmQ7TUE3Qkg7UUFPUSxlYlZNLEVhV1A7TUFSUDtRQVdNLGFBQVk7UUFLWjs7O1dBR0csRUFTSjtRQTVCTDtVQWFRLGFBQVM7VUFDVCxnQkFBZSxFQUNoQjtRQWZQO1VBb0J1QixrQkFBUTtjQUFSLFNBQVEsRUFBSztRQXBCcEM7VUFxQnVCLGtCQUFRO2NBQVIsU0FBUSxFQUFLO1FBckJwQztVQXNCdUIsa0JBQVE7Y0FBUixTQUFRLEVBQUs7UUF0QnBDO1VBdUJ1QixrQkFBUTtjQUFSLFNBQVEsRUFBSztRQXZCcEM7VUF3QnVCLGtCQUFRO2NBQVIsU0FBUSxFQUFLO1FBeEJwQztVQTBCUSxlQUEyQixFQUM1QjtFQS9CVDtJQW9DSSxVQUFTO0lBQ1QsV0FBVTtJQUNWLGdCQUFlO0lBQ2YsY0FBYTtJQUNiLGNBQWEsRUFDZDtFQUNEO0lBQ0UscUJBQWE7SUFBYixjQUFhO0lBQ2Isc0JBQXVCO1FBQXZCLHdCQUF1QjtJQUN2Qix1QkFBbUI7UUFBbkIsb0JBQW1CO0lBQ25CLDhCYnZDcUIsRWEyQ3RCO0lBUkQ7TUFNSSxZQUFPO1VBQVAsUUFBTyxFQUNSOztBQ3BETDtFQUNFLHFCQUFhO0VBQWIsY0FBYTtFQUNiLHVCQUFtQjtNQUFuQixvQkFBbUI7RUFDbkIsa0JBQWlCO0VBQ2pCLGlCQUFnQjtFQUNoQixvQkFBbUI7RUFDbkIsd0VkSzBELEVjaUIzRDtFQXJCQztJQUNFLG1CQUFjO1FBQWQsZUFBYztJQUNkLDZCQUE0QixFQUs3QjtJQVBEO01BSUksa0JBQWlCO01BQ2pCLGFBQVMsRUFDWDtFQUVGO0lBQ0UsbUJBQWM7UUFBZCxlQUFjO0lBQ2QsNkJBQTRCLEVBSzdCO0lBUEQ7TUFJSSxtQkFBa0I7TUFDbEIsYUFBUyxFQUNYO0VBRUY7SUFDRSxtQkFBYztRQUFkLGVBQWM7SUFDZCxjQUFhO0lBQ2IsbUJBQWtCLEVBQ25COztBQUdIO0VBQ0UseUJBQXdCO0VBQ3hCLHNCQUFxQixFQUN0Qjs7QUNqQ0Q7RUFDRSxjQUFhO0VBQ2Isa0JBQWlCO0VBQ2pCLHdFZlEwRCxFZVAzRDs7QUFDRDtFQUNFLGNBQWEsRUFDZDs7QUFFRDtFQUNFLGFBQVksRUFJYjtFQUxEO0lBR0ksWUFBVyxFQUNaOztBQ2JIO0VBQ0ksdUJBQXNCO0VBQ3RCLGFBQVksRUFDZjs7QUFFRDtFQUNJLFVBQVM7RUFDVCxvQmhCTFk7RWdCTVosWWhCQ1E7RWdCQVIsc0JBQXFCO0VBQ3JCLGlCQUFnQixFQUNuQjs7QUFFRDtFQUNJLFdBQVU7RUFDVixrQkFBaUIsRUFDcEI7O0FBQ0Q7RUFDSSxlQUFjO0VBQ2Qsb0JBQW1CLEVBS3RCO0VBUEQ7SUFJUSxrQkFBaUI7SUFDakIsY0FBYSxFQUNoQjs7QUFHTDtFQUNJLGdCQUFlO0VBQ2YsYUFBWTtFQUNaLG1CQUFrQjtFQUNsQiw0QkFBa0I7TUFBbEIsMkJBQWtCO01BQWxCLG1CQUFrQixFQUNyQjs7QUFFRDtFQUNJLGtCQUFpQjtFQUNqQixjQUFhO0VBQ2IsMkNBQTBDLEVBQzdDOztBQUVEO0VBQ0ksaUJBQWdCLEVBQ25COztBQUVEO0VBQ0ksY0FBYTtFQUNiLGtCQUFpQjtFQUNqQixlQUFjO0VBQ2Qsc0JBQXFCLEVBQ3hCOztBQ2hERDtFQUNJLGtCQUFpQixFQUNwQjs7QUFFRDtFQUNJLGlCQUFnQixFQUluQjtFQUhHO0lBRko7TUFHUSxjQUFhLEVBRXBCLEVBQUE7O0FBRUQ7RUFDSSxxQkFBYTtFQUFiLGNBQWEsRUFVaEI7RUFYRDtJQUdRLGlCQUFnQixFQUNuQjtFQUpMO0lBTVEsd0JBQXVCLEVBSTFCO0lBVkw7TUFRWSxrQkFDSixFQUFFOztBQUlWO0VBQ0ksMEJqQnRCaUI7RWlCdUJqQixjQUFhO0VBQ2IscUJBQWE7RUFBYixjQUFhLEVBY2hCO0VBakJEO0lBS1EsdUJqQnBCSTtJaUJxQkosb0JqQjNCYTtJaUI0QmIsWWpCdEJJO0lpQnVCSixlQUFjO0lBQ2QsbUJBQWtCO0lBQ2xCLGFBQVk7SUFDWixZQUFXLEVBS2Q7SUFoQkw7TUFhWSxpQmpCNUJBO01pQjZCQSxlakJuQ1MsRWlCb0NaOztBQUdUO0VBQ0ksZWpCM0NXLEVpQitDZDtFQUxEO0lBR1EsZWpCMUNhLEVpQjJDaEI7O0FBR0w7RUFDSSxtQkFBa0IsRUFJckI7RUFMRDtJQUdRLGdCQUFlLEVBQ2xCOztBQUdMO0VBQ0k7SUFDSSwyQkFBc0I7UUFBdEIsdUJBQXNCLEVBT3pCO0lBUkQ7TUFHUSxnQkFBZSxFQUNsQjtJQUpMO01BTVEsY0FBYSxFQUNoQixFQUFBOztBQUlUO0VBQ0k7SUFDSSxjQUFhLEVBQ2hCLEVBQUE7O0FDdkVMO0VBQ0UsYUFBWTtFQUNaLGFBQVk7RUFDWixZQUFXLEVBd0NaO0VBM0NEO0lBTUkscUJBQW9CO0lBQ3BCLGVBQWM7SUFDZCxxQkFBaUI7UUFBakIsa0JBQWlCLEVBS2xCO0lBYkg7TUFVTSxvQmxCUGU7TWtCUWYsWWxCRk0sRWtCR1A7RUFaTDtJQWVJLDBCQUF3QjtJQUN4Qix3QkFBdUIsRUFDeEI7RUFqQkg7SUFvQkksaUJBQWdCO0lBQ2hCLGlCQUFnQixFQUlqQjtJQXpCSDtNQXVCTSxhQUFZLEVBQ2I7RUFJSDtJQTVCRjtNQTZCSSxtQkFBa0IsRUFjckIsRUFBQTtFQVhDO0lBaENGO01BaUNJLFlBQVc7TUFDWCxhQUFZLEVBU2Y7TUEzQ0Q7UUFxQ00scUJBQWE7UUFBYixjQUFhO1FBQ2IsNEJBQTZCO1lBQTdCLDhCQUE2QjtRQUM3QixvQkFBbUI7UUFDbkIsY0FBYSxFQUNkLEVBQUE7O0FBSUw7RUFDRSxlQUFjO0VBQ2QsWUFBVyxFQXFCWjtFQW5CQztJQUpGO01BS0ksWUFBVyxFQWtCZCxFQUFBO0VBZkM7SUFSRjtNQVNJLGVBQWMsRUFjakI7TUF2QkQ7UUFXTSxpQkFBZ0I7UUFDaEIsWUFBVztRQUNYLGNBQWEsRUFJZDtRQWpCTDtVQWVRLFlBQVcsRUFDWixFQUFBO0VBaEJQO0lBcUJJLDJCQUEwQixFQUMzQjs7QUFHSDtFQUNFLDhCQUE2QixFQUM5Qjs7QUFFRDtFQUNFLG1CQUFrQjtFQUNsQixZQUFXO0VBQ1gsV0FBVSxFQUVYIiwiZmlsZSI6InN0eWxlLnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJAY2hhcnNldCBcIlVURi04XCI7XG5odG1sLCBib2R5IHtcbiAgbWFyZ2luOiAwO1xuICBwYWRkaW5nOiAwO1xuICBoZWlnaHQ6IDEwMCU7IH1cblxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTBweDsgfVxuXG5ib2R5IHtcbiAgYmFja2dyb3VuZDogI2VmZWZlZjsgfVxuXG4jY29udGFpbmVyIHtcbiAgbWluLWhlaWdodDogMTAwJTtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gICNjb250YWluZXIgLmNvbnRlbnQge1xuICAgIHBhZGRpbmctYm90dG9tOiAyNjBweDsgfVxuICAgICNjb250YWluZXIgLmNvbnRlbnQgLmFkbWluX19hcmVhIHtcbiAgICAgIG1hcmdpbi1ib3R0b206IC0zMHB4OyB9XG5cbi5oZXJvX19pbWFnZSB7XG4gIGJhY2tncm91bmQ6IHVybChcIi9pbWFnZXMvZ2pqYW1lcy1oZXJvMi5wbmdcIikgbm8tcmVwZWF0IGNlbnRlcjtcbiAgLXdlYmtpdC1iYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuICAtbW96LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIC1vLWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGhlaWdodDogODAwcHg7IH1cblxuLmFkbWluX19hcmVhIHtcbiAgZGlzcGxheTogZmxleDsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA5MDBweCkge1xuICAgIC5hZG1pbl9fYXJlYSB7XG4gICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyB9IH1cblxuLmlubmVyIHtcbiAgbWF4LXdpZHRoOiAxMzUwcHg7XG4gIG1hcmdpbjogMCBhdXRvOyB9XG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDE0MDBweCkge1xuICAgIC5pbm5lciB7XG4gICAgICBwYWRkaW5nOiAycmVtOyB9IH1cblxuZm9vdGVyIHtcbiAgaGVpZ2h0OiAyMzBweDtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KDkwZGVnLCAjMUYwODVGIDAlLCAjNTMyNzlGIDEwMCUpO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIGJvdHRvbTogMDtcbiAgd2lkdGg6IDEwMCU7IH1cblxuaHRtbCB7XG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7IH1cblxuKiwgKjpiZWZvcmUsICo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0OyB9XG5cbmltZyB7XG4gIG1heC13aWR0aDogMTAwJTsgfVxuXG4vKiEgbm9ybWFsaXplLmNzcyB2NS4wLjAgfCBNSVQgTGljZW5zZSB8IGdpdGh1Yi5jb20vbmVjb2xhcy9ub3JtYWxpemUuY3NzICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZGVmYXVsdCBmb250IGZhbWlseSBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqIDIuIENvcnJlY3QgdGhlIGxpbmUgaGVpZ2h0IGluIGFsbCBicm93c2Vycy5cbiAqIDMuIFByZXZlbnQgYWRqdXN0bWVudHMgb2YgZm9udCBzaXplIGFmdGVyIG9yaWVudGF0aW9uIGNoYW5nZXMgaW5cbiAqICAgIElFIG9uIFdpbmRvd3MgUGhvbmUgYW5kIGluIGlPUy5cbiAqL1xuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5odG1sIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7XG4gIC8qIDEgKi9cbiAgbGluZS1oZWlnaHQ6IDEuMTU7XG4gIC8qIDIgKi9cbiAgLW1zLXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7XG4gIC8qIDMgKi9cbiAgLXdlYmtpdC10ZXh0LXNpemUtYWRqdXN0OiAxMDAlO1xuICAvKiAzICovIH1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIFJlbW92ZSB0aGUgbWFyZ2luIGluIGFsbCBicm93c2VycyAob3BpbmlvbmF0ZWQpLlxuICovXG5ib2R5IHtcbiAgbWFyZ2luOiAwOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKi9cbmFydGljbGUsXG5hc2lkZSxcbmZvb3RlcixcbmhlYWRlcixcbm5hdixcbnNlY3Rpb24ge1xuICBkaXNwbGF5OiBibG9jazsgfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGZvbnQgc2l6ZSBhbmQgbWFyZ2luIG9uIGBoMWAgZWxlbWVudHMgd2l0aGluIGBzZWN0aW9uYCBhbmRcbiAqIGBhcnRpY2xlYCBjb250ZXh0cyBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBTYWZhcmkuXG4gKi9cbmgxIHtcbiAgZm9udC1zaXplOiAyZW07XG4gIG1hcmdpbjogMC42N2VtIDA7IH1cblxuLyogR3JvdXBpbmcgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4ge1xuICAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IG1hcmdpbiBpbiBJRSA4LlxuICovXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4OyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gRmlyZWZveC5cbiAqIDIuIFNob3cgdGhlIG92ZXJmbG93IGluIEVkZ2UgYW5kIElFLlxuICovXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94O1xuICAvKiAxICovXG4gIGhlaWdodDogMDtcbiAgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgaW5oZXJpdGFuY2UgYW5kIHNjYWxpbmcgb2YgZm9udCBzaXplIGluIGFsbCBicm93c2Vycy5cbiAqIDIuIENvcnJlY3QgdGhlIG9kZCBgZW1gIGZvbnQgc2l6aW5nIGluIGFsbCBicm93c2Vycy5cbiAqL1xucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtO1xuICAvKiAyICovIH1cblxuLyogVGV4dC1sZXZlbCBzZW1hbnRpY3NcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuYSB7XG4gIGJhY2tncm91bmQtY29sb3I6IHRyYW5zcGFyZW50O1xuICAvKiAxICovXG4gIC13ZWJraXQtdGV4dC1kZWNvcmF0aW9uLXNraXA6IG9iamVjdHM7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmE6YWN0aXZlLFxuYTpob3ZlciB7XG4gIG91dGxpbmUtd2lkdGg6IDA7IH1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5hYmJyW3RpdGxlXSB7XG4gIGJvcmRlci1ib3R0b206IG5vbmU7XG4gIC8qIDEgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmU7XG4gIC8qIDIgKi9cbiAgdGV4dC1kZWNvcmF0aW9uOiB1bmRlcmxpbmUgZG90dGVkO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBpbmhlcml0OyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuYixcbnN0cm9uZyB7XG4gIGZvbnQtd2VpZ2h0OiBib2xkZXI7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5jb2RlLFxua2JkLFxuc2FtcCB7XG4gIGZvbnQtZmFtaWx5OiBtb25vc3BhY2UsIG1vbm9zcGFjZTtcbiAgLyogMSAqL1xuICBmb250LXNpemU6IDFlbTtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5kZm4ge1xuICBmb250LXN0eWxlOiBpdGFsaWM7IH1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cbm1hcmsge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmYwO1xuICBjb2xvcjogIzAwMDsgfVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5zbWFsbCB7XG4gIGZvbnQtc2l6ZTogODAlOyB9XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1YixcbnN1cCB7XG4gIGZvbnQtc2l6ZTogNzUlO1xuICBsaW5lLWhlaWdodDogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB2ZXJ0aWNhbC1hbGlnbjogYmFzZWxpbmU7IH1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtOyB9XG5cbnN1cCB7XG4gIHRvcDogLTAuNWVtOyB9XG5cbi8qIEVtYmVkZGVkIGNvbnRlbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5hdWRpbyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gaU9TIDQtNy5cbiAqL1xuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBib3JkZXIgb24gaW1hZ2VzIGluc2lkZSBsaW5rcyBpbiBJRSAxMC0uXG4gKi9cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTsgfVxuXG4vKipcbiAqIEhpZGUgdGhlIG92ZXJmbG93IGluIElFLlxuICovXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47IH1cblxuLyogRm9ybXNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmlucHV0LFxub3B0Z3JvdXAsXG5zZWxlY3QsXG50ZXh0YXJlYSB7XG4gIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmO1xuICAvKiAxICovXG4gIGZvbnQtc2l6ZTogMTAwJTtcbiAgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTtcbiAgLyogMSAqL1xuICBtYXJnaW46IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuYnV0dG9uLFxuaW5wdXQge1xuICAvKiAxICovXG4gIG92ZXJmbG93OiB2aXNpYmxlOyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cbmJ1dHRvbixcbnNlbGVjdCB7XG4gIC8qIDEgKi9cbiAgdGV4dC10cmFuc2Zvcm06IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cbmJ1dHRvbixcbmh0bWwgW3R5cGU9XCJidXR0b25cIl0sXG5bdHlwZT1cInJlc2V0XCJdLFxuW3R5cGU9XCJzdWJtaXRcIl0ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IGJ1dHRvbjtcbiAgLyogMiAqLyB9XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBib3JkZXIgYW5kIHBhZGRpbmcgaW4gRmlyZWZveC5cbiAqL1xuYnV0dG9uOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJidXR0b25cIl06Oi1tb3otZm9jdXMtaW5uZXIsXG5bdHlwZT1cInJlc2V0XCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJzdWJtaXRcIl06Oi1tb3otZm9jdXMtaW5uZXIge1xuICBib3JkZXItc3R5bGU6IG5vbmU7XG4gIHBhZGRpbmc6IDA7IH1cblxuLyoqXG4gKiBSZXN0b3JlIHRoZSBmb2N1cyBzdHlsZXMgdW5zZXQgYnkgdGhlIHByZXZpb3VzIHJ1bGUuXG4gKi9cbmJ1dHRvbjotbW96LWZvY3VzcmluZyxcblt0eXBlPVwiYnV0dG9uXCJdOi1tb3otZm9jdXNyaW5nLFxuW3R5cGU9XCJyZXNldFwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwic3VibWl0XCJdOi1tb3otZm9jdXNyaW5nIHtcbiAgb3V0bGluZTogMXB4IGRvdHRlZCBCdXR0b25UZXh0OyB9XG5cbi8qKlxuICogQ2hhbmdlIHRoZSBib3JkZXIsIG1hcmdpbiwgYW5kIHBhZGRpbmcgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cbmZpZWxkc2V0IHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2MwYzBjMDtcbiAgbWFyZ2luOiAwIDJweDtcbiAgcGFkZGluZzogMC4zNWVtIDAuNjI1ZW0gMC43NWVtOyB9XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgdGV4dCB3cmFwcGluZyBpbiBFZGdlIGFuZCBJRS5cbiAqIDIuIENvcnJlY3QgdGhlIGNvbG9yIGluaGVyaXRhbmNlIGZyb20gYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBJRS5cbiAqIDMuIFJlbW92ZSB0aGUgcGFkZGluZyBzbyBkZXZlbG9wZXJzIGFyZSBub3QgY2F1Z2h0IG91dCB3aGVuIHRoZXkgemVybyBvdXRcbiAqICAgIGBmaWVsZHNldGAgZWxlbWVudHMgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5sZWdlbmQge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIGNvbG9yOiBpbmhlcml0O1xuICAvKiAyICovXG4gIGRpc3BsYXk6IHRhYmxlO1xuICAvKiAxICovXG4gIG1heC13aWR0aDogMTAwJTtcbiAgLyogMSAqL1xuICBwYWRkaW5nOiAwO1xuICAvKiAzICovXG4gIHdoaXRlLXNwYWNlOiBub3JtYWw7XG4gIC8qIDEgKi8gfVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMi4gQWRkIHRoZSBjb3JyZWN0IHZlcnRpY2FsIGFsaWdubWVudCBpbiBDaHJvbWUsIEZpcmVmb3gsIGFuZCBPcGVyYS5cbiAqL1xucHJvZ3Jlc3Mge1xuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gIC8qIDEgKi9cbiAgdmVydGljYWwtYWxpZ246IGJhc2VsaW5lO1xuICAvKiAyICovIH1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGRlZmF1bHQgdmVydGljYWwgc2Nyb2xsYmFyIGluIElFLlxuICovXG50ZXh0YXJlYSB7XG4gIG92ZXJmbG93OiBhdXRvOyB9XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGJveCBzaXppbmcgaW4gSUUgMTAtLlxuICogMi4gUmVtb3ZlIHRoZSBwYWRkaW5nIGluIElFIDEwLS5cbiAqL1xuW3R5cGU9XCJjaGVja2JveFwiXSxcblt0eXBlPVwicmFkaW9cIl0ge1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAvKiAxICovXG4gIHBhZGRpbmc6IDA7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIENvcnJlY3QgdGhlIGN1cnNvciBzdHlsZSBvZiBpbmNyZW1lbnQgYW5kIGRlY3JlbWVudCBidXR0b25zIGluIENocm9tZS5cbiAqL1xuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtaW5uZXItc3Bpbi1idXR0b24sXG5bdHlwZT1cIm51bWJlclwiXTo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbiB7XG4gIGhlaWdodDogYXV0bzsgfVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIG9kZCBhcHBlYXJhbmNlIGluIENocm9tZSBhbmQgU2FmYXJpLlxuICogMi4gQ29ycmVjdCB0aGUgb3V0bGluZSBzdHlsZSBpbiBTYWZhcmkuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiB0ZXh0ZmllbGQ7XG4gIC8qIDEgKi9cbiAgb3V0bGluZS1vZmZzZXQ6IC0ycHg7XG4gIC8qIDIgKi8gfVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgaW5uZXIgcGFkZGluZyBhbmQgY2FuY2VsIGJ1dHRvbnMgaW4gQ2hyb21lIGFuZCBTYWZhcmkgb24gbWFjT1MuXG4gKi9cblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1jYW5jZWwtYnV0dG9uLFxuW3R5cGU9XCJzZWFyY2hcIl06Oi13ZWJraXQtc2VhcmNoLWRlY29yYXRpb24ge1xuICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7IH1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmFiaWxpdHkgdG8gc3R5bGUgY2xpY2thYmxlIHR5cGVzIGluIGlPUyBhbmQgU2FmYXJpLlxuICogMi4gQ2hhbmdlIGZvbnQgcHJvcGVydGllcyB0byBgaW5oZXJpdGAgaW4gU2FmYXJpLlxuICovXG46Oi13ZWJraXQtZmlsZS11cGxvYWQtYnV0dG9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247XG4gIC8qIDEgKi9cbiAgZm9udDogaW5oZXJpdDtcbiAgLyogMiAqLyB9XG5cbi8qIEludGVyYWN0aXZlXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLypcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gRWRnZSwgSUUsIGFuZCBGaXJlZm94LlxuICovXG5kZXRhaWxzLFxubWVudSB7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cbnN1bW1hcnkge1xuICBkaXNwbGF5OiBsaXN0LWl0ZW07IH1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuY2FudmFzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cbnRlbXBsYXRlIHtcbiAgZGlzcGxheTogbm9uZTsgfVxuXG4vKiBIaWRkZW5cbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDEwLS5cbiAqL1xuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lOyB9XG5cbkBmb250LWZhY2Uge1xuICBmb250LWZhbWlseTogJ3BhbmFtYSc7XG4gIHNyYzogdXJsKFwiL2ZvbnRzL3BhbmFtYS1ib2xkLXdlYmZvbnQud29mZjJcIikgZm9ybWF0KFwid29mZjJcIiksIHVybChcIi9mb250cy9wYW5hbWEtYm9sZC13ZWJmb250LndvZmZcIikgZm9ybWF0KFwid29mZlwiKTtcbiAgZm9udC13ZWlnaHQ6IG5vcm1hbDtcbiAgZm9udC1zdHlsZTogbm9ybWFsOyB9XG5cbmh0bWwge1xuICBmb250LXNpemU6IDEwcHg7IH1cblxuYm9keSB7XG4gIGZvbnQtc2l6ZTogMS41cmVtO1xuICBjb2xvcjogIzMwMzAzMDsgfVxuXG5oMSwgaDIsIGgzLCBoNCwgaDUsIGg2IHtcbiAgZm9udC1mYW1pbHk6ICdQYW5hbWEnO1xuICBmb250LXdlaWdodDogNjAwOyB9XG5cbmEge1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7XG4gIGNvbG9yOiAjMzAzMDMwOyB9XG5cbnAgYSB7XG4gIGJvcmRlci1ib3R0b206IDJweCBzb2xpZCAjRkZDNDBFOyB9XG5cbnAge1xuICBsaW5lLWhlaWdodDogMjtcbiAgZm9udC1zaXplOiAxLjZyZW07IH1cblxuLnRpdGxlLCAudGl0bGUtLXByb2R1Y3Qge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbiAgbWFyZ2luOiAwO1xuICBmb250LXNpemU6IDQwcHg7XG4gIHotaW5kZXg6IDI7XG4gIGxpbmUtaGVpZ2h0OiAxLjE7XG4gIGxpbmUtaGVpZ2h0OiAxLjE7IH1cbiAgLnRpdGxlLS1sb25nLCAudGl0bGUtLXByb2R1Y3QtLWxvbmcge1xuICAgIGZvbnQtc2l6ZTogMzBweDsgfVxuICAudGl0bGU6YmVmb3JlLCAudGl0bGUtLXByb2R1Y3Q6YmVmb3JlIHtcbiAgICBjb250ZW50OiAnJztcbiAgICB3aWR0aDogNTBweDtcbiAgICBsZWZ0OiAwO1xuICAgIHRvcDogMDtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IC0xO1xuICAgIHRyYW5zZm9ybTogc2tldygtNWRlZyk7IH1cbiAgLnRpdGxlIGEsIC50aXRsZS0tcHJvZHVjdCBhIHtcbiAgICBib3JkZXItYm90dG9tOiAwO1xuICAgIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCh0byByaWdodCwgcmdiYSgyNTUsIDE5NiwgMTQsIDAuOCkgMTAwJSwgcmdiYSgyNTUsIDE5NiwgMTQsIDAuOCkgNTAlKTsgfVxuXG4udGl0bGUtLXByb2R1Y3Qge1xuICBmb250LXNpemU6IDE0cHg7IH1cblxuLnRpdGxlLS1zaW5nbGUge1xuICBtYXgtd2lkdGg6IDYwMHB4O1xuICBtYXJnaW4tdG9wOiAtOXJlbTtcbiAgZm9udC1zaXplOiAxMHJlbTtcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XG5cbmlucHV0LFxudGV4dGFyZWEge1xuICB3aWR0aDogMTAwJTtcbiAgcGFkZGluZzogMTBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2U2ZTZlNjsgfVxuICBpbnB1dC5pbnB1dC0tZXJyb3IsXG4gIHRleHRhcmVhLmlucHV0LS1lcnJvciB7XG4gICAgYm9yZGVyLWNvbG9yOiByZWQ7IH1cblxubGFiZWwge1xuICBwYWRkaW5nOiAxMHB4IDA7XG4gIGRpc3BsYXk6IGJsb2NrOyB9XG5cbi5mb3JtIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIHBhZGRpbmc6IDJyZW07XG4gIGJveC1zaGFkb3c6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgIzQ4ZGVkNCAwJSwgI2EwMjZiZiAyMCUsICNlODJjNzUgNjAlLCAjRkZDNDBFIDg1JSwgIzQ4ZGVkNCA5NSUpOyB9XG4gIC5mb3JtICsgLmZvcm0ge1xuICAgIG1hcmdpbi10b3A6IDRyZW07IH1cbiAgLmZvcm0gaDIge1xuICAgIG1hcmdpbjogMDtcbiAgICBmb250LXNpemU6IDJyZW07XG4gICAgcGFkZGluZy1ib3R0b206IDJyZW07XG4gICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgICBib3JkZXItYm90dG9tOiAxcHggc29saWQgI2U2ZTZlNjsgfVxuXG4uZm9ybS0tZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IH1cblxuLmxvZ2luX19mb3JtIHtcbiAgd2lkdGg6IDUwMHB4O1xuICBtYXJnaW46IDUwcHggYXV0bzsgfVxuICAubG9naW5fX2Zvcm0gLmJ1dHRvbiB7XG4gICAgbWFyZ2luLXRvcDogMjBweDsgfVxuXG4uc2VhcmNoIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB3aWR0aDogMTAwJTtcbiAgZGlzcGxheTogZmxleDsgfVxuICAuc2VhcmNoX19yZXN1bHRzIHtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiA0N3B4O1xuICAgIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgICB6LWluZGV4OiA1O1xuICAgIGxlZnQ6IDA7IH1cbiAgICBAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA5MDBweCkge1xuICAgICAgLnNlYXJjaF9fcmVzdWx0cyB7XG4gICAgICAgIHRvcDogNDNweDsgfSB9XG4gIC5zZWFyY2hfX2lucHV0IHtcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgYmFja2dyb3VuZDogbm9uZTtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBvdXRsaW5lOiAwO1xuICAgIGJvcmRlcjogMDsgfVxuICAuc2VhcmNoX19yZXN1bHQge1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlY2VjZWM7IH1cbiAgICAuc2VhcmNoX19yZXN1bHQtLWFjdGl2ZSB7XG4gICAgICBiYWNrZ3JvdW5kOiAjZjFmMWYxOyB9XG4gICAgLnNlYXJjaF9fcmVzdWx0IGltZyB7XG4gICAgICB3aWR0aDogNiU7XG4gICAgICBoZWlnaHQ6IDYlOyB9XG4gICAgLnNlYXJjaF9fcmVzdWx0LS1tYXJnaW4ge1xuICAgICAgZGlzcGxheTogZmxleDsgfVxuICAgICAgLnNlYXJjaF9fcmVzdWx0LS1tYXJnaW4gc3Ryb25nLCAuc2VhcmNoX19yZXN1bHQtLW1hcmdpbiBzcGFuIHtcbiAgICAgICAgbWFyZ2luOiA0cHggMCA0cHggOHB4OyB9XG4gICAgICAuc2VhcmNoX19yZXN1bHQtLW1hcmdpbiBzcGFuIHtcbiAgICAgICAgbWFyZ2luLWxlZnQ6IDA7IH1cblxuLmhlcm9fX2NvbnRhaW5lciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdG9wOiAyNjBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tdG9wOiAtNDBweDsgfVxuICAuaGVyb19fY29udGFpbmVyIC5oZXJvX19sb2dvIHtcbiAgICBtYXJnaW46IDAgYXV0bzsgfVxuICAuaGVyb19fY29udGFpbmVyIC5zZWFyY2gge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICB3aWR0aDogNDAlO1xuICAgIG1hcmdpbjogMTBweCBhdXRvOyB9XG4gICAgLmhlcm9fX2NvbnRhaW5lciAuc2VhcmNoIC5zZWFyY2hfX2lucHV0IHtcbiAgICAgIGNvbG9yOiBibGFjazsgfVxuXG5AbWVkaWEgKG1pbi13aWR0aDogMTQwMXB4KSB7XG4gIC5oZXJvX19jb250YWluZXIge1xuICAgIG1hcmdpbi10b3A6IDA7IH0gfVxuXG5AbWVkaWEgKG1heC13aWR0aDogOTAwcHgpIHtcbiAgLmhlcm9fX2NvbnRhaW5lciAuc2VhcmNoIHtcbiAgICB3aWR0aDogODAlOyB9IH1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDQxNHB4KSB7XG4gIC5oZXJvX19pbWFnZSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBoZWlnaHQ6IDUxNnB4O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb24teDogLTE3OHB4OyB9XG4gIC5oZXJvX19jb250YWluZXIge1xuICAgIHRvcDogMTMwcHg7IH1cbiAgICAuaGVyb19fY29udGFpbmVyIC5zZWFyY2gge1xuICAgICAgd2lkdGg6IDkwJTsgfSB9XG5cbkBrZXlmcmFtZXMgc2xpZGVJbiB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwcHgpOyB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwcHgpOyB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwcHgpOyB9IH1cblxuLmZsYXNoIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJveC1zaGFkb3c6IDAgM3B4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjE1KTtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgcGFkZGluZzogMnJlbTtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAxO1xuICBib3JkZXItcmFkaXVzOiAzcHg7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFuaW1hdGlvbjogc2xpZGVJbiBmb3J3YXJkcyAuMXMgZWFzZS1pbi1vdXQgMjtcbiAgYW5pbWF0aW9uLXRpbWluZy1mdW5jdGlvbjogY3ViaWMtYmV6aWVyKDAuMDEsIDEuNjgsIDAuNTgsIDEpOyB9XG4gIC5mbGFzaCArIC5mbGFzaCB7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjU1czsgfVxuICAgIC5mbGFzaCArIC5mbGFzaCArIC5mbGFzaCB7XG4gICAgICBhbmltYXRpb24tZGVsYXk6IDAuNnM7IH1cbiAgLmZsYXNoX190ZXh0IHtcbiAgICBmbGV4OiAxOyB9XG4gIC5mbGFzaF9fcmVtb3ZlIHtcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xuICAgIGJvcmRlcjogMDsgfVxuICAgIC5mbGFzaF9fcmVtb3ZlOmhvdmVyIHtcbiAgICAgIGNvbG9yOiAjRkZDNDBFOyB9XG4gIC5mbGFzaDphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxNnB4KTtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDE2cHgpO1xuICAgIHRvcDogOHB4O1xuICAgIGxlZnQ6IDhweDtcbiAgICB6LWluZGV4OiAtMTtcbiAgICBib3gtc2hhZG93OiAwIDAgMnB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4OyB9XG4gIC5mbGFzaC0tc3VjY2VzcyB7XG4gICAgYmFja2dyb3VuZDogbGluZWFyLWdyYWRpZW50KDEzNWRlZywgI2QyZmY1MiAwJSwgIzkxZTg0MiAxMDAlKTsgfVxuICAuZmxhc2gtLWVycm9yIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMjBkZWcsIHJlZCAwJSwgI2M4MDAwMCAxMDAlKTsgfVxuICAuZmxhc2gtLWluZm8ge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgzNWRlZywgI2YxZTc2NyAwJSwgI2ZlYjY0NSAxMDAlKTsgfVxuICAuZmxhc2ggcCB7XG4gICAgbWFyZ2luOiAwOyB9XG5cbi5uYXYge1xuICBkaXNwbGF5OiBmbGV4O1xuICBsaXN0LXN0eWxlOiBub25lO1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDAgMTcwcHg7XG4gIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgLyogSW5kaWdvIE5hdiBCYWNrZ3JvdW5kOiAqL1xuICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICMxRjA4NUYgMCUsICM1MzI3OUYgMTAwJSk7IH1cbiAgLm5hdl9fc2VjdGlvbiB7XG4gICAgZGlzcGxheTogZmxleDsgfVxuICAgIC5uYXZfX3NlY3Rpb24tLXNlYXJjaCB7XG4gICAgICBmbGV4OiAwIDEgYXV0bzsgfVxuICAubmF2X19pdGVtIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG4gIC5uYXZfX2xpbmsge1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG4gICAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgICBwYWRkaW5nOiAxLjJyZW0gMnJlbSAxcmVtIDJyZW07XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuMnM7XG4gICAgYm9yZGVyLWJvdHRvbTogNXB4IHNvbGlkIHRyYW5zcGFyZW50OyB9XG4gICAgLm5hdl9fbGluayBzdmcge1xuICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgIGZpbGw6IHdoaXRlO1xuICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTsgfVxuICAgIC5uYXZfX2xpbms6aG92ZXIsIC5uYXZfX2xpbmstLWFjdGl2ZSB7XG4gICAgICBib3JkZXItYm90dG9tLWNvbG9yOiB3aGl0ZTsgfVxuICAgICAgLm5hdl9fbGluazpob3ZlciBzdmcsIC5uYXZfX2xpbmstLWFjdGl2ZSBzdmcge1xuICAgICAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7IH1cbiAgICAubmF2X19saW5rLS1sb2dvOmhvdmVyIHN2ZyB7XG4gICAgICB0cmFuc2Zvcm06IG5vbmU7IH1cbiAgICAubmF2X19saW5rLS1sb2dvIHN2ZyB7XG4gICAgICB3aWR0aDogMTUwcHg7XG4gICAgICBtYXJnaW46IDA7IH1cbiAgLm5hdi5mb290ZXIge1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGNvbG9yOiB3aGl0ZTsgfVxuICAgIC5uYXYuZm9vdGVyIGxpIHtcbiAgICAgIHBhZGRpbmc6IDJyZW07IH1cbiAgICAubmF2LmZvb3RlciBsaTpudGgtY2hpbGQoMikge1xuICAgICAgYm9yZGVyLWxlZnQ6IDFweCBzb2xpZCB3aGl0ZTsgfVxuICAgIC5uYXYuZm9vdGVyIHNwYW4ge1xuICAgICAgY29sb3I6IHdoaXRlOyB9XG5cbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDE3NDBweCkge1xuICAubmF2IHtcbiAgICBwYWRkaW5nOiAwIDUwcHg7IH0gfVxuXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiAxMjAwcHgpIHtcbiAgLm5hdiB7XG4gICAgcGFkZGluZzogMDsgfVxuICAgIC5uYXZfX2xpbmsge1xuICAgICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICAgICAgcGFkZGluZy1yaWdodDogMXJlbTsgfVxuICAgICAgLm5hdl9fbGluayBzdmcge1xuICAgICAgICB3aWR0aDogMzBweDsgfVxuICAgICAgLm5hdl9fbGluay0tbG9nbyBzdmcge1xuICAgICAgICB3aWR0aDogMTAwcHg7IH0gfVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOiA5MDFweCkge1xuICAubmF2X19zZWN0aW9uLS1zZWFyY2gge1xuICAgIHdpZHRoOiA0MCU7XG4gICAgcGFkZGluZzogMCAxNXB4OyB9XG4gICAgLm5hdl9fc2VjdGlvbi0tc2VhcmNoIC5zZWFyY2gge1xuICAgICAgYm9yZGVyOiAycHggd2hpdGUgc29saWQ7XG4gICAgICBoZWlnaHQ6IDUwcHg7XG4gICAgICBib3JkZXItcmFkaXVzOiA0cHg7XG4gICAgICB0b3A6IDQ1cHg7IH0gfVxuXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA5MDBweCkge1xuICAubmF2IHtcbiAgICBmbGV4LXdyYXA6IHdyYXA7IH1cbiAgICAubmF2X19zZWN0aW9uIHtcbiAgICAgIG9yZGVyOiAxOyB9XG4gICAgICAubmF2X19zZWN0aW9uLS1zZWFyY2gge1xuICAgICAgICBib3JkZXItdG9wOiAxcHggc29saWQgcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjEpO1xuICAgICAgICBvcmRlcjogMjtcbiAgICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA2NTBweCkge1xuICAubmF2X19zZWN0aW9uIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAgIC5uYXZfX3NlY3Rpb24tLXVzZXIge1xuICAgICAgb3JkZXI6IC0xO1xuICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTsgfVxuICAgICAgLm5hdl9fc2VjdGlvbi0tdXNlciAuYXZhdGFyIHtcbiAgICAgICAgbWluLXdpZHRoOiAyMHB4O1xuICAgICAgICBoZWlnaHQ6IDIwcHg7IH1cbiAgICAgIC5uYXZfX3NlY3Rpb24tLXVzZXIgc3ZnIHtcbiAgICAgICAgZGlzcGxheTogbm9uZTsgfVxuICAubmF2X19pdGVtIHtcbiAgICB3aWR0aDogMzMuMzMzMzMzJTsgfVxuICAubmF2X19saW5rIHtcbiAgICB3aWR0aDogMTAwJTsgfVxuICAgIC5uYXZfX2xpbmsgc3ZnIHtcbiAgICAgIG1heC13aWR0aDogMTAwJTsgfVxuICAgIC5uYXZfX2xpbmstLWxvZ28gc3ZnIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5oZWFydC1jb3VudDpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICfimaXvuI8nO1xuICAgIG1hcmdpbi1yaWdodDogMXJlbTsgfSB9XG5cbmEuYWRtaW5fX2xpbmsge1xuICBib3JkZXItcmlnaHQ6IG5vbmU7IH1cblxuLnRhYmxlIHtcbiAgd2lkdGg6IDEwMCU7IH1cbiAgLnRhYmxlIHRkIHtcbiAgICBwYWRkaW5nOiA1cHg7IH1cbiAgLnRhYmxlIHRyOm50aC1jaGlsZChldmVuKSB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7IH1cbiAgLnRhYmxlIHRyOm50aC1jaGlsZChvZGQpOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICBiYWNrZ3JvdW5kOiAjZjdmN2Y3OyB9XG4gIC50YWJsZSB0aGVhZCB0ciB7XG4gICAgYmFja2dyb3VuZDogIzMwMzAzMDtcbiAgICBjb2xvcjogd2hpdGU7IH1cblxuLnN0b3JlcyB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgbWFyZ2luOiAtMS4yNWVtIDAgMCAtMS4yNWVtOyB9XG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDEwMjRweCkge1xuICAgIC5zdG9yZXMge1xuICAgICAgZmxleC13cmFwOiB3cmFwOyB9IH1cblxuLnN0b3JlIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIG1hcmdpbjogMS4yNWVtIDAgMCAxLjI1ZW07XG4gIHdpZHRoOiBjYWxjKDMzLjMzMzMlIC0gMTQuMjVlbSk7XG4gIG1hcmdpbi1ib3R0b206IDEuNWVtO1xuICB3aWR0aDogMTguNSU7XG4gIGJveC1zaGFkb3c6IDAgMCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xKSwgMCA1cHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMDUpO1xuICBtaW4taGVpZ2h0OiAyNDZweDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgYm9yZGVyOiAycHggc29saWQgIzM3MTE3ODsgfVxuICAuc3RvcmUtLXdpZGUge1xuICAgIHdpZHRoOiAxMDAlOyB9XG4gIC5zdG9yZV9fZGV0YWlscyB7XG4gICAgcGFkZGluZzogMXJlbTsgfVxuICAgIC5zdG9yZV9fZGV0YWlscyBwIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwOyB9XG4gIC5zdG9yZTpob3ZlciBpbWcge1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTsgfVxuICBAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiAxMjQwcHgpIHtcbiAgICAuc3RvcmUge1xuICAgICAgd2lkdGg6IDE4JTsgfSB9XG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDExMDBweCkge1xuICAgIC5zdG9yZSB7XG4gICAgICB3aWR0aDogMjMlOyB9IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogOTYwcHgpIHtcbiAgICAuc3RvcmUge1xuICAgICAgd2lkdGg6IGNhbGMoNTAlIC0gMS4yNWVtKTsgfSB9XG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XG4gICAgLnN0b3JlIHtcbiAgICAgIHdpZHRoOiAxMDAlOyB9IH1cblxuLnN0b3JlX19hY3Rpb25zIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLCAwLCAwLCAwLjIpO1xuICBib3gtc2hhZG93OiAwIDFweCAwIHJnYmEoMCwgMCwgMCwgMC4yKSwgMCAxcHggMCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMik7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgY29sb3I6IHdoaXRlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDsgfVxuXG4uc3RvcmVfX2FjdGlvbiB7XG4gIGZvbnQtc2l6ZTogMTBweDsgfVxuICAuc3RvcmVfX2FjdGlvbiBzdmcge1xuICAgIHdpZHRoOiAyNXB4O1xuICAgIGZpbGw6IHdoaXRlOyB9XG4gIC5zdG9yZV9fYWN0aW9uLS1lZGl0IGEge1xuICAgIGJvcmRlci1ib3R0b206IDA7IH1cblxuLnN0b3JlX19oZXJvIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAwIDEwcHggMCAxMHB4O1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgbWluLWhlaWdodDogMTg1cHg7IH1cbiAgLnN0b3JlX19oZXJvIGltZyB7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgbGVmdDogMDtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICB0cmFuc2l0aW9uOiBhbGwgLjJzIGVhc2UtaW4tb3V0OyB9XG5cbmEuc3RvcmUtLWhvdmVyOmhvdmVyIC5zdG9yZV9faGVybzpiZWZvcmUge1xuICB0cmFuc2l0aW9uOiBvcGFjaXR5IGVhc2UgMC41cztcbiAgb3BhY2l0eTogMDsgfVxuXG4udGFncyB7XG4gIG1hcmdpbjogMDtcbiAgcGFkZGluZzogMDtcbiAgbGlzdC1zdHlsZTogbm9uZTtcbiAgZGlzcGxheTogZmxleDtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgZmxleC13cmFwOiB3cmFwOyB9XG5cbi50YWcge1xuICBkaXNwbGF5OiBibG9jaztcbiAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xuICBtYXJnaW4tYm90dG9tOiAwLjVyZW07IH1cbiAgLnRhZ19fY2hvaWNlIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7IH1cbiAgICAudGFnX19jaG9pY2UgaW5wdXQge1xuICAgICAgd2lkdGg6IGF1dG87XG4gICAgICByaWdodDogLTEuNXJlbTtcbiAgICAgIG1hcmdpbi1yaWdodDogLTFyZW07XG4gICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICB6LWluZGV4OiAyOyB9XG4gICAgICAudGFnX19jaG9pY2UgaW5wdXQgKyBsYWJlbCB7XG4gICAgICAgIGJhY2tncm91bmQ6ICNlNmU2ZTY7XG4gICAgICAgIHBhZGRpbmc6IDFyZW0gMXJlbSAxcmVtIDRyZW07IH1cbiAgICAgIC50YWdfX2Nob2ljZSBpbnB1dDpjaGVja2VkICsgbGFiZWwge1xuICAgICAgICBiYWNrZ3JvdW5kOiAjMzcxMTc4O1xuICAgICAgICBjb2xvcjogI2ZmZjsgfVxuICAudGFnX19saW5rIHtcbiAgICBiYWNrZ3JvdW5kOiAjNTMyNzlGO1xuICAgIGNvbG9yOiAjZmZmO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYm9yZGVyLXJhZGl1czogNHB4OyB9XG4gICAgLnRhZ19fbGluay0tYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6ICM5YTZiZWE7IH1cbiAgICAgIC50YWdfX2xpbmstLWFjdGl2ZSAudGFnX190ZXh0IHtcbiAgICAgICAgY29sb3I6IHdoaXRlOyB9XG4gIC50YWdfX3RleHQge1xuICAgIHBhZGRpbmc6IDFyZW0gMXJlbTtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTtcbiAgICBtYXJnaW46IGF1dG87IH1cbiAgLnRhZ19fY291bnQge1xuICAgIHBhZGRpbmc6IDFyZW0gMXJlbTtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICBtYXJnaW4tcmlnaHQ6IC0xcHg7XG4gICAgLyogdWdoICovXG4gICAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDsgfVxuXG4udGFnX19jaG9pY2UgbGFiZWwge1xuICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsgfVxuXG4udGFncy0tZmxleCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gIC50YWdzLS1mbGV4IGxpIHtcbiAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XG4gICAgd2lkdGg6IDEwMHB4OyB9XG5cbi5jYXRlZ29yeV9saXN0LCAudGFnc19saXN0IHtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICB3aWR0aDogNDgxcHg7IH1cbiAgLmNhdGVnb3J5X2xpc3QgLnRhZywgLnRhZ3NfbGlzdCAudGFnIHtcbiAgICBwYWRkaW5nOiAxcmVtOyB9XG4gICAgLmNhdGVnb3J5X2xpc3QgLnRhZzpudGgtY2hpbGQob2RkKSwgLnRhZ3NfbGlzdCAudGFnOm50aC1jaGlsZChvZGQpIHtcbiAgICAgIGJhY2tncm91bmQ6IHdoaXRlOyB9XG4gIC5jYXRlZ29yeV9saXN0IC50YWdfX3RleHQsIC50YWdzX2xpc3QgLnRhZ19fdGV4dCB7XG4gICAgZGlzcGxheTogaW5saW5lOyB9XG4gIC5jYXRlZ29yeV9saXN0IC5lZGl0X193cmFwcGVyLCAudGFnc19saXN0IC5lZGl0X193cmFwcGVyIHtcbiAgICBmbG9hdDogcmlnaHQ7IH1cbiAgLmNhdGVnb3J5X2xpc3QgLnRhZ19fZGVsZXRlLCAudGFnc19saXN0IC50YWdfX2RlbGV0ZSB7XG4gICAgbWFyZ2luLWxlZnQ6IDEwcHg7IH1cbiAgICAuY2F0ZWdvcnlfbGlzdCAudGFnX19kZWxldGUgLmJ0bi1lZGl0LCAudGFnc19saXN0IC50YWdfX2RlbGV0ZSAuYnRuLWVkaXQge1xuICAgICAgYmFja2dyb3VuZDogcmVkOyB9XG5cbi50YWdzX2xpc3Qge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIHdpZHRoOiAxMDAlO1xuICBoZWlnaHQ6IDcxM3B4OyB9XG4gIC50YWdzX2xpc3QgLnRhZyB7XG4gICAgd2lkdGg6IDMyJTsgfVxuXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA0NDJweCkge1xuICAuY2F0ZWdvcnlfbGlzdCwgLnRhZ3NfbGlzdCB7XG4gICAgd2lkdGg6IDEwMCU7IH1cbiAgLnRhZ3NfbGlzdCB7XG4gICAgaGVpZ2h0OiBhdXRvOyB9XG4gIC50YWdzX2xpc3QgLnRhZyB7XG4gICAgd2lkdGg6IGF1dG87IH0gfVxuXG4uc2luZ2xlX19oZXJvIHtcbiAgaGVpZ2h0OiA1MDBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBkaXNwbGF5OiBmbGV4O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgY2xpcC1wYXRoOiBwb2x5Z29uKDAgMCwgMTAwJSAwLCAxMDAlIGNhbGMoMTAwJSAtIDJ2dyksIDAlIDEwMCUpOyB9XG4gIC5zaW5nbGVfX2hlcm86YmVmb3JlIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBjb250ZW50OiAnJztcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHRvcDogMDtcbiAgICByaWdodDogMDtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoNDVkZWcsICMwNWIzZDYgMCUsIHJnYmEoNSwgMTc5LCAyMTQsIDApIDcwJSksIGxpbmVhci1ncmFkaWVudCgxMzVkZWcsICMwOTU4ZWMgMTAlLCByZ2JhKDksIDg4LCAyMzYsIDApIDgwJSksIGxpbmVhci1ncmFkaWVudCgyMjVkZWcsICNkMjA5ZWMgMTAlLCByZ2JhKDIxMCwgOSwgMjM2LCAwKSA4MCUpLCBsaW5lYXItZ3JhZGllbnQoMzE1ZGVnLCAjMDVlMTI5IDEwMCUsIHJnYmEoNSwgMjI1LCA0MSwgMCkgNzAlKTtcbiAgICBvcGFjaXR5OiAwLjY7XG4gICAgei1pbmRleDogMTtcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMCAwLCAxMDAlIDAsIDEwMCUgY2FsYygxMDAlIC0gMnZ3KSwgMCUgMTAwJSk7IH1cblxuLnNpbmdsZV9faW1hZ2Uge1xuICB3aWR0aDogMTAwJTtcbiAgaGVpZ2h0OiAxMDAlO1xuICB0b3A6IDA7XG4gIGxlZnQ6IDA7XG4gIG9iamVjdC1maXQ6IGNvdmVyO1xuICBwb3NpdGlvbjogYWJzb2x1dGU7IH1cblxuLnNpbmdsZV9fZGV0YWlscyB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDNyZW07XG4gIG1hcmdpbi10b3A6IC0xMHJlbTtcbiAgYm94LXNoYWRvdzogMCAwIDEwcHggMnB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7IH1cblxuLnNpbmdsZV9fbWFwIHtcbiAgd2lkdGg6IGNhbGMoMTAwJSArIDZyZW0pO1xuICBtYXgtd2lkdGg6IG5vbmU7XG4gIG1hcmdpbi10b3A6IC0zcmVtO1xuICBtYXJnaW4tbGVmdDogLTNyZW07IH1cblxuLnNpbmdsZV9fbG9jYXRpb24ge1xuICBtYXJnaW46IDA7XG4gIG1hcmdpbi10b3A6IC0zcmVtO1xuICBtYXJnaW4tcmlnaHQ6IC01cmVtO1xuICBiYWNrZ3JvdW5kOiAjMzAzMDMwO1xuICBjb2xvcjogd2hpdGU7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgZmxvYXQ6IHJpZ2h0O1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHBhZGRpbmc6IDFyZW07IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogODUwcHgpIHtcbiAgICAuc2luZ2xlX19sb2NhdGlvbiB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7IH0gfVxuXG4uaGVhcnRfX2J1dHRvbiB7XG4gIGJhY2tncm91bmQ6IG5vbmU7XG4gIGJvcmRlcjogMDtcbiAgb3V0bGluZTogMDtcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XG4gIC5oZWFydF9fYnV0dG9uOmFmdGVyIHtcbiAgICBjb250ZW50OiAn4pml77iPJztcbiAgICBmb250LXNpemU6IDIwcHg7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgdG9wOiAwOyB9XG4gIC5oZWFydF9fYnV0dG9uIHN2ZyB7XG4gICAgd2lkdGg6IDI1cHg7XG4gICAgZmlsbDogd2hpdGU7IH1cbiAgLmhlYXJ0X19idXR0b24tLWhlYXJ0ZWQgc3ZnIHtcbiAgICBmaWxsOiByZWQ7IH1cbiAgLmhlYXJ0X19idXR0b24tLWZsb2F0OmFmdGVyIHtcbiAgICBhbmltYXRpb246IGZseSAyLjVzIDEgZWFzZS1vdXQ7IH1cblxuQGtleWZyYW1lcyBmbHkge1xuICAwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKDApO1xuICAgIGxlZnQ6IDA7XG4gICAgb3BhY2l0eTogMTsgfVxuICAyMCUge1xuICAgIGxlZnQ6IDIwcHg7IH1cbiAgNDAlIHtcbiAgICBsZWZ0OiAtMjBweDsgfVxuICA2MCUge1xuICAgIGxlZnQ6IDIwcHg7IH1cbiAgODAlIHtcbiAgICBsZWZ0OiAtMjBweDsgfVxuICAxMDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTQwMHB4KTtcbiAgICBvcGFjaXR5OiAwO1xuICAgIGxlZnQ6IDIwcHg7IH0gfVxuXG4ucmV2aWV3IHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlNmU2ZTY7XG4gIGJvcmRlci1ib3R0b206IDA7XG4gIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTZlNmU2O1xuICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMSk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1sZWZ0OiA1cHg7IH1cbiAgLnJldmlldzpiZWZvcmUge1xuICAgIHdpZHRoOiA1cHg7XG4gICAgbGVmdDogMDtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMCwgIzQ4ZGVkNCAwJSwgI2EwMjZiZiAyMCUsICNlODJjNzUgNjAlLCAjRkZDNDBFIDg1JSwgIzQ4ZGVkNCA5NSUpO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDsgfVxuICAucmV2aWV3X19oZWFkZXIge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZTZlNmU2O1xuICAgIGRpc3BsYXk6IGZsZXg7IH1cbiAgICAucmV2aWV3X19oZWFkZXIgPiAqIHtcbiAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICNlNmU2ZTY7XG4gICAgICBwYWRkaW5nOiAwLjJyZW07XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgIGZsZXg6IDE7XG4gICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsgfVxuICAgICAgLnJldmlld19faGVhZGVyID4gKjpsYXN0LWNoaWxkIHtcbiAgICAgICAgYm9yZGVyLXJpZ2h0OiAwOyB9XG4gIC5yZXZpZXdfX2F1dGhvciB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIHBhZGRpbmctbGVmdDogMnJlbTtcbiAgICBkaXNwbGF5OiBmbGV4OyB9XG4gICAgLnJldmlld19fYXV0aG9yIC5hdmF0YXIge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAycmVtOyB9XG4gIC5yZXZpZXdfX3RpbWUge1xuICAgIGZvbnQtc2l6ZTogMS4ycmVtO1xuICAgIGNvbG9yOiAjOTk5OTk5OyB9XG4gIC5yZXZpZXdfX3N0YXJzIHtcbiAgICBjb2xvcjogI0ZGQzQwRTsgfVxuICAucmV2aWV3X19ib2R5IHtcbiAgICBwYWRkaW5nOiAycmVtOyB9XG4gIC5yZXZpZXcgcCB7XG4gICAgd2hpdGUtc3BhY2U6IHByZS13cmFwOyB9XG5cbi8qXG4gIFJldmlld2VyIEZvcm1cbiAqL1xuLnJldmlld2VyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3gtc2hhZG93OiAwIDBweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4yKTtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTsgfVxuICAucmV2aWV3ZXJfX3N0YXJzIHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyOyB9XG4gICAgLnJldmlld2VyX19zdGFycyBpbnB1dCB7XG4gICAgICBkaXNwbGF5OiBub25lOyB9XG4gICAgICAucmV2aWV3ZXJfX3N0YXJzIGlucHV0OmNoZWNrZWQgfiBsYWJlbCB7XG4gICAgICAgIGNvbG9yOiAjRkZDNDBFOyB9XG4gICAgICAucmV2aWV3ZXJfX3N0YXJzIGlucHV0ICsgbGFiZWwge1xuICAgICAgICBmb250LXNpemU6IDA7XG4gICAgICAgIC8qIFRoZXNlIGFyZSBpbiB0aGUgb3Bwb3NpdGUgRE9NIG9yZGVyXG4gICAgICAgICAgIHJlLW9yZGVyIHRoZW0gdG8gYmUgdmlzdWFsbHkgaW4gbm9ybWFsIG9yZGVyXG4gICAgICAgICAgIFRoaXMgaXMgZmluZSBmb3IgYWNjZXNzaWJpbGl0eSBiZWNhdXNlIG91ciBsYWJlbHMgaGF2ZSBmb3IoKVxuICAgICAgICAgKi8gfVxuICAgICAgICAucmV2aWV3ZXJfX3N0YXJzIGlucHV0ICsgbGFiZWw6YmVmb3JlIHtcbiAgICAgICAgICBjb250ZW50OiAn4piFJztcbiAgICAgICAgICBmb250LXNpemU6IDJyZW07IH1cbiAgICAgICAgLnJldmlld2VyX19zdGFycyBpbnB1dCArIGxhYmVsW2Zvcj1cInN0YXI1XCJdIHtcbiAgICAgICAgICBvcmRlcjogNTsgfVxuICAgICAgICAucmV2aWV3ZXJfX3N0YXJzIGlucHV0ICsgbGFiZWxbZm9yPVwic3RhcjRcIl0ge1xuICAgICAgICAgIG9yZGVyOiA0OyB9XG4gICAgICAgIC5yZXZpZXdlcl9fc3RhcnMgaW5wdXQgKyBsYWJlbFtmb3I9XCJzdGFyM1wiXSB7XG4gICAgICAgICAgb3JkZXI6IDM7IH1cbiAgICAgICAgLnJldmlld2VyX19zdGFycyBpbnB1dCArIGxhYmVsW2Zvcj1cInN0YXIyXCJdIHtcbiAgICAgICAgICBvcmRlcjogMjsgfVxuICAgICAgICAucmV2aWV3ZXJfX3N0YXJzIGlucHV0ICsgbGFiZWxbZm9yPVwic3RhcjFcIl0ge1xuICAgICAgICAgIG9yZGVyOiAxOyB9XG4gICAgICAgIC5yZXZpZXdlcl9fc3RhcnMgaW5wdXQgKyBsYWJlbDpob3ZlciwgLnJldmlld2VyX19zdGFycyBpbnB1dCArIGxhYmVsOmhvdmVyIH4gbGFiZWwge1xuICAgICAgICAgIGNvbG9yOiAjZmZkZDc0OyB9XG4gIC5yZXZpZXdlciB0ZXh0YXJlYSB7XG4gICAgYm9yZGVyOiAwO1xuICAgIG91dGxpbmU6IDA7XG4gICAgZm9udC1zaXplOiAycmVtO1xuICAgIHBhZGRpbmc6IDJyZW07XG4gICAgaGVpZ2h0OiAyMDBweDsgfVxuICAucmV2aWV3ZXJfX21ldGEge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBib3JkZXItdG9wOiAxcHggc29saWQgI2U2ZTZlNjsgfVxuICAgIC5yZXZpZXdlcl9fbWV0YSA+ICoge1xuICAgICAgZmxleDogMTsgfVxuXG4ucGFnaW5hdGlvbiB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBtYXJnaW4tdG9wOiAycmVtO1xuICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNXB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjA1KTsgfVxuICAucGFnaW5hdGlvbl9fbmV4dCB7XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgcGFkZGluZzogMXJlbSAzcmVtIDFyZW0gMXJlbTsgfVxuICAgIC5wYWdpbmF0aW9uX19uZXh0IGE6YWZ0ZXIge1xuICAgICAgbWFyZ2luLWxlZnQ6IDFyZW07XG4gICAgICBjb250ZW50OiAn4oaSJzsgfVxuICAucGFnaW5hdGlvbl9fcHJldiB7XG4gICAgZmxleDogMCAwIGF1dG87XG4gICAgcGFkZGluZzogMXJlbSAxcmVtIDFyZW0gM3JlbTsgfVxuICAgIC5wYWdpbmF0aW9uX19wcmV2IGE6YmVmb3JlIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMXJlbTtcbiAgICAgIGNvbnRlbnQ6ICfihpAnOyB9XG4gIC5wYWdpbmF0aW9uX190ZXh0IHtcbiAgICBmbGV4OiAzIDAgYXV0bztcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIHRleHQtYWxpZ246IGNlbnRlcjsgfVxuXG4uYmFja19fYnV0dG9uIHtcbiAgbWFyZ2luOiAzMHB4IDAgLTMwcHggNXB4O1xuICB0ZXh0LWRlY29yYXRpb246IG5vbmU7IH1cblxuLm1hcCB7XG4gIHBhZGRpbmc6IDIwcHg7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsIDAsIDAsIDAuMSksIDAgNXB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjA1KTsgfVxuXG4jbWFwIHtcbiAgaGVpZ2h0OiA1MDBweDsgfVxuXG4ucG9wdXAge1xuICB3aWR0aDogMzAwcHg7IH1cbiAgLnBvcHVwIGltZyB7XG4gICAgd2lkdGg6IDEwMCU7IH1cblxuLmhpZGUge1xuICB0ZXh0LWluZGVudDogLTk5OTk5OXB4O1xuICBmb250LXNpemU6IDA7IH1cblxuLmJ1dHRvbiB7XG4gIGJvcmRlcjogMDtcbiAgYmFja2dyb3VuZDogIzM3MTE3ODtcbiAgY29sb3I6ICNmZmY7XG4gIGZvbnQtZmFtaWx5OiAnUGFuYW1hJztcbiAgZm9udC13ZWlnaHQ6IDYwMDsgfVxuXG4uYnRuLXNhdmUge1xuICB3aWR0aDogNTAlO1xuICBtYXJnaW46IDJyZW0gYXV0bzsgfVxuXG4uYnRuLWVkaXQge1xuICBwYWRkaW5nOiAwLjVlbTtcbiAgbGV0dGVyLXNwYWNpbmc6IDJweDsgfVxuICAuYnRuLWVkaXQ6aG92ZXIge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGNvbG9yOiBwdXJwbGU7IH1cblxuLmF2YXRhciB7XG4gIG1pbi13aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBib3JkZXItcmFkaXVzOiA1MCU7XG4gIGFsaWduLXNlbGY6IGNlbnRlcjsgfVxuXG4uY2FyZCB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBwYWRkaW5nOiA1cmVtO1xuICBib3gtc2hhZG93OiAwIDFweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7IH1cblxuLmNhdGVnb3J5X19jYXJkIHtcbiAgbWluLXdpZHRoOiA1MDBweDsgfVxuXG5wcmUuZXJyb3Ige1xuICBwYWRkaW5nOiA1cmVtO1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgbGluZS1oZWlnaHQ6IDM7XG4gIHdoaXRlLXNwYWNlOiBwcmUtbGluZTsgfVxuXG4uaW5uZXJfX3Byb2R1Y3Qge1xuICBtYXgtd2lkdGg6IDEyMDBweDsgfVxuXG4ucHJvZHVjdF9fY2FyZCB7XG4gIG1hcmdpbi10b3A6IDUwcHg7IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogMTM5OXB4KSB7XG4gICAgLnByb2R1Y3RfX2NhcmQge1xuICAgICAgbWFyZ2luLXRvcDogMDsgfSB9XG5cbi5wcm9kdWN0X19pbm5lciB7XG4gIGRpc3BsYXk6IGZsZXg7IH1cbiAgLnByb2R1Y3RfX2lubmVyIC5wcm9kdWN0X19pbWcge1xuICAgIG1heC13aWR0aDogNTUwcHg7IH1cbiAgLnByb2R1Y3RfX2lubmVyIC5wcm9kdWN0X19pbmZvIHtcbiAgICBtYXJnaW46IC0xLjI1ZW0gMCAwIDJlbTsgfVxuICAgIC5wcm9kdWN0X19pbm5lciAucHJvZHVjdF9faW5mbyBwIHtcbiAgICAgIGxpbmUtaGVpZ2h0OiAxLjI1OyB9XG5cbi5wcm9kdWN0X19jb250YWN0IHtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzUzMjc5RjtcbiAgaGVpZ2h0OiAxMDBweDtcbiAgZGlzcGxheTogZmxleDsgfVxuICAucHJvZHVjdF9fY29udGFjdCAuYnRuLW1vcmUge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkICNmZmY7XG4gICAgYmFja2dyb3VuZDogIzUzMjc5RjtcbiAgICBjb2xvcjogI2ZmZjtcbiAgICBtYXJnaW46IDAgYXV0bztcbiAgICBtYXJnaW4tdG9wOiAxLjc1ZW07XG4gICAgaGVpZ2h0OiA0MHB4O1xuICAgIHdpZHRoOiBhdXRvOyB9XG4gICAgLnByb2R1Y3RfX2NvbnRhY3QgLmJ0bi1tb3JlOmhvdmVyIHtcbiAgICAgIGJhY2tncm91bmQ6ICNmZmY7XG4gICAgICBjb2xvcjogIzUzMjc5RjsgfVxuXG4udGl0bGUtLWNvbG9yIHtcbiAgY29sb3I6ICMzMDMwMzA7IH1cbiAgLnRpdGxlLS1jb2xvciBzcGFuLCAudGl0bGUtLWNvbG9yIHAge1xuICAgIGNvbG9yOiAjNTMyNzlGOyB9XG5cbi5iYWNrX19idXR0b24ge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cbiAgLmJhY2tfX2J1dHRvbiBzcGFuOmhvdmVyIHtcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cblxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogMTAyNHB4KSB7XG4gIC5wcm9kdWN0X19pbm5lciB7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgfVxuICAgIC5wcm9kdWN0X19pbm5lciAucHJvZHVjdF9faW1nIHtcbiAgICAgIG1heC13aWR0aDogMTAwJTsgfVxuICAgIC5wcm9kdWN0X19pbm5lciAucHJvZHVjdF9faW5mbyB7XG4gICAgICBtYXJnaW46IDFlbSAwOyB9IH1cblxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogNzY1cHgpIHtcbiAgLnByb2R1Y3RfX2NhcmQge1xuICAgIHBhZGRpbmc6IDJyZW07IH0gfVxuXG4uYWRtaW5fX3NpZGViYXIge1xuICB3aWR0aDogMjI1cHg7XG4gIGhlaWdodDogNzV2aDtcbiAgZmxvYXQ6IGxlZnQ7IH1cbiAgLmFkbWluX19zaWRlYmFyIGEubmF2X19saW5rIHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbiAgICBjb2xvcjogIzM3MTE3ODtcbiAgICBhbGlnbi1pdGVtczogbGVmdDsgfVxuICAgIC5hZG1pbl9fc2lkZWJhciBhLm5hdl9fbGluazpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAjNTMyNzlGO1xuICAgICAgY29sb3I6ICNmZmY7IH1cbiAgLmFkbWluX19zaWRlYmFyIC5uYXZfX2xpbmstLWFjdGl2ZSB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzM3MTE3ODtcbiAgICBjb2xvcjogd2hpdGUgIWltcG9ydGFudDsgfVxuICAuYWRtaW5fX3NpZGViYXIgLm5hdl9fU2VjdGlvbiB7XG4gICAgbWFyZ2luLXRvcDogNDNweDtcbiAgICBsaXN0LXN0eWxlOiBub25lOyB9XG4gICAgLmFkbWluX19zaWRlYmFyIC5uYXZfX1NlY3Rpb24gYSB7XG4gICAgICBib3JkZXI6IG5vbmU7IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogMTQwMHB4KSB7XG4gICAgLmFkbWluX19zaWRlYmFyIHtcbiAgICAgIG1hcmdpbi10b3A6IC0yLjhlbTsgfSB9XG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDkwMHB4KSB7XG4gICAgLmFkbWluX19zaWRlYmFyIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgaGVpZ2h0OiBhdXRvOyB9XG4gICAgICAuYWRtaW5fX3NpZGViYXIgLm5hdl9fU2VjdGlvbiB7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtZXZlbmx5O1xuICAgICAgICBtYXJnaW4tYm90dG9tOiAxN3B4O1xuICAgICAgICBtYXJnaW4tdG9wOiAwOyB9IH1cblxuLmFkbWluX19tYWluIHtcbiAgbWFyZ2luOiAwIDUwcHg7XG4gIHdpZHRoOiAxMDAlOyB9XG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDkwMHB4KSB7XG4gICAgLmFkbWluX19tYWluIHtcbiAgICAgIHdpZHRoOiBhdXRvOyB9IH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogNDQycHgpIHtcbiAgICAuYWRtaW5fX21haW4ge1xuICAgICAgbWFyZ2luOiAwIDIwcHg7IH1cbiAgICAgIC5hZG1pbl9fbWFpbiAuY2F0ZWdvcnlfX2NhcmQge1xuICAgICAgICBtaW4td2lkdGg6IDMwMHB4O1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgcGFkZGluZzogMnJlbTsgfVxuICAgICAgICAuYWRtaW5fX21haW4gLmNhdGVnb3J5X19jYXJkIC5idG4tc2F2ZSB7XG4gICAgICAgICAgd2lkdGg6IDEwMCU7IH0gfVxuICAuYWRtaW5fX21haW4gc2VsZWN0IHtcbiAgICB0ZXh0LXRyYW5zZm9ybTogY2FwaXRhbGl6ZTsgfVxuXG5hLmFkbWluX19saW5rIHtcbiAgYm9yZGVyLXJpZ2h0OiBub25lICFpbXBvcnRhbnQ7IH1cblxuLmFkbWluX19lZGl0aW5nIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC0yMDVweDtcbiAgbGVmdDogMTBweDsgfVxuIiwiaHRtbCwgYm9keSB7XG4gIG1hcmdpbjowO1xuICBwYWRkaW5nOjA7XG4gIGhlaWdodDoxMDAlO1xufVxuaHRtbCB7XG4gIGZvbnQtc2l6ZTogMTBweDtcbn1cblxuYm9keSB7XG4gIC8vIGJhY2tncm91bmQ6ICRsaWdodFB1cnBsZTtcbiAgYmFja2dyb3VuZDojZWZlZmVmO1xufVxuXG4jY29udGFpbmVyIHtcbiAgbWluLWhlaWdodDoxMDAlO1xuICBwb3NpdGlvbjpyZWxhdGl2ZTtcbiAgJiAuY29udGVudCB7XG4gICAgcGFkZGluZy1ib3R0b206MjYwcHg7XG4gICAgJiAuYWRtaW5fX2FyZWEge1xuICAgICAgbWFyZ2luLWJvdHRvbTogLTMwcHg7XG4gICAgfVxuICB9XG59XG5cbi5oZXJvX19pbWFnZSB7XG4gIGJhY2tncm91bmQ6IHVybCgnL2ltYWdlcy9namphbWVzLWhlcm8yLnBuZycpIG5vLXJlcGVhdCBjZW50ZXI7IFxuICAtd2Via2l0LWJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIC1tb3otYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgLW8tYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgaGVpZ2h0OiA4MDBweDtcbn1cblxuLmFkbWluX19hcmVhIHtcbiAgZGlzcGxheTogZmxleDtcblxuICBAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA5MDBweCkge1xuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIH1cbn1cblxuLmlubmVyIHtcbiAgbWF4LXdpZHRoOjEzNTBweDtcbiAgbWFyZ2luOiAwIGF1dG87XG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDE0MDBweCkge1xuICAgIHBhZGRpbmc6IDJyZW07XG4gIH1cbn1cbiIsImZvb3RlciB7XG4gIGhlaWdodDogMjMwcHg7XG4gIGJhY2tncm91bmQtaW1hZ2U6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgIzFGMDg1RiAwJSwgIzUzMjc5RiAxMDAlKTtcbiAgLy8gcG9zaXRpb246IGFic29sdXRlO1xuICAvLyBib3R0b206IDA7XG4gIC8vIGxlZnQ6IDA7XG4gIC8vIHdpZHRoOiAxMDAlO1xuICBwb3NpdGlvbjphYnNvbHV0ZTtcbiAgYm90dG9tOjA7XG4gIHdpZHRoOjEwMCU7XG4gIC8vIGhlaWdodDogNjBweDtcbn0iLCJodG1sIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcbn1cblxuKiwgKjpiZWZvcmUsICo6YWZ0ZXIge1xuICBib3gtc2l6aW5nOiBpbmhlcml0O1xufVxuXG5pbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG5cbi8qISBub3JtYWxpemUuY3NzIHY1LjAuMCB8IE1JVCBMaWNlbnNlIHwgZ2l0aHViLmNvbS9uZWNvbGFzL25vcm1hbGl6ZS5jc3MgKi9cblxuLyoqXG4gKiAxLiBDaGFuZ2UgdGhlIGRlZmF1bHQgZm9udCBmYW1pbHkgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBDb3JyZWN0IHRoZSBsaW5lIGhlaWdodCBpbiBhbGwgYnJvd3NlcnMuXG4gKiAzLiBQcmV2ZW50IGFkanVzdG1lbnRzIG9mIGZvbnQgc2l6ZSBhZnRlciBvcmllbnRhdGlvbiBjaGFuZ2VzIGluXG4gKiAgICBJRSBvbiBXaW5kb3dzIFBob25lIGFuZCBpbiBpT1MuXG4gKi9cblxuLyogRG9jdW1lbnRcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbmh0bWwge1xuICBmb250LWZhbWlseTogc2Fucy1zZXJpZjsgLyogMSAqL1xuICBsaW5lLWhlaWdodDogMS4xNTsgLyogMiAqL1xuICAtbXMtdGV4dC1zaXplLWFkanVzdDogMTAwJTsgLyogMyAqL1xuICAtd2Via2l0LXRleHQtc2l6ZS1hZGp1c3Q6IDEwMCU7IC8qIDMgKi9cbn1cblxuLyogU2VjdGlvbnNcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qKlxuICogUmVtb3ZlIHRoZSBtYXJnaW4gaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYm9keSB7XG4gIG1hcmdpbjogMDtcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hcnRpY2xlLFxuYXNpZGUsXG5mb290ZXIsXG5oZWFkZXIsXG5uYXYsXG5zZWN0aW9uIHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgZm9udCBzaXplIGFuZCBtYXJnaW4gb24gYGgxYCBlbGVtZW50cyB3aXRoaW4gYHNlY3Rpb25gIGFuZFxuICogYGFydGljbGVgIGNvbnRleHRzIGluIENocm9tZSwgRmlyZWZveCwgYW5kIFNhZmFyaS5cbiAqL1xuXG5oMSB7XG4gIGZvbnQtc2l6ZTogMmVtO1xuICBtYXJnaW46IDAuNjdlbSAwO1xufVxuXG4vKiBHcm91cGluZyBjb250ZW50XG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUuXG4gKi9cblxuZmlnY2FwdGlvbixcbmZpZ3VyZSxcbm1haW4geyAvKiAxICovXG4gIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBtYXJnaW4gaW4gSUUgOC5cbiAqL1xuXG5maWd1cmUge1xuICBtYXJnaW46IDFlbSA0MHB4O1xufVxuXG4vKipcbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBib3ggc2l6aW5nIGluIEZpcmVmb3guXG4gKiAyLiBTaG93IHRoZSBvdmVyZmxvdyBpbiBFZGdlIGFuZCBJRS5cbiAqL1xuXG5ociB7XG4gIGJveC1zaXppbmc6IGNvbnRlbnQtYm94OyAvKiAxICovXG4gIGhlaWdodDogMDsgLyogMSAqL1xuICBvdmVyZmxvdzogdmlzaWJsZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluaGVyaXRhbmNlIGFuZCBzY2FsaW5nIG9mIGZvbnQgc2l6ZSBpbiBhbGwgYnJvd3NlcnMuXG4gKiAyLiBDb3JyZWN0IHRoZSBvZGQgYGVtYCBmb250IHNpemluZyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxucHJlIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qIFRleHQtbGV2ZWwgc2VtYW50aWNzXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIFJlbW92ZSB0aGUgZ3JheSBiYWNrZ3JvdW5kIG9uIGFjdGl2ZSBsaW5rcyBpbiBJRSAxMC5cbiAqIDIuIFJlbW92ZSBnYXBzIGluIGxpbmtzIHVuZGVybGluZSBpbiBpT1MgOCsgYW5kIFNhZmFyaSA4Ky5cbiAqL1xuXG5hIHtcbiAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7IC8qIDEgKi9cbiAgLXdlYmtpdC10ZXh0LWRlY29yYXRpb24tc2tpcDogb2JqZWN0czsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgb3V0bGluZSBvbiBmb2N1c2VkIGxpbmtzIHdoZW4gdGhleSBhcmUgYWxzbyBhY3RpdmUgb3IgaG92ZXJlZFxuICogaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKi9cblxuYTphY3RpdmUsXG5hOmhvdmVyIHtcbiAgb3V0bGluZS13aWR0aDogMDtcbn1cblxuLyoqXG4gKiAxLiBSZW1vdmUgdGhlIGJvdHRvbSBib3JkZXIgaW4gRmlyZWZveCAzOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdGV4dCBkZWNvcmF0aW9uIGluIENocm9tZSwgRWRnZSwgSUUsIE9wZXJhLCBhbmQgU2FmYXJpLlxuICovXG5cbmFiYnJbdGl0bGVdIHtcbiAgYm9yZGVyLWJvdHRvbTogbm9uZTsgLyogMSAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgLyogMiAqL1xuICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZSBkb3R0ZWQ7IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBQcmV2ZW50IHRoZSBkdXBsaWNhdGUgYXBwbGljYXRpb24gb2YgYGJvbGRlcmAgYnkgdGhlIG5leHQgcnVsZSBpbiBTYWZhcmkgNi5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGluaGVyaXQ7XG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgd2VpZ2h0IGluIENocm9tZSwgRWRnZSwgYW5kIFNhZmFyaS5cbiAqL1xuXG5iLFxuc3Ryb25nIHtcbiAgZm9udC13ZWlnaHQ6IGJvbGRlcjtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSBpbmhlcml0YW5jZSBhbmQgc2NhbGluZyBvZiBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICogMi4gQ29ycmVjdCB0aGUgb2RkIGBlbWAgZm9udCBzaXppbmcgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbmNvZGUsXG5rYmQsXG5zYW1wIHtcbiAgZm9udC1mYW1pbHk6IG1vbm9zcGFjZSwgbW9ub3NwYWNlOyAvKiAxICovXG4gIGZvbnQtc2l6ZTogMWVtOyAvKiAyICovXG59XG5cbi8qKlxuICogQWRkIHRoZSBjb3JyZWN0IGZvbnQgc3R5bGUgaW4gQW5kcm9pZCA0LjMtLlxuICovXG5cbmRmbiB7XG4gIGZvbnQtc3R5bGU6IGl0YWxpYztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgYmFja2dyb3VuZCBhbmQgY29sb3IgaW4gSUUgOS0uXG4gKi9cblxubWFyayB7XG4gIGJhY2tncm91bmQtY29sb3I6ICNmZjA7XG4gIGNvbG9yOiAjMDAwO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBmb250IHNpemUgaW4gYWxsIGJyb3dzZXJzLlxuICovXG5cbnNtYWxsIHtcbiAgZm9udC1zaXplOiA4MCU7XG59XG5cbi8qKlxuICogUHJldmVudCBgc3ViYCBhbmQgYHN1cGAgZWxlbWVudHMgZnJvbSBhZmZlY3RpbmcgdGhlIGxpbmUgaGVpZ2h0IGluXG4gKiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3ViLFxuc3VwIHtcbiAgZm9udC1zaXplOiA3NSU7XG4gIGxpbmUtaGVpZ2h0OiAwO1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTtcbn1cblxuc3ViIHtcbiAgYm90dG9tOiAtMC4yNWVtO1xufVxuXG5zdXAge1xuICB0b3A6IC0wLjVlbTtcbn1cblxuLyogRW1iZWRkZWQgY29udGVudFxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqL1xuXG5hdWRpbyxcbnZpZGVvIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xufVxuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIGlPUyA0LTcuXG4gKi9cblxuYXVkaW86bm90KFtjb250cm9sc10pIHtcbiAgZGlzcGxheTogbm9uZTtcbiAgaGVpZ2h0OiAwO1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgYm9yZGVyIG9uIGltYWdlcyBpbnNpZGUgbGlua3MgaW4gSUUgMTAtLlxuICovXG5cbmltZyB7XG4gIGJvcmRlci1zdHlsZTogbm9uZTtcbn1cblxuLyoqXG4gKiBIaWRlIHRoZSBvdmVyZmxvdyBpbiBJRS5cbiAqL1xuXG5zdmc6bm90KDpyb290KSB7XG4gIG92ZXJmbG93OiBoaWRkZW47XG59XG5cbi8qIEZvcm1zXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIDEuIENoYW5nZSB0aGUgZm9udCBzdHlsZXMgaW4gYWxsIGJyb3dzZXJzIChvcGluaW9uYXRlZCkuXG4gKiAyLiBSZW1vdmUgdGhlIG1hcmdpbiBpbiBGaXJlZm94IGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaW5wdXQsXG5vcHRncm91cCxcbnNlbGVjdCxcbnRleHRhcmVhIHtcbiAgZm9udC1mYW1pbHk6IHNhbnMtc2VyaWY7IC8qIDEgKi9cbiAgZm9udC1zaXplOiAxMDAlOyAvKiAxICovXG4gIGxpbmUtaGVpZ2h0OiAxLjE1OyAvKiAxICovXG4gIG1hcmdpbjogMDsgLyogMiAqL1xufVxuXG4vKipcbiAqIFNob3cgdGhlIG92ZXJmbG93IGluIElFLlxuICogMS4gU2hvdyB0aGUgb3ZlcmZsb3cgaW4gRWRnZS5cbiAqL1xuXG5idXR0b24sXG5pbnB1dCB7IC8qIDEgKi9cbiAgb3ZlcmZsb3c6IHZpc2libGU7XG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbmhlcml0YW5jZSBvZiB0ZXh0IHRyYW5zZm9ybSBpbiBFZGdlLCBGaXJlZm94LCBhbmQgSUUuXG4gKiAxLiBSZW1vdmUgdGhlIGluaGVyaXRhbmNlIG9mIHRleHQgdHJhbnNmb3JtIGluIEZpcmVmb3guXG4gKi9cblxuYnV0dG9uLFxuc2VsZWN0IHsgLyogMSAqL1xuICB0ZXh0LXRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyoqXG4gKiAxLiBQcmV2ZW50IGEgV2ViS2l0IGJ1ZyB3aGVyZSAoMikgZGVzdHJveXMgbmF0aXZlIGBhdWRpb2AgYW5kIGB2aWRlb2BcbiAqICAgIGNvbnRyb2xzIGluIEFuZHJvaWQgNC5cbiAqIDIuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKi9cblxuYnV0dG9uLFxuaHRtbCBbdHlwZT1cImJ1dHRvblwiXSwgLyogMSAqL1xuW3R5cGU9XCJyZXNldFwiXSxcblt0eXBlPVwic3VibWl0XCJdIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBidXR0b247IC8qIDIgKi9cbn1cblxuLyoqXG4gKiBSZW1vdmUgdGhlIGlubmVyIGJvcmRlciBhbmQgcGFkZGluZyBpbiBGaXJlZm94LlxuICovXG5cbmJ1dHRvbjo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwiYnV0dG9uXCJdOjotbW96LWZvY3VzLWlubmVyLFxuW3R5cGU9XCJyZXNldFwiXTo6LW1vei1mb2N1cy1pbm5lcixcblt0eXBlPVwic3VibWl0XCJdOjotbW96LWZvY3VzLWlubmVyIHtcbiAgYm9yZGVyLXN0eWxlOiBub25lO1xuICBwYWRkaW5nOiAwO1xufVxuXG4vKipcbiAqIFJlc3RvcmUgdGhlIGZvY3VzIHN0eWxlcyB1bnNldCBieSB0aGUgcHJldmlvdXMgcnVsZS5cbiAqL1xuXG5idXR0b246LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cImJ1dHRvblwiXTotbW96LWZvY3VzcmluZyxcblt0eXBlPVwicmVzZXRcIl06LW1vei1mb2N1c3JpbmcsXG5bdHlwZT1cInN1Ym1pdFwiXTotbW96LWZvY3VzcmluZyB7XG4gIG91dGxpbmU6IDFweCBkb3R0ZWQgQnV0dG9uVGV4dDtcbn1cblxuLyoqXG4gKiBDaGFuZ2UgdGhlIGJvcmRlciwgbWFyZ2luLCBhbmQgcGFkZGluZyBpbiBhbGwgYnJvd3NlcnMgKG9waW5pb25hdGVkKS5cbiAqL1xuXG5maWVsZHNldCB7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNjMGMwYzA7XG4gIG1hcmdpbjogMCAycHg7XG4gIHBhZGRpbmc6IDAuMzVlbSAwLjYyNWVtIDAuNzVlbTtcbn1cblxuLyoqXG4gKiAxLiBDb3JyZWN0IHRoZSB0ZXh0IHdyYXBwaW5nIGluIEVkZ2UgYW5kIElFLlxuICogMi4gQ29ycmVjdCB0aGUgY29sb3IgaW5oZXJpdGFuY2UgZnJvbSBgZmllbGRzZXRgIGVsZW1lbnRzIGluIElFLlxuICogMy4gUmVtb3ZlIHRoZSBwYWRkaW5nIHNvIGRldmVsb3BlcnMgYXJlIG5vdCBjYXVnaHQgb3V0IHdoZW4gdGhleSB6ZXJvIG91dFxuICogICAgYGZpZWxkc2V0YCBlbGVtZW50cyBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxubGVnZW5kIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBjb2xvcjogaW5oZXJpdDsgLyogMiAqL1xuICBkaXNwbGF5OiB0YWJsZTsgLyogMSAqL1xuICBtYXgtd2lkdGg6IDEwMCU7IC8qIDEgKi9cbiAgcGFkZGluZzogMDsgLyogMyAqL1xuICB3aGl0ZS1zcGFjZTogbm9ybWFsOyAvKiAxICovXG59XG5cbi8qKlxuICogMS4gQWRkIHRoZSBjb3JyZWN0IGRpc3BsYXkgaW4gSUUgOS0uXG4gKiAyLiBBZGQgdGhlIGNvcnJlY3QgdmVydGljYWwgYWxpZ25tZW50IGluIENocm9tZSwgRmlyZWZveCwgYW5kIE9wZXJhLlxuICovXG5cbnByb2dyZXNzIHtcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyAvKiAxICovXG4gIHZlcnRpY2FsLWFsaWduOiBiYXNlbGluZTsgLyogMiAqL1xufVxuXG4vKipcbiAqIFJlbW92ZSB0aGUgZGVmYXVsdCB2ZXJ0aWNhbCBzY3JvbGxiYXIgaW4gSUUuXG4gKi9cblxudGV4dGFyZWEge1xuICBvdmVyZmxvdzogYXV0bztcbn1cblxuLyoqXG4gKiAxLiBBZGQgdGhlIGNvcnJlY3QgYm94IHNpemluZyBpbiBJRSAxMC0uXG4gKiAyLiBSZW1vdmUgdGhlIHBhZGRpbmcgaW4gSUUgMTAtLlxuICovXG5cblt0eXBlPVwiY2hlY2tib3hcIl0sXG5bdHlwZT1cInJhZGlvXCJdIHtcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDsgLyogMSAqL1xuICBwYWRkaW5nOiAwOyAvKiAyICovXG59XG5cbi8qKlxuICogQ29ycmVjdCB0aGUgY3Vyc29yIHN0eWxlIG9mIGluY3JlbWVudCBhbmQgZGVjcmVtZW50IGJ1dHRvbnMgaW4gQ2hyb21lLlxuICovXG5cblt0eXBlPVwibnVtYmVyXCJdOjotd2Via2l0LWlubmVyLXNwaW4tYnV0dG9uLFxuW3R5cGU9XCJudW1iZXJcIl06Oi13ZWJraXQtb3V0ZXItc3Bpbi1idXR0b24ge1xuICBoZWlnaHQ6IGF1dG87XG59XG5cbi8qKlxuICogMS4gQ29ycmVjdCB0aGUgb2RkIGFwcGVhcmFuY2UgaW4gQ2hyb21lIGFuZCBTYWZhcmkuXG4gKiAyLiBDb3JyZWN0IHRoZSBvdXRsaW5lIHN0eWxlIGluIFNhZmFyaS5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXSB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogdGV4dGZpZWxkOyAvKiAxICovXG4gIG91dGxpbmUtb2Zmc2V0OiAtMnB4OyAvKiAyICovXG59XG5cbi8qKlxuICogUmVtb3ZlIHRoZSBpbm5lciBwYWRkaW5nIGFuZCBjYW5jZWwgYnV0dG9ucyBpbiBDaHJvbWUgYW5kIFNhZmFyaSBvbiBtYWNPUy5cbiAqL1xuXG5bdHlwZT1cInNlYXJjaFwiXTo6LXdlYmtpdC1zZWFyY2gtY2FuY2VsLWJ1dHRvbixcblt0eXBlPVwic2VhcmNoXCJdOjotd2Via2l0LXNlYXJjaC1kZWNvcmF0aW9uIHtcbiAgLXdlYmtpdC1hcHBlYXJhbmNlOiBub25lO1xufVxuXG4vKipcbiAqIDEuIENvcnJlY3QgdGhlIGluYWJpbGl0eSB0byBzdHlsZSBjbGlja2FibGUgdHlwZXMgaW4gaU9TIGFuZCBTYWZhcmkuXG4gKiAyLiBDaGFuZ2UgZm9udCBwcm9wZXJ0aWVzIHRvIGBpbmhlcml0YCBpbiBTYWZhcmkuXG4gKi9cblxuOjotd2Via2l0LWZpbGUtdXBsb2FkLWJ1dHRvbiB7XG4gIC13ZWJraXQtYXBwZWFyYW5jZTogYnV0dG9uOyAvKiAxICovXG4gIGZvbnQ6IGluaGVyaXQ7IC8qIDIgKi9cbn1cblxuLyogSW50ZXJhY3RpdmVcbiAgID09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09ICovXG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSA5LS5cbiAqIDEuIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIEVkZ2UsIElFLCBhbmQgRmlyZWZveC5cbiAqL1xuXG5kZXRhaWxzLCAvKiAxICovXG5tZW51IHtcbiAgZGlzcGxheTogYmxvY2s7XG59XG5cbi8qXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBhbGwgYnJvd3NlcnMuXG4gKi9cblxuc3VtbWFyeSB7XG4gIGRpc3BsYXk6IGxpc3QtaXRlbTtcbn1cblxuLyogU2NyaXB0aW5nXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKipcbiAqIEFkZCB0aGUgY29ycmVjdCBkaXNwbGF5IGluIElFIDktLlxuICovXG5cbmNhbnZhcyB7XG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbn1cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRS5cbiAqL1xuXG50ZW1wbGF0ZSB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbi8qIEhpZGRlblxuICAgPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT0gKi9cblxuLyoqXG4gKiBBZGQgdGhlIGNvcnJlY3QgZGlzcGxheSBpbiBJRSAxMC0uXG4gKi9cblxuW2hpZGRlbl0ge1xuICBkaXNwbGF5OiBub25lO1xufVxuIiwiQGZvbnQtZmFjZSB7XG4gICAgZm9udC1mYW1pbHk6ICdwYW5hbWEnO1xuICAgIHNyYzogdXJsKCcvZm9udHMvcGFuYW1hLWJvbGQtd2ViZm9udC53b2ZmMicpIGZvcm1hdCgnd29mZjInKSxcbiAgICAgICAgIHVybCgnL2ZvbnRzL3BhbmFtYS1ib2xkLXdlYmZvbnQud29mZicpIGZvcm1hdCgnd29mZicpO1xuICAgIGZvbnQtd2VpZ2h0OiBub3JtYWw7XG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xuXG59XG5cbmh0bWwge1xuICBmb250LXNpemU6MTBweDtcbn1cblxuYm9keSB7XG4gIGZvbnQtc2l6ZToxLjVyZW07XG4gIGNvbG9yOiRibGFjaztcbn1cblxuaDEsIGgyLCBoMywgaDQsIGg1LCBoNiwge1xuICAvLyBmb250LXNpemU6IDVyZW07XG4gIGZvbnQtZmFtaWx5OiAnUGFuYW1hJztcbiAgZm9udC13ZWlnaHQ6IDYwMDtcbiAgLy8gbGV0dGVyLXNwYWNpbmc6LTFweDtcbn1cblxuYSB7XG4gIHRleHQtZGVjb3JhdGlvbjogbm9uZTtcbiAgY29sb3I6JGJsYWNrO1xufVxuXG5wIGEge1xuICBib3JkZXItYm90dG9tOiAycHggc29saWQgJHllbGxvdztcbn1cblxucCB7XG4gIGxpbmUtaGVpZ2h0OiAyO1xuICBmb250LXNpemU6IDEuNnJlbTtcbn1cblxuLnRpdGxlLCAudGl0bGUtLXByb2R1Y3Qge1xuICB3b3JkLXdyYXA6IGJyZWFrLXdvcmQ7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMjtcbiAgbWFyZ2luOjA7XG4gIGZvbnQtc2l6ZTogNDBweDtcbiAgei1pbmRleDogMjtcbiAgbGluZS1oZWlnaHQ6MS4xO1xuICAvLyB0cmFuc2Zvcm06IHNrZXcoMCwgLTNkZWcpO1xuICAmLS1sb25nIHtcbiAgICBmb250LXNpemU6IDMwcHg7XG4gIH1cbiAgJjpiZWZvcmUge1xuICAgIGNvbnRlbnQ6ICcnO1xuICAgIHdpZHRoOjUwcHg7XG4gICAgbGVmdDowO1xuICAgIHRvcDowO1xuICAgIGhlaWdodDoxMDAlO1xuICAgIC8vIHRvcDoxMCU7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHotaW5kZXg6IC0xO1xuICAgIHRyYW5zZm9ybTpza2V3KC01ZGVnKTtcbiAgfVxuICBsaW5lLWhlaWdodDoxLjE7XG4gIC8vIGlubGluZSBsaW5rIGluc2lkZVxuICBhIHtcbiAgICBib3JkZXItYm90dG9tOiAwO1xuICAgICR5ZWxsb3dhOiByZ2JhKCR5ZWxsb3csMC44KTtcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQodG8gcmlnaHQsICR5ZWxsb3dhIDEwMCUsICR5ZWxsb3dhIDUwJSk7XG4gIH1cbn1cblxuLnRpdGxlLS1wcm9kdWN0e1xuICBmb250LXNpemU6IDE0cHg7XG59XG5cbi50aXRsZS0tc2luZ2xlIHtcbiAgbWF4LXdpZHRoOiA2MDBweDtcbiAgbWFyZ2luLXRvcDogLTlyZW07XG4gIGZvbnQtc2l6ZTogMTByZW07XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbn1cbiIsIiRibGFjazogIzMwMzAzMDtcbiR3aWR0aDogODAwcHg7XG4kcHVycGxlOiAjMzcxMTc4O1xuJGxpZ2h0UHVycGxlOiAjNTMyNzlGO1xuJHllbGxvdzogI0ZGQzQwRTtcbiRwaW5rOiAjRUU3Mjk3O1xuJGdyZWVuOiAjOTNGRjAwO1xuJHJlZDogI0U1MDcxNDtcbiRidXR0b24tcHVycGxlOiAkcHVycGxlO1xuJHdoaXRlOiAjZmZmO1xuJGdyZXk6IGxpZ2h0ZW4oZ3JleSwgNDAlKTtcbiRzaGFkOiAwIDAgMTBweCByZ2JhKDAsMCwwLDAuMSksIDAgNXB4IDEwcHggcmdiYSgwLDAsMCwwLjA1KTtcbiRncmFkOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICM0OGRlZDQgMCUsICNhMDI2YmYgMjAlLCAjZTgyYzc1IDYwJSwgJHllbGxvdyA4NSUsICM0OGRlZDQgOTUlKTtcbiR2ZXJ0aWNhbEdyYWQ6IGxpbmVhci1ncmFkaWVudCgwLCAjNDhkZWQ0IDAlLCAjYTAyNmJmIDIwJSwgI2U4MmM3NSA2MCUsICR5ZWxsb3cgODUlLCAjNDhkZWQ0IDk1JSk7XG4kYmFja2dyb3VuZFB1cnBsZUdyYWQ6IGxpbmVhci1ncmFkaWVudCg5MGRlZywgIzFGMDg1RiAwJSwgIzUzMjc5RiAxMDAlKTtcbiIsImlucHV0LFxudGV4dGFyZWEge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgYm9yZGVyOiAxcHggc29saWQgJGdyZXk7XG4gICAgJi5pbnB1dCB7XG4gICAgICAgICYtLWVycm9yIHtcbiAgICAgICAgICAgIGJvcmRlci1jb2xvcjogcmVkO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5sYWJlbCB7XG4gICAgcGFkZGluZzogMTBweCAwO1xuICAgIGRpc3BsYXk6IGJsb2NrO1xufVxuXG4uZm9ybSB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgcGFkZGluZzogMnJlbTtcbiAgICBib3gtc2hhZG93OiAkZ3JhZDtcbiAgICAmKy5mb3JtIHtcbiAgICAgICAgbWFyZ2luLXRvcDogNHJlbTtcbiAgICB9XG4gICAgLy8gSSBrbm93IHRoaXMgaXNuJ3QgYmVtIGJ1dCBtZWhcbiAgICBoMiB7XG4gICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgZm9udC1zaXplOiAycmVtO1xuICAgICAgICBwYWRkaW5nLWJvdHRvbTogMnJlbTtcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRncmV5O1xuICAgIH1cbn1cblxuLmZvcm0tLWZsZXgge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbn1cblxuLmxvZ2luX19mb3JtIHtcbiAgICB3aWR0aDogNTAwcHg7XG4gICAgbWFyZ2luOiA1MHB4IGF1dG87XG4gICAgLmJ1dHRvbiB7XG4gICAgICAgIG1hcmdpbi10b3A6IDIwcHg7XG4gICAgfVxufSIsIi5zZWFyY2gge1xuICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gIHdpZHRoOiAxMDAlO1xuICBkaXNwbGF5OiBmbGV4O1xuICAmX19yZXN1bHRzIHtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOjQ3cHg7XG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggcmdiYSgwLDAsMCwwLjIpO1xuICAgIHotaW5kZXg6IDU7XG4gICAgbGVmdDogMDtcbiAgICBAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA5MDBweCkge1xuICAgICAgdG9wOiA0M3B4O1xuICAgIH1cbiAgfVxuICAmX19pbnB1dCB7XG4gICAgZm9udC1zaXplOiAyMHB4O1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgY29sb3I6ICR3aGl0ZTtcbiAgICBvdXRsaW5lOiAwO1xuICAgIGJvcmRlcjogMDtcbiAgfVxuICAmX19yZXN1bHQge1xuICAgIHBhZGRpbmc6IDEwcHg7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICNlY2VjZWM7XG4gICAgJi0tYWN0aXZlIHtcbiAgICAgIGJhY2tncm91bmQ6ICNmMWYxZjE7XG4gICAgfVxuICAgIGltZyB7XG4gICAgICB3aWR0aDogNiU7XG4gICAgICBoZWlnaHQ6IDYlO1xuICAgIH1cbiAgICAmLS1tYXJnaW4ge1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIHN0cm9uZywgc3BhbiB7XG4gICAgICAgIG1hcmdpbjogNHB4IDAgNHB4IDhweDtcbiAgICAgIH1cbiAgICAgIHNwYW4ge1xuICAgICAgICBtYXJnaW4tbGVmdDogMDtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuIiwiLmhlcm9fX2NvbnRhaW5lciB7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdG9wOiAyNjBweDtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBtYXJnaW4tdG9wOiAtNDBweDtcbiAgLmhlcm9fX2xvZ28ge1xuICAgIG1hcmdpbjogMCBhdXRvO1xuICB9XG4gIC5zZWFyY2gge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIHdoaXRlO1xuICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICB3aWR0aDogNDAlO1xuICAgIG1hcmdpbjogMTBweCBhdXRvO1xuICAgIC5zZWFyY2hfX2lucHV0IHtcbiAgICAgIGNvbG9yOiBibGFjaztcbiAgICB9XG4gICAgXG4gIH1cbn1cbkBtZWRpYSAobWluLXdpZHRoOjE0MDFweCl7XG4gIC5oZXJvX19jb250YWluZXJ7XG4gICAgbWFyZ2luLXRvcDogMDtcbiAgfVxufVxuXG5AbWVkaWEgKG1heC13aWR0aDo5MDBweCkge1xuICAuaGVyb19fY29udGFpbmVyIHtcbiAgICAuc2VhcmNoIHtcbiAgICAgIHdpZHRoOiA4MCU7XG4gICAgfVxuICB9XG59XG5cbkBtZWRpYSAobWF4LXdpZHRoOjQxNHB4KSB7XG4gIC5oZXJvX19pbWFnZSB7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBoZWlnaHQ6IDUxNnB4O1xuICAgIGJhY2tncm91bmQtcG9zaXRpb24teDogLTE3OHB4O1xuICAgIH1cbiAgLmhlcm9fX2NvbnRhaW5lciB7XG4gICAgdG9wOiAxMzBweDtcblxuICAgIC5zZWFyY2gge1xuICAgICAgd2lkdGg6IDkwJTtcbiAgICB9XG4gIH1cblxufSIsIkBrZXlmcmFtZXMgc2xpZGVJbiB7XG4gIDAlIHtcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVgoLTEwcHgpO1xuICB9XG4gIDUwJSB7XG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVYKDEwcHgpO1xuICB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWCgwcHgpO1xuICB9XG59XG5cbi5mbGFzaCB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBib3gtc2hhZG93OiAwIDNweCAxMHB4IHJnYmEoMCwwLDAsMC4xNSk7XG4gIG1hcmdpbi1ib3R0b206IDJyZW07XG4gIHBhZGRpbmc6IDJyZW07XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgei1pbmRleDogMTtcbiAgYm9yZGVyLXJhZGl1czogM3B4O1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbmltYXRpb246IHNsaWRlSW4gZm9yd2FyZHMgLjFzIGVhc2UtaW4tb3V0IDI7XG4gIGFuaW1hdGlvbi10aW1pbmctZnVuY3Rpb246IGN1YmljLWJlemllcigwLjAxLCAxLjY4LCAwLjU4LCAxKTtcbiAgJiArIC5mbGFzaCB7XG4gICAgYW5pbWF0aW9uLWRlbGF5OiAwLjU1cztcbiAgICAmICsgLmZsYXNoIHtcbiAgICAgIGFuaW1hdGlvbi1kZWxheTogMC42cztcbiAgICB9XG4gIH1cbiAgJl9fdGV4dCB7XG4gICAgZmxleDogMTtcbiAgfVxuICAmX19yZW1vdmUge1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgYm9yZGVyOjA7XG4gICAgJjpob3ZlciB7XG4gICAgICBjb2xvcjogJHllbGxvdztcbiAgICB9XG4gIH1cbiAgJjphZnRlciB7XG4gICAgY29udGVudDogJyc7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgcG9zaXRpb246IGFic29sdXRlO1xuICAgIHdpZHRoOiBjYWxjKDEwMCUgLSAxNnB4KTtcbiAgICBoZWlnaHQ6IGNhbGMoMTAwJSAtIDE2cHgpO1xuICAgIHRvcDogOHB4O1xuICAgIGxlZnQ6IDhweDtcbiAgICB6LWluZGV4OiAtMTtcbiAgICBib3gtc2hhZG93OiAwIDAgMnB4IDJweCByZ2JhKDAsMCwwLDAuMSk7XG4gICAgYm9yZGVyLXJhZGl1czogM3B4O1xuICB9XG4gICYtLXN1Y2Nlc3Mge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIHJnYmEoMjEwLDI1NSw4MiwxKSAwJSwgcmdiYSgxNDUsMjMyLDY2LDEpIDEwMCUpO1xuICB9XG4gICYtLWVycm9yIHtcbiAgICBiYWNrZ3JvdW5kOiBsaW5lYXItZ3JhZGllbnQoMjBkZWcsIHJnYmEoMjU1LDAsMCwxKSAwJSwgcmdiYSgyMDAsMCwwLDEpIDEwMCUpO1xuICB9XG4gICYtLWluZm8ge1xuICAgIGJhY2tncm91bmQ6IGxpbmVhci1ncmFkaWVudCgzNWRlZywgcmdiYSgyNDEsMjMxLDEwMywxKSAwJSwgcmdiYSgyNTQsMTgyLDY5LDEpIDEwMCUpO1xuICB9XG4gIHAge1xuICAgIG1hcmdpbjogMDtcbiAgfVxufVxuIiwiLm5hdiB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBsaXN0LXN0eWxlOiBub25lO1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwIDE3MHB4O1xuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgICAvKiBJbmRpZ28gTmF2IEJhY2tncm91bmQ6ICovXG4gICAgYmFja2dyb3VuZC1pbWFnZTogJGJhY2tncm91bmRQdXJwbGVHcmFkO1xuICAgICZfX3NlY3Rpb24ge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICAmLS1zZWFyY2gge1xuICAgICAgICAgICAgZmxleDogMCAxIGF1dG87XG4gICAgICAgIH1cbiAgICB9XG4gICAgJl9faXRlbSB7XG4gICAgICAgIHdpZHRoOiAxMDAlO1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgIH1cbiAgICAmX19saW5rIHtcbiAgICAgICAgY29sb3I6IHdoaXRlO1xuICAgICAgICBib3JkZXItcmlnaHQ6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG4gICAgICAgIHRleHQtdHJhbnNmb3JtOiB1cHBlcmNhc2U7XG4gICAgICAgIHBhZGRpbmc6IDEuMnJlbSAycmVtIDFyZW0gMnJlbTtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICB0cmFuc2l0aW9uOiB0cmFuc2Zvcm0gMC4ycztcbiAgICAgICAgYm9yZGVyLWJvdHRvbTogNXB4IHNvbGlkIHRyYW5zcGFyZW50O1xuICAgICAgICBzdmcge1xuICAgICAgICAgICAgd2lkdGg6IDQwcHg7XG4gICAgICAgICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycztcbiAgICAgICAgICAgIGZpbGw6IHdoaXRlO1xuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMXJlbTtcbiAgICAgICAgfVxuICAgICAgICAmOmhvdmVyLFxuICAgICAgICAmLS1hY3RpdmUge1xuICAgICAgICAgICAgYm9yZGVyLWJvdHRvbS1jb2xvcjogd2hpdGU7XG4gICAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yKVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICYtLWxvZ28ge1xuICAgICAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICAgICAgc3ZnIHtcbiAgICAgICAgICAgICAgICAgICAgdHJhbnNmb3JtOiBub25lO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHN2ZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDE1MHB4O1xuICAgICAgICAgICAgICAgIG1hcmdpbjogMDtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAmLmZvb3RlciB7XG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgICAgICBjb2xvcjogd2hpdGU7XG4gICAgICAgIGxpIHtcbiAgICAgICAgICAgIHBhZGRpbmc6IDJyZW07XG4gICAgICAgIH1cbiAgICAgICAgbGk6bnRoLWNoaWxkKDIpIHtcbiAgICAgICAgICAgIGJvcmRlci1sZWZ0OiAxcHggc29saWQgd2hpdGU7XG4gICAgICAgIH0gICAgICAgIFxuICAgICAgICBzcGFuIHtcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDoxNzQwcHgpIHtcbiAgICAubmF2IHtcbiAgICAgICAgcGFkZGluZzogMCA1MHB4O1xuICAgIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogMTIwMHB4KSB7XG4gICAgLm5hdiB7XG4gICAgICAgIHBhZGRpbmc6IDA7XG4gICAgICAgICZfX2xpbmsge1xuICAgICAgICAgICAgcGFkZGluZy1sZWZ0OiAxcmVtO1xuICAgICAgICAgICAgcGFkZGluZy1yaWdodDogMXJlbTtcbiAgICAgICAgICAgIHN2ZyB7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDMwcHg7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLS1sb2dvIHtcbiAgICAgICAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWluLXdpZHRoOjkwMXB4KSB7XG4gICAgLm5hdl9fc2VjdGlvbi0tc2VhcmNoIHtcbiAgICAgICAgd2lkdGg6IDQwJTtcbiAgICAgICAgcGFkZGluZzogMCAxNXB4O1xuICAgICAgICAuc2VhcmNoIHtcbiAgICAgICAgICAgIGJvcmRlcjogMnB4IHdoaXRlIHNvbGlkO1xuICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xuICAgICAgICAgICAgYm9yZGVyLXJhZGl1czogNHB4O1xuICAgICAgICAgICAgdG9wOiA0NXB4O1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA5MDBweCkge1xuICAgIC5uYXYge1xuICAgICAgICBmbGV4LXdyYXA6IHdyYXA7XG4gICAgICAgICZfX3NlY3Rpb24ge1xuICAgICAgICAgICAgb3JkZXI6IDE7XG4gICAgICAgICAgICAmLS1zZWFyY2gge1xuICAgICAgICAgICAgICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCByZ2JhKDI1NSwgMjU1LCAyNTUsIDAuMSk7XG4gICAgICAgICAgICAgICAgb3JkZXI6IDI7XG4gICAgICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5cbkBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDY1MHB4KSB7XG4gICAgLm5hdiB7XG4gICAgICAgICZfX3NlY3Rpb24ge1xuICAgICAgICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICAmLS11c2VyIHtcbiAgICAgICAgICAgICAgICBvcmRlcjogLTE7XG4gICAgICAgICAgICAgICAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkIHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4xKTtcbiAgICAgICAgICAgICAgICAuYXZhdGFyIHtcbiAgICAgICAgICAgICAgICAgICAgbWluLXdpZHRoOiAyMHB4O1xuICAgICAgICAgICAgICAgICAgICBoZWlnaHQ6IDIwcHg7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHN2ZyB7XG4gICAgICAgICAgICAgICAgICAgIGRpc3BsYXk6IG5vbmU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgICZfX2l0ZW0ge1xuICAgICAgICAgICAgd2lkdGg6IDMzLjMzMzMzMyU7XG4gICAgICAgIH1cbiAgICAgICAgJl9fbGluayB7XG4gICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgIHN2ZyB7XG4gICAgICAgICAgICAgICAgLy8gd2lkdGg6IDVweDtcbiAgICAgICAgICAgICAgICBtYXgtd2lkdGg6IDEwMCU7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAmLS1sb2dvIHtcbiAgICAgICAgICAgICAgICBzdmcge1xuICAgICAgICAgICAgICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgLmhlYXJ0LWNvdW50OmJlZm9yZSB7XG4gICAgICAgIGNvbnRlbnQ6ICfimaXvuI8nO1xuICAgICAgICBtYXJnaW4tcmlnaHQ6IDFyZW07XG4gICAgfVxufVxuXG5hLmFkbWluX19saW5rIHtcbiAgICBib3JkZXItcmlnaHQ6IG5vbmU7XG4gIH0iLCIudGFibGUge1xuICB3aWR0aDogMTAwJTtcbiAgdGQge1xuICAgIHBhZGRpbmc6IDVweDtcbiAgfVxuICB0cjpudGgtY2hpbGQoZXZlbikge1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICB9XG4gIHRyOm50aC1jaGlsZChvZGQpOm5vdCg6Zmlyc3QtY2hpbGQpIHtcbiAgICBiYWNrZ3JvdW5kOiAjZjdmN2Y3O1xuICB9XG4gIHRoZWFkIHRyIHtcbiAgICBiYWNrZ3JvdW5kOiAkYmxhY2s7XG4gICAgY29sb3I6IHdoaXRlO1xuICB9XG59XG4iLCIuc3RvcmVzIHtcbiAgZGlzcGxheTpmbGV4O1xuICBmbGV4LXdyYXA6IHdyYXA7XG4gIC8vIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcbiAgbWFyZ2luOiAtMS4yNWVtIDAgMCAtMS4yNWVtO1xuICBAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiAxMDI0cHgpIHtcbiAgICBmbGV4LXdyYXA6IHdyYXA7XG4gIH1cbn1cblxuLnN0b3JlIHtcbiAgYmFja2dyb3VuZDp3aGl0ZTtcbiAgbWFyZ2luOiAxLjI1ZW0gMCAwIDEuMjVlbTtcbiAgd2lkdGg6IGNhbGMoMzMuMzMzMyUgLSAxNC4yNWVtKTtcbiAgbWFyZ2luLWJvdHRvbTogMS41ZW07XG4gIHdpZHRoOiAxOC41JTtcbiAgYm94LXNoYWRvdzogJHNoYWQ7XG4gIG1pbi1oZWlnaHQ6IDI0NnB4O1xuICBvdmVyZmxvdzogaGlkZGVuO1xuICBib3JkZXI6IDJweCBzb2xpZCAkcHVycGxlO1xuICAmLS13aWRlIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICAmX19kZXRhaWxzIHtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIHAge1xuICAgICAgbGluZS1oZWlnaHQ6IDEuMjtcbiAgICAgIG1hcmdpbi1ib3R0b206IDA7XG4gICAgfVxuICB9XG4gICY6aG92ZXIgaW1ne1xuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4xKTtcbiAgfVxuICBAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiAxMjQwcHgpIHtcbiAgICB3aWR0aDogMTglO1xuICB9XG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDExMDBweCkge1xuICAgIHdpZHRoOiAyMyU7XG4gIH1cbiAgQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDogOTYwcHgpIHtcbiAgICB3aWR0aDogY2FsYyg1MCUgLSAxLjI1ZW0pO1xuICB9XG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDU1MHB4KSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbn1cblxuLnN0b3JlX19hY3Rpb25zIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB6LWluZGV4OiAyO1xuICBib3JkZXItYm90dG9tOiAxcHggc29saWQgcmdiYSgwLDAsMCwwLjIpO1xuICBib3gtc2hhZG93OiAwIDFweCAwIHJnYmEoMCwwLDAsMC4yKSwgMCAxcHggMCByZ2JhKDI1NSwyNTUsMjU1LDAuMik7XG4gIG1hcmdpbi1ib3R0b206IDUwcHg7XG4gIHBhZGRpbmctdG9wOiAxMHB4O1xuICBwYWRkaW5nLWJvdHRvbTogMjBweDtcbiAgZGlzcGxheTogZmxleDtcbiAgY29sb3I6IHdoaXRlO1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWFyb3VuZDtcbn1cblxuLnN0b3JlX19hY3Rpb24ge1xuICBmb250LXNpemU6IDEwcHg7XG4gIHN2ZyB7XG4gICAgd2lkdGg6IDI1cHg7XG4gICAgZmlsbDogd2hpdGVcbiAgfVxuICAmLS1lZGl0IHtcbiAgICBhIHtcbiAgICAgIGJvcmRlci1ib3R0b206IDA7XG4gICAgfVxuICB9XG59XG5cblxuLnN0b3JlX19oZXJvIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBwYWRkaW5nOiAwIDEwcHggMCAxMHB4O1xuICB0ZXh0LWFsaWduOiByaWdodDtcbiAgbWluLWhlaWdodDogMTg1cHg7XG5cbiAgaW1nIHtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgdG9wOiAwO1xuICAgIHJpZ2h0OiAwO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBsZWZ0OiAwO1xuICAgIG9iamVjdC1maXQ6IGNvdmVyO1xuICAgIHRyYW5zaXRpb246IGFsbCAuMnMgZWFzZS1pbi1vdXQ7XG4gIH1cbn1cblxuYS5zdG9yZS0taG92ZXI6aG92ZXIge1xuICAuc3RvcmVfX2hlcm86YmVmb3JlIHtcbiAgICB0cmFuc2l0aW9uOiBvcGFjaXR5IGVhc2UgMC41cztcbiAgICBvcGFjaXR5OiAwO1xuICB9XG59IiwiLnRhZ3Mge1xuICAgIG1hcmdpbjogMDtcbiAgICBwYWRkaW5nOiAwO1xuICAgIGxpc3Qtc3R5bGU6IG5vbmU7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICAgIGZsZXgtd3JhcDogd3JhcDtcbn1cblxuLnRhZyB7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xuICAgIG1hcmdpbi1ib3R0b206IDAuNXJlbTtcbiAgICAmX19jaG9pY2Uge1xuICAgICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICAgICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICAgICAgaW5wdXQge1xuICAgICAgICAgICAgd2lkdGg6IGF1dG87XG4gICAgICAgICAgICByaWdodDogLTEuNXJlbTtcbiAgICAgICAgICAgIG1hcmdpbi1yaWdodDogLTFyZW07XG4gICAgICAgICAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgICAgICAgICB6LWluZGV4OiAyO1xuICAgICAgICAgICAgJitsYWJlbCB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJGdyZXk7XG4gICAgICAgICAgICAgICAgcGFkZGluZzogMXJlbSAxcmVtIDFyZW0gNHJlbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgICY6Y2hlY2tlZCtsYWJlbCB7XG4gICAgICAgICAgICAgICAgYmFja2dyb3VuZDogJHB1cnBsZTtcbiAgICAgICAgICAgICAgICBjb2xvcjogJHdoaXRlO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgICZfX2xpbmsge1xuICAgICAgICBiYWNrZ3JvdW5kOiAkbGlnaHRQdXJwbGU7XG4gICAgICAgIGNvbG9yOiAkd2hpdGU7XG4gICAgICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgICAgIGJvcmRlci1yYWRpdXM6IDRweDtcbiAgICAgICAgJi0tYWN0aXZlIHtcbiAgICAgICAgICAgIGJhY2tncm91bmQ6IGxpZ2h0ZW4oJHB1cnBsZSwgNDAlKTtcbiAgICAgICAgICAgIC50YWdfX3RleHQge1xuICAgICAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICAmX190ZXh0IHtcbiAgICAgICAgcGFkZGluZzogMXJlbSAxcmVtO1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG4gICAgICAgIG1hcmdpbjogYXV0bztcbiAgICB9XG4gICAgJl9fY291bnQge1xuICAgICAgICBwYWRkaW5nOiAxcmVtIDFyZW07XG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICBib3JkZXItbGVmdDogM3B4IHNvbGlkIHJnYmEoMCwgMCwgMCwgMC4xKTtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAtMXB4O1xuICAgICAgICAvKiB1Z2ggKi9cbiAgICAgICAgYmFja2dyb3VuZC1jbGlwOiBwYWRkaW5nLWJveDtcbiAgICB9XG59XG5cbi50YWdfX2Nob2ljZSBsYWJlbCB7XG4gICAgdGV4dC10cmFuc2Zvcm06IGNhcGl0YWxpemU7XG59XG5cbi50YWdzLS1mbGV4IHtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGxpIHtcbiAgICAgICAgbWFyZ2luLXJpZ2h0OiAxMHB4O1xuICAgICAgICB3aWR0aDogMTAwcHg7XG4gICAgfVxufSIsIi5jYXRlZ29yeV9saXN0LCAudGFnc19saXN0IHtcbiAgcGFkZGluZy1sZWZ0OiAwO1xuICB3aWR0aDogNDgxcHg7XG4gIC50YWcge1xuICAgIHBhZGRpbmc6IDFyZW07XG4gICAgJjpudGgtY2hpbGQob2RkKSB7XG4gICAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICB9XG4gIH1cbiAgLnRhZ19fdGV4dHtcbiAgICBkaXNwbGF5OiBpbmxpbmU7XG4gIH1cbiAgLmVkaXRfX3dyYXBwZXIge1xuICAgIGZsb2F0OiByaWdodDtcbiAgfVxuICAudGFnX19kZWxldGUge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xuICAgIC5idG4tZWRpdCB7XG4gICAgICBiYWNrZ3JvdW5kOnJlZDtcbiAgICB9XG4gIH1cbn1cblxuLnRhZ3NfbGlzdCB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtd3JhcDogd3JhcDtcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcbiAgd2lkdGg6IDEwMCU7XG4gIGhlaWdodDogNzEzcHg7XG4gIC50YWcge1xuICAgIHdpZHRoOiAzMiU7XG4gIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDo0NDJweCkge1xuICAuY2F0ZWdvcnlfbGlzdCwgLnRhZ3NfbGlzdCB7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgLnRhZ3NfbGlzdCB7XG4gICAgaGVpZ2h0OiBhdXRvO1xuICB9XG4gIC50YWdzX2xpc3QgLnRhZyB7XG4gICAgd2lkdGg6IGF1dG87XG4gIH1cbn0iLCIuc2luZ2xlIHtcbiAgJl9faGVybyB7XG4gICAgaGVpZ2h0OiA1MDBweDtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDAgMCwgMTAwJSAwLCAxMDAlIGNhbGMoMTAwJSAtIDJ2dyksIDAlIDEwMCUpO1xuICAgICY6YmVmb3JlIHtcbiAgICAgIGRpc3BsYXk6IGJsb2NrO1xuICAgICAgY29udGVudDogJyc7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICB3aWR0aDogMTAwJTtcbiAgICAgIHRvcDogMDtcbiAgICAgIHJpZ2h0OiAwO1xuICAgICAgYmFja2dyb3VuZDpcbiAgICAgICAgbGluZWFyLWdyYWRpZW50KDQ1ZGVnLCBoc2xhKDE5MCwgOTUlLCA0MyUsIDEpIDAlLCBoc2xhKDE5MCwgOTUlLCA0MyUsIDApIDcwJSksXG4gICAgICAgIGxpbmVhci1ncmFkaWVudCgxMzVkZWcsIGhzbGEoMjE5LCA5MyUsIDQ4JSwgMSkgMTAlLCBoc2xhKDIxOSwgOTMlLCA0OCUsIDApIDgwJSksXG4gICAgICAgIGxpbmVhci1ncmFkaWVudCgyMjVkZWcsIGhzbGEoMjkzLCA5MyUsIDQ4JSwgMSkgMTAlLCBoc2xhKDI5MywgOTMlLCA0OCUsIDApIDgwJSksXG4gICAgICAgIGxpbmVhci1ncmFkaWVudCgzMTVkZWcsIGhzbGEoMTMwLCA5NiUsIDQ1JSwgMSkgMTAwJSwgaHNsYSgxMzAsIDk2JSwgNDUlLCAwKSA3MCUpO1xuICAgICAgb3BhY2l0eTogMC42O1xuICAgICAgei1pbmRleDogMTtcbiAgICAgIGNsaXAtcGF0aDogcG9seWdvbigwIDAsIDEwMCUgMCwgMTAwJSBjYWxjKDEwMCUgLSAydncpLCAwJSAxMDAlKTtcbiAgICB9XG4gIH1cbiAgJl9faW1hZ2Uge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICB0b3A6IDA7XG4gICAgbGVmdDogMDtcbiAgICBvYmplY3QtZml0OiBjb3ZlcjtcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIH1cbiAgJl9fZGV0YWlscyB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgLy8gY2xpcC1wYXRoOiBwb2x5Z29uKDBweCAydncsIDEwMCUgMCwgMTAwJSBjYWxjKDEwMCUgLSAydncpLCAwJSAxMDAlKTtcbiAgICBwb3NpdGlvbjogcmVsYXRpdmU7XG4gICAgcGFkZGluZzogM3JlbTtcbiAgICBtYXJnaW4tdG9wOiAtMTByZW07XG4gICAgYm94LXNoYWRvdzogMCAwIDEwcHggMnB4IHJnYmEoMCwwLDAsMC4xNSk7XG4gIH1cbiAgJl9fbWFwIHtcbiAgICB3aWR0aDogY2FsYygxMDAlICsgNnJlbSk7XG4gICAgbWF4LXdpZHRoOiBub25lO1xuICAgIG1hcmdpbi10b3A6IC0zcmVtO1xuICAgIG1hcmdpbi1sZWZ0OiAtM3JlbTtcbiAgfVxuICAmX19sb2NhdGlvbiB7XG4gICAgbWFyZ2luOiAwO1xuICAgIG1hcmdpbi10b3A6IC0zcmVtO1xuICAgIG1hcmdpbi1yaWdodDogLTVyZW07XG4gICAgYmFja2dyb3VuZDogJGJsYWNrO1xuICAgIGNvbG9yOiB3aGl0ZTtcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XG4gICAgZmxvYXQ6IHJpZ2h0O1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBwYWRkaW5nOiAxcmVtO1xuICAgIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDg1MHB4KSB7XG4gICAgICBtYXJnaW4tcmlnaHQ6IDA7XG4gICAgfVxuICB9XG59XG4iLCIuaGVhcnQge1xuICAmX19idXR0b24ge1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG4gICAgYm9yZGVyOiAwO1xuICAgIG91dGxpbmU6IDA7XG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xuICAgICY6YWZ0ZXIge1xuICAgICAgY29udGVudDogJ+KZpe+4jyc7XG4gICAgICBmb250LXNpemU6IDIwcHg7XG4gICAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgICBvcGFjaXR5OiAwO1xuICAgICAgdG9wOiAwO1xuICAgIH1cbiAgICBzdmcge1xuICAgICAgd2lkdGg6IDI1cHg7XG4gICAgICBmaWxsOiB3aGl0ZTtcbiAgICB9XG4gICAgJi0taGVhcnRlZCB7XG4gICAgICBzdmcge1xuICAgICAgICBmaWxsOiByZWQ7XG4gICAgICB9XG4gICAgfVxuICAgICYtLWZsb2F0IHtcbiAgICAgICY6YWZ0ZXIge1xuICAgICAgICBhbmltYXRpb246IGZseSAyLjVzIDEgZWFzZS1vdXQ7XG4gICAgICB9XG4gICAgfVxuICB9XG59XG5cbkBrZXlmcmFtZXMgZmx5IHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgwKTtcbiAgICBsZWZ0OiAwO1xuICAgIG9wYWNpdHk6IDE7XG4gIH1cbiAgMjAlIHsgbGVmdDogMjBweDsgfVxuICA0MCUgeyBsZWZ0OiAtMjBweDsgfVxuICA2MCUgeyBsZWZ0OiAyMHB4OyB9XG4gIDgwJSB7IGxlZnQ6IC0yMHB4OyB9XG4gIDEwMCUge1xuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNDAwcHgpO1xuICAgIG9wYWNpdHk6IDA7XG4gICAgbGVmdDogMjBweDtcbiAgfVxufVxuIiwiLnJldmlldyB7XG4gIGJhY2tncm91bmQ6IHdoaXRlO1xuICBib3JkZXI6IDFweCBzb2xpZCAkZ3JleTtcbiAgYm9yZGVyLWJvdHRvbTogMDtcbiAgYm9yZGVyLWJvdHRvbTogMXB4IHNvbGlkICRncmV5O1xuICBtYXJnaW4tYm90dG9tOiAycmVtO1xuICBib3gtc2hhZG93OiAwIDAgMTBweCByZ2JhKDAsMCwwLDAuMSk7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgcGFkZGluZy1sZWZ0OiA1cHg7XG4gICY6YmVmb3JlIHtcbiAgICB3aWR0aDo1cHg7XG4gICAgbGVmdDogMDtcbiAgICBjb250ZW50OiAnJztcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBiYWNrZ3JvdW5kOiAkdmVydGljYWxHcmFkO1xuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgYmFja2dyb3VuZC1hdHRhY2htZW50OiBmaXhlZDtcbiAgfVxuICAmX19oZWFkZXIge1xuICAgIGJvcmRlci1ib3R0b206IDFweCBzb2xpZCAkZ3JleTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgICYgPiAqIHtcbiAgICAgIC8vIHRoaXMgaXMgZmluZSwgZG9uJ3QgZW1haWwgbWUgYWJvdXQgaXRcbiAgICAgIGJvcmRlci1yaWdodDogMXB4IHNvbGlkICRncmV5O1xuICAgICAgcGFkZGluZzogMC4ycmVtO1xuICAgICAgZGlzcGxheTogZmxleDtcbiAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgICBmbGV4OiAxO1xuICAgICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgICAmOmxhc3QtY2hpbGQge1xuICAgICAgICBib3JkZXItcmlnaHQ6IDA7XG4gICAgICB9XG4gICAgfVxuICB9XG4gICZfX2F1dGhvciB7XG4gICAganVzdGlmeS1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICAgIHBhZGRpbmctbGVmdDogIDJyZW07XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAuYXZhdGFyIHtcbiAgICAgIG1hcmdpbi1yaWdodDogMnJlbTtcbiAgICB9XG4gIH1cbiAgJl9fdGltZSB7XG4gICAgZm9udC1zaXplOiAxLjJyZW07XG4gICAgY29sb3I6IGxpZ2h0ZW4oYmxhY2ssIDYwJSk7XG4gIH1cbiAgJl9fc3RhcnMge1xuICAgIGNvbG9yOiAkeWVsbG93O1xuICB9XG4gICZfX2JvZHkge1xuICAgIHBhZGRpbmc6IDJyZW07XG4gIH1cbiAgcCB7XG4gICAgd2hpdGUtc3BhY2U6cHJlLXdyYXA7XG4gIH1cbn1cbiIsIi8qXG4gIFJldmlld2VyIEZvcm1cbiAqL1xuLnJldmlld2VyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBib3gtc2hhZG93OiAwIDBweCAxMHB4IHJnYmEoMCwwLDAsMC4yKTtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgJl9fc3RhcnMge1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG4gICAgaW5wdXQge1xuICAgICAgZGlzcGxheTogbm9uZTtcbiAgICAgICY6Y2hlY2tlZCB7XG4gICAgICAgICYgfiBsYWJlbCB7XG4gICAgICAgICAgY29sb3I6ICR5ZWxsb3c7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgICYgKyBsYWJlbCB7XG4gICAgICAgIGZvbnQtc2l6ZTogMDtcbiAgICAgICAgJjpiZWZvcmUge1xuICAgICAgICAgIGNvbnRlbnQ6ICfimIUnO1xuICAgICAgICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICAgICAgfVxuICAgICAgICAvKiBUaGVzZSBhcmUgaW4gdGhlIG9wcG9zaXRlIERPTSBvcmRlclxuICAgICAgICAgICByZS1vcmRlciB0aGVtIHRvIGJlIHZpc3VhbGx5IGluIG5vcm1hbCBvcmRlclxuICAgICAgICAgICBUaGlzIGlzIGZpbmUgZm9yIGFjY2Vzc2liaWxpdHkgYmVjYXVzZSBvdXIgbGFiZWxzIGhhdmUgZm9yKClcbiAgICAgICAgICovXG4gICAgICAgICZbZm9yPVwic3RhcjVcIl0geyBvcmRlcjogNTsgfVxuICAgICAgICAmW2Zvcj1cInN0YXI0XCJdIHsgb3JkZXI6IDQ7IH1cbiAgICAgICAgJltmb3I9XCJzdGFyM1wiXSB7IG9yZGVyOiAzOyB9XG4gICAgICAgICZbZm9yPVwic3RhcjJcIl0geyBvcmRlcjogMjsgfVxuICAgICAgICAmW2Zvcj1cInN0YXIxXCJdIHsgb3JkZXI6IDE7IH1cbiAgICAgICAgJjpob3ZlciwgJjpob3ZlciB+IGxhYmVsIHtcbiAgICAgICAgICBjb2xvcjogbGlnaHRlbigkeWVsbG93LDIwJSk7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gIH1cbiAgdGV4dGFyZWEge1xuICAgIGJvcmRlcjogMDtcbiAgICBvdXRsaW5lOiAwO1xuICAgIGZvbnQtc2l6ZTogMnJlbTtcbiAgICBwYWRkaW5nOiAycmVtO1xuICAgIGhlaWdodDogMjAwcHg7XG4gIH1cbiAgJl9fbWV0YSB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xuICAgIGJvcmRlci10b3A6IDFweCBzb2xpZCAkZ3JleTtcbiAgICAmID4gKiB7XG4gICAgICBmbGV4OiAxO1xuICAgIH1cbiAgfVxufVxuIiwiLnBhZ2luYXRpb24ge1xuICBkaXNwbGF5OiBmbGV4O1xuICBhbGlnbi1pdGVtczogY2VudGVyO1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgbWFyZ2luLXRvcDogMnJlbTtcbiAgbWFyZ2luLWJvdHRvbTogMnJlbTtcbiAgYm94LXNoYWRvdzogJHNoYWQ7XG4gICZfX25leHQge1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIHBhZGRpbmc6IDFyZW0gM3JlbSAxcmVtIDFyZW07XG4gICAgYTphZnRlciB7XG4gICAgICBtYXJnaW4tbGVmdDogMXJlbTtcbiAgICAgIGNvbnRlbnQ6ICfihpInXG4gICAgfVxuICB9XG4gICZfX3ByZXYge1xuICAgIGZsZXg6IDAgMCBhdXRvO1xuICAgIHBhZGRpbmc6IDFyZW0gMXJlbSAxcmVtIDNyZW07XG4gICAgYTpiZWZvcmUge1xuICAgICAgbWFyZ2luLXJpZ2h0OiAxcmVtO1xuICAgICAgY29udGVudDogJ+KGkCdcbiAgICB9XG4gIH1cbiAgJl9fdGV4dCB7XG4gICAgZmxleDogMyAwIGF1dG87XG4gICAgcGFkZGluZzogMXJlbTtcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gIH1cbn1cblxuLmJhY2tfX2J1dHRvbiB7XG4gIG1hcmdpbjogMzBweCAwIC0zMHB4IDVweDtcbiAgdGV4dC1kZWNvcmF0aW9uOiBub25lO1xufSIsIi5tYXAge1xuICBwYWRkaW5nOiAyMHB4O1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgYm94LXNoYWRvdzogJHNoYWQ7XG59XG4jbWFwIHtcbiAgaGVpZ2h0OiA1MDBweDtcbn1cblxuLnBvcHVwIHtcbiAgd2lkdGg6IDMwMHB4O1xuICBpbWcge1xuICAgIHdpZHRoOiAxMDAlO1xuICB9XG59XG4iLCIuaGlkZSB7XG4gICAgdGV4dC1pbmRlbnQ6IC05OTk5OTlweDtcbiAgICBmb250LXNpemU6IDA7XG59XG5cbi5idXR0b24ge1xuICAgIGJvcmRlcjogMDtcbiAgICBiYWNrZ3JvdW5kOiAkYnV0dG9uLXB1cnBsZTtcbiAgICBjb2xvcjogJHdoaXRlO1xuICAgIGZvbnQtZmFtaWx5OiAnUGFuYW1hJztcbiAgICBmb250LXdlaWdodDogNjAwO1xufVxuXG4uYnRuLXNhdmUge1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWFyZ2luOiAycmVtIGF1dG87XG59XG4uYnRuLWVkaXQge1xuICAgIHBhZGRpbmc6IDAuNWVtO1xuICAgIGxldHRlci1zcGFjaW5nOiAycHg7XG4gICAgJjpob3ZlciB7XG4gICAgICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgICAgICBjb2xvcjogcHVycGxlO1xuICAgIH1cbn1cblxuLmF2YXRhciB7XG4gICAgbWluLXdpZHRoOiA1MHB4O1xuICAgIGhlaWdodDogNTBweDtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgYWxpZ24tc2VsZjogY2VudGVyO1xufVxuXG4uY2FyZCB7XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgcGFkZGluZzogNXJlbTtcbiAgICBib3gtc2hhZG93OiAwIDFweCAxMHB4IHJnYmEoMCwgMCwgMCwgMC4xNSk7XG59XG5cbi5jYXRlZ29yeV9fY2FyZCB7XG4gICAgbWluLXdpZHRoOiA1MDBweDtcbn1cblxucHJlLmVycm9yIHtcbiAgICBwYWRkaW5nOiA1cmVtO1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGxpbmUtaGVpZ2h0OiAzO1xuICAgIHdoaXRlLXNwYWNlOiBwcmUtbGluZTtcbn0iLCIuaW5uZXJfX3Byb2R1Y3Qge1xuICAgIG1heC13aWR0aDogMTIwMHB4O1xufVxuXG4ucHJvZHVjdF9fY2FyZCB7XG4gICAgbWFyZ2luLXRvcDogNTBweDtcbiAgICBAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiAxMzk5cHgpIHtcbiAgICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG59XG5cbi5wcm9kdWN0X19pbm5lciB7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAucHJvZHVjdF9faW1nIHtcbiAgICAgICAgbWF4LXdpZHRoOiA1NTBweDtcbiAgICB9XG4gICAgLnByb2R1Y3RfX2luZm8ge1xuICAgICAgICBtYXJnaW46IC0xLjI1ZW0gMCAwIDJlbTtcbiAgICAgICAgcCB7XG4gICAgICAgICAgICBsaW5lLWhlaWdodDogMS4yNVxuICAgICAgICB9XG4gICAgfVxufVxuXG4ucHJvZHVjdF9fY29udGFjdCB7XG4gICAgYmFja2dyb3VuZC1jb2xvcjogJGxpZ2h0UHVycGxlO1xuICAgIGhlaWdodDogMTAwcHg7XG4gICAgZGlzcGxheTogZmxleDtcbiAgICAuYnRuLW1vcmUge1xuICAgICAgICBib3JkZXI6IDFweCBzb2xpZCAkd2hpdGU7XG4gICAgICAgIGJhY2tncm91bmQ6ICRsaWdodFB1cnBsZTtcbiAgICAgICAgY29sb3I6ICR3aGl0ZTtcbiAgICAgICAgbWFyZ2luOiAwIGF1dG87XG4gICAgICAgIG1hcmdpbi10b3A6IDEuNzVlbTtcbiAgICAgICAgaGVpZ2h0OiA0MHB4O1xuICAgICAgICB3aWR0aDogYXV0bztcbiAgICAgICAgJjpob3ZlciB7XG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiAkd2hpdGU7XG4gICAgICAgICAgICBjb2xvcjogJGxpZ2h0UHVycGxlO1xuICAgICAgICB9XG4gICAgfVxufVxuLnRpdGxlLS1jb2xvciB7XG4gICAgY29sb3I6ICRibGFjaztcbiAgICBzcGFuLCBwIHtcbiAgICAgICAgY29sb3I6ICRsaWdodFB1cnBsZTtcbiAgICB9XG59XG5cbi5iYWNrX19idXR0b24ge1xuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgICBzcGFuOmhvdmVyIHtcbiAgICAgICAgY3Vyc29yOiBwb2ludGVyO1xuICAgIH1cbn1cblxuQG1lZGlhIGFsbCBhbmQgKG1heC13aWR0aDoxMDI0cHgpIHtcbiAgICAucHJvZHVjdF9faW5uZXIge1xuICAgICAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICAgICAgICAucHJvZHVjdF9faW1nIHtcbiAgICAgICAgICAgIG1heC13aWR0aDogMTAwJTtcbiAgICAgICAgfVxuICAgICAgICAucHJvZHVjdF9faW5mbyB7XG4gICAgICAgICAgICBtYXJnaW46IDFlbSAwO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5AbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOjc2NXB4KSB7XG4gICAgLnByb2R1Y3RfX2NhcmQge1xuICAgICAgICBwYWRkaW5nOiAycmVtO1xuICAgIH1cbn0iLCIuYWRtaW5fX3NpZGViYXIge1xuICB3aWR0aDogMjI1cHg7XG4gIGhlaWdodDogNzV2aDtcbiAgZmxvYXQ6IGxlZnQ7XG4gIFxuICBhLm5hdl9fbGluayB7XG4gICAgdGV4dC10cmFuc2Zvcm06IG5vbmU7XG4gICAgY29sb3I6ICMzNzExNzg7XG4gICAgYWxpZ24taXRlbXM6IGxlZnQ7XG4gICAgJjpob3ZlciB7XG4gICAgICBiYWNrZ3JvdW5kOiAkbGlnaHRQdXJwbGU7XG4gICAgICBjb2xvcjogJHdoaXRlO1xuICAgIH1cbiAgfVxuICAubmF2X19saW5rLS1hY3RpdmUge1xuICAgIGJhY2tncm91bmQtY29sb3I6IzM3MTE3ODtcbiAgICBjb2xvcjogd2hpdGUgIWltcG9ydGFudDtcbiAgfVxuXG4gIC5uYXZfX1NlY3Rpb24ge1xuICAgIG1hcmdpbi10b3A6IDQzcHg7XG4gICAgbGlzdC1zdHlsZTogbm9uZTtcbiAgICBhIHtcbiAgICAgIGJvcmRlcjogbm9uZTtcbiAgICB9XG4gIH1cblxuXG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDE0MDBweCkge1xuICAgIG1hcmdpbi10b3A6IC0yLjhlbTtcbiAgfVxuXG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDkwMHB4KSB7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiBhdXRvO1xuXG4gICAgLm5hdl9fU2VjdGlvbiB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICAgICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1ldmVubHk7XG4gICAgICBtYXJnaW4tYm90dG9tOiAxN3B4O1xuICAgICAgbWFyZ2luLXRvcDogMDtcbiAgICB9XG4gIH1cbn1cblxuLmFkbWluX19tYWluIHtcbiAgbWFyZ2luOiAwIDUwcHg7XG4gIHdpZHRoOiAxMDAlO1xuXG4gIEBtZWRpYSBhbGwgYW5kIChtYXgtd2lkdGg6IDkwMHB4KSB7XG4gICAgd2lkdGg6IGF1dG87XG4gIH1cblxuICBAbWVkaWEgYWxsIGFuZCAobWF4LXdpZHRoOiA0NDJweCkge1xuICAgIG1hcmdpbjogMCAyMHB4O1xuICAgIC5jYXRlZ29yeV9fY2FyZCB7XG4gICAgICBtaW4td2lkdGg6IDMwMHB4O1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBwYWRkaW5nOiAycmVtO1xuICAgICAgLmJ0bi1zYXZle1xuICAgICAgICB3aWR0aDogMTAwJTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICBzZWxlY3Qge1xuICAgIHRleHQtdHJhbnNmb3JtOiBjYXBpdGFsaXplO1xuICB9XG59XG5cbmEuYWRtaW5fX2xpbmsge1xuICBib3JkZXItcmlnaHQ6IG5vbmUgIWltcG9ydGFudDtcbn1cblxuLmFkbWluX19lZGl0aW5nIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICB0b3A6IC0yMDVweDtcbiAgbGVmdDogMTBweDtcbiAgXG59Il19 */
/*# sourceMappingURL=style.css.map*/